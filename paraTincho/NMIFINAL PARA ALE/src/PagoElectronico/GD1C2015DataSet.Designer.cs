//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PagoElectronico {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GD1C2015DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GD1C2015DataSet : global::System.Data.DataSet {
        
        private BancosDataTable tableBancos;
        
        private CategoriaDataTable tableCategoria;
        
        private ChequeDataTable tableCheque;
        
        private ClienteDataTable tableCliente;
        
        private CuentaDataTable tableCuenta;
        
        private DepositosDataTable tableDepositos;
        
        private Estado_cuentaDataTable tableEstado_cuenta;
        
        private Estado_rolDataTable tableEstado_rol;
        
        private Estado_transaccionDataTable tableEstado_transaccion;
        
        private FuncionalidadDataTable tableFuncionalidad;
        
        private Intentos_fallidosDataTable tableIntentos_fallidos;
        
        private Intentos_loginDataTable tableIntentos_login;
        
        private LocalidadDataTable tableLocalidad;
        
        private MaestraDataTable tableMaestra;
        
        private Modificacion_cuentaDataTable tableModificacion_cuenta;
        
        private MonedaDataTable tableMoneda;
        
        private PaisDataTable tablePais;
        
        private RetirosDataTable tableRetiros;
        
        private RolDataTable tableRol;
        
        private Rol_funcionalidadDataTable tableRol_funcionalidad;
        
        private Tabla_ClienteDataTable tableTabla_Cliente;
        
        private Tabla_ClientesDataTable tableTabla_Clientes;
        
        private tabladementiritasDataTable tabletabladementiritas;
        
        private tabladementiritas2DataTable tabletabladementiritas2;
        
        private Tarjetas_creditoDataTable tableTarjetas_credito;
        
        private Tipo_DNIDataTable tableTipo_DNI;
        
        private Tipo_modificacionDataTable tableTipo_modificacion;
        
        private TransaccionesDataTable tableTransacciones;
        
        private TransferenciasDataTable tableTransferencias;
        
        private UsuarioDataTable tableUsuario;
        
        private Usuario_rolDataTable tableUsuario_rol;
        
        private global::System.Data.DataRelation relationFK__Bancos__Cod_pais__02FC7413;
        
        private global::System.Data.DataRelation relationFK__Cheque__Cod_banc__160F4887;
        
        private global::System.Data.DataRelation relationFK__Cheque__Cod_clie__17036CC0;
        
        private global::System.Data.DataRelation relationFK__Cliente__Cod_pai__2F10007B;
        
        private global::System.Data.DataRelation relationFK__Cliente__Cod_usu__300424B4;
        
        private global::System.Data.DataRelation relationFK__Cliente__Localid__30F848ED;
        
        private global::System.Data.DataRelation relationFK__Cuenta__Codigo_c__619B8048;
        
        private global::System.Data.DataRelation relationFK__Cuenta__Codigo_c__628FA481;
        
        private global::System.Data.DataRelation relationFK__Cuenta__Codigo_e__6383C8BA;
        
        private global::System.Data.DataRelation relationFK__Cuenta__Codigo_m__60A75C0F;
        
        private global::System.Data.DataRelation relationFK__Cuenta__Codigo_p__5FB337D6;
        
        private global::System.Data.DataRelation relationFK__Depositos__Cod_c__0E6E26BF;
        
        private global::System.Data.DataRelation relationFK__Depositos__Cod_m__0F624AF8;
        
        private global::System.Data.DataRelation relationFK__Depositos__Cod_T__10566F31;
        
        private global::System.Data.DataRelation relationFK__Intentos___Cod_l__3A81B327;
        
        private global::System.Data.DataRelation relationFK__Intentos___Codig__35BCFE0A;
        
        private global::System.Data.DataRelation relationFK__Modificac__Cod_c__76969D2E;
        
        private global::System.Data.DataRelation relationFK__Modificac__Cod_t__75A278F5;
        
        private global::System.Data.DataRelation relationFK__Modificac__Cod_t__778AC167;
        
        private global::System.Data.DataRelation relationFK__Retiros__Cod_che__1CBC4616;
        
        private global::System.Data.DataRelation relationFK__Retiros__Cod_cue__1BC821DD;
        
        private global::System.Data.DataRelation relationFK__Rol__Cod_estado__4316F928;
        
        private global::System.Data.DataRelation relationFK__Rol_funci__Cod_f__4BAC3F29;
        
        private global::System.Data.DataRelation relationFK__Rol_funci__Cod_f__4CA06362;
        
        private global::System.Data.DataRelation relationFK__Tarjetas___Cod_c__07C12930;
        
        private global::System.Data.DataRelation relationFK__Tarjetas___Cod_e__08B54D69;
        
        private global::System.Data.DataRelation relationFK__Transacci__Cod_e__6D0D32F4;
        
        private global::System.Data.DataRelation relationFK__Transfere__Cod_c__7C4F7684;
        
        private global::System.Data.DataRelation relationFK__Transfere__Cod_c__7D439ABD;
        
        private global::System.Data.DataRelation relationFK__Transfere__Cod_t__7E37BEF6;
        
        private global::System.Data.DataRelation relationFK__Usuario_r__Cod_r__45F365D3;
        
        private global::System.Data.DataRelation relationFK__Usuario_r__Cod_u__44FF419A;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GD1C2015DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GD1C2015DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Bancos"] != null)) {
                    base.Tables.Add(new BancosDataTable(ds.Tables["Bancos"]));
                }
                if ((ds.Tables["Categoria"] != null)) {
                    base.Tables.Add(new CategoriaDataTable(ds.Tables["Categoria"]));
                }
                if ((ds.Tables["Cheque"] != null)) {
                    base.Tables.Add(new ChequeDataTable(ds.Tables["Cheque"]));
                }
                if ((ds.Tables["Cliente"] != null)) {
                    base.Tables.Add(new ClienteDataTable(ds.Tables["Cliente"]));
                }
                if ((ds.Tables["Cuenta"] != null)) {
                    base.Tables.Add(new CuentaDataTable(ds.Tables["Cuenta"]));
                }
                if ((ds.Tables["Depositos"] != null)) {
                    base.Tables.Add(new DepositosDataTable(ds.Tables["Depositos"]));
                }
                if ((ds.Tables["Estado_cuenta"] != null)) {
                    base.Tables.Add(new Estado_cuentaDataTable(ds.Tables["Estado_cuenta"]));
                }
                if ((ds.Tables["Estado_rol"] != null)) {
                    base.Tables.Add(new Estado_rolDataTable(ds.Tables["Estado_rol"]));
                }
                if ((ds.Tables["Estado_transaccion"] != null)) {
                    base.Tables.Add(new Estado_transaccionDataTable(ds.Tables["Estado_transaccion"]));
                }
                if ((ds.Tables["Funcionalidad"] != null)) {
                    base.Tables.Add(new FuncionalidadDataTable(ds.Tables["Funcionalidad"]));
                }
                if ((ds.Tables["Intentos_fallidos"] != null)) {
                    base.Tables.Add(new Intentos_fallidosDataTable(ds.Tables["Intentos_fallidos"]));
                }
                if ((ds.Tables["Intentos_login"] != null)) {
                    base.Tables.Add(new Intentos_loginDataTable(ds.Tables["Intentos_login"]));
                }
                if ((ds.Tables["Localidad"] != null)) {
                    base.Tables.Add(new LocalidadDataTable(ds.Tables["Localidad"]));
                }
                if ((ds.Tables["Maestra"] != null)) {
                    base.Tables.Add(new MaestraDataTable(ds.Tables["Maestra"]));
                }
                if ((ds.Tables["Modificacion_cuenta"] != null)) {
                    base.Tables.Add(new Modificacion_cuentaDataTable(ds.Tables["Modificacion_cuenta"]));
                }
                if ((ds.Tables["Moneda"] != null)) {
                    base.Tables.Add(new MonedaDataTable(ds.Tables["Moneda"]));
                }
                if ((ds.Tables["Pais"] != null)) {
                    base.Tables.Add(new PaisDataTable(ds.Tables["Pais"]));
                }
                if ((ds.Tables["Retiros"] != null)) {
                    base.Tables.Add(new RetirosDataTable(ds.Tables["Retiros"]));
                }
                if ((ds.Tables["Rol"] != null)) {
                    base.Tables.Add(new RolDataTable(ds.Tables["Rol"]));
                }
                if ((ds.Tables["Rol_funcionalidad"] != null)) {
                    base.Tables.Add(new Rol_funcionalidadDataTable(ds.Tables["Rol_funcionalidad"]));
                }
                if ((ds.Tables["Tabla_Cliente"] != null)) {
                    base.Tables.Add(new Tabla_ClienteDataTable(ds.Tables["Tabla_Cliente"]));
                }
                if ((ds.Tables["Tabla_Clientes"] != null)) {
                    base.Tables.Add(new Tabla_ClientesDataTable(ds.Tables["Tabla_Clientes"]));
                }
                if ((ds.Tables["tabladementiritas"] != null)) {
                    base.Tables.Add(new tabladementiritasDataTable(ds.Tables["tabladementiritas"]));
                }
                if ((ds.Tables["tabladementiritas2"] != null)) {
                    base.Tables.Add(new tabladementiritas2DataTable(ds.Tables["tabladementiritas2"]));
                }
                if ((ds.Tables["Tarjetas_credito"] != null)) {
                    base.Tables.Add(new Tarjetas_creditoDataTable(ds.Tables["Tarjetas_credito"]));
                }
                if ((ds.Tables["Tipo_DNI"] != null)) {
                    base.Tables.Add(new Tipo_DNIDataTable(ds.Tables["Tipo_DNI"]));
                }
                if ((ds.Tables["Tipo_modificacion"] != null)) {
                    base.Tables.Add(new Tipo_modificacionDataTable(ds.Tables["Tipo_modificacion"]));
                }
                if ((ds.Tables["Transacciones"] != null)) {
                    base.Tables.Add(new TransaccionesDataTable(ds.Tables["Transacciones"]));
                }
                if ((ds.Tables["Transferencias"] != null)) {
                    base.Tables.Add(new TransferenciasDataTable(ds.Tables["Transferencias"]));
                }
                if ((ds.Tables["Usuario"] != null)) {
                    base.Tables.Add(new UsuarioDataTable(ds.Tables["Usuario"]));
                }
                if ((ds.Tables["Usuario_rol"] != null)) {
                    base.Tables.Add(new Usuario_rolDataTable(ds.Tables["Usuario_rol"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BancosDataTable Bancos {
            get {
                return this.tableBancos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CategoriaDataTable Categoria {
            get {
                return this.tableCategoria;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChequeDataTable Cheque {
            get {
                return this.tableCheque;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClienteDataTable Cliente {
            get {
                return this.tableCliente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CuentaDataTable Cuenta {
            get {
                return this.tableCuenta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepositosDataTable Depositos {
            get {
                return this.tableDepositos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Estado_cuentaDataTable Estado_cuenta {
            get {
                return this.tableEstado_cuenta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Estado_rolDataTable Estado_rol {
            get {
                return this.tableEstado_rol;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Estado_transaccionDataTable Estado_transaccion {
            get {
                return this.tableEstado_transaccion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FuncionalidadDataTable Funcionalidad {
            get {
                return this.tableFuncionalidad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Intentos_fallidosDataTable Intentos_fallidos {
            get {
                return this.tableIntentos_fallidos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Intentos_loginDataTable Intentos_login {
            get {
                return this.tableIntentos_login;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LocalidadDataTable Localidad {
            get {
                return this.tableLocalidad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MaestraDataTable Maestra {
            get {
                return this.tableMaestra;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Modificacion_cuentaDataTable Modificacion_cuenta {
            get {
                return this.tableModificacion_cuenta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonedaDataTable Moneda {
            get {
                return this.tableMoneda;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaisDataTable Pais {
            get {
                return this.tablePais;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RetirosDataTable Retiros {
            get {
                return this.tableRetiros;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RolDataTable Rol {
            get {
                return this.tableRol;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Rol_funcionalidadDataTable Rol_funcionalidad {
            get {
                return this.tableRol_funcionalidad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tabla_ClienteDataTable Tabla_Cliente {
            get {
                return this.tableTabla_Cliente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tabla_ClientesDataTable Tabla_Clientes {
            get {
                return this.tableTabla_Clientes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabladementiritasDataTable tabladementiritas {
            get {
                return this.tabletabladementiritas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tabladementiritas2DataTable tabladementiritas2 {
            get {
                return this.tabletabladementiritas2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tarjetas_creditoDataTable Tarjetas_credito {
            get {
                return this.tableTarjetas_credito;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tipo_DNIDataTable Tipo_DNI {
            get {
                return this.tableTipo_DNI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tipo_modificacionDataTable Tipo_modificacion {
            get {
                return this.tableTipo_modificacion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransaccionesDataTable Transacciones {
            get {
                return this.tableTransacciones;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TransferenciasDataTable Transferencias {
            get {
                return this.tableTransferencias;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsuarioDataTable Usuario {
            get {
                return this.tableUsuario;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Usuario_rolDataTable Usuario_rol {
            get {
                return this.tableUsuario_rol;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GD1C2015DataSet cln = ((GD1C2015DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Bancos"] != null)) {
                    base.Tables.Add(new BancosDataTable(ds.Tables["Bancos"]));
                }
                if ((ds.Tables["Categoria"] != null)) {
                    base.Tables.Add(new CategoriaDataTable(ds.Tables["Categoria"]));
                }
                if ((ds.Tables["Cheque"] != null)) {
                    base.Tables.Add(new ChequeDataTable(ds.Tables["Cheque"]));
                }
                if ((ds.Tables["Cliente"] != null)) {
                    base.Tables.Add(new ClienteDataTable(ds.Tables["Cliente"]));
                }
                if ((ds.Tables["Cuenta"] != null)) {
                    base.Tables.Add(new CuentaDataTable(ds.Tables["Cuenta"]));
                }
                if ((ds.Tables["Depositos"] != null)) {
                    base.Tables.Add(new DepositosDataTable(ds.Tables["Depositos"]));
                }
                if ((ds.Tables["Estado_cuenta"] != null)) {
                    base.Tables.Add(new Estado_cuentaDataTable(ds.Tables["Estado_cuenta"]));
                }
                if ((ds.Tables["Estado_rol"] != null)) {
                    base.Tables.Add(new Estado_rolDataTable(ds.Tables["Estado_rol"]));
                }
                if ((ds.Tables["Estado_transaccion"] != null)) {
                    base.Tables.Add(new Estado_transaccionDataTable(ds.Tables["Estado_transaccion"]));
                }
                if ((ds.Tables["Funcionalidad"] != null)) {
                    base.Tables.Add(new FuncionalidadDataTable(ds.Tables["Funcionalidad"]));
                }
                if ((ds.Tables["Intentos_fallidos"] != null)) {
                    base.Tables.Add(new Intentos_fallidosDataTable(ds.Tables["Intentos_fallidos"]));
                }
                if ((ds.Tables["Intentos_login"] != null)) {
                    base.Tables.Add(new Intentos_loginDataTable(ds.Tables["Intentos_login"]));
                }
                if ((ds.Tables["Localidad"] != null)) {
                    base.Tables.Add(new LocalidadDataTable(ds.Tables["Localidad"]));
                }
                if ((ds.Tables["Maestra"] != null)) {
                    base.Tables.Add(new MaestraDataTable(ds.Tables["Maestra"]));
                }
                if ((ds.Tables["Modificacion_cuenta"] != null)) {
                    base.Tables.Add(new Modificacion_cuentaDataTable(ds.Tables["Modificacion_cuenta"]));
                }
                if ((ds.Tables["Moneda"] != null)) {
                    base.Tables.Add(new MonedaDataTable(ds.Tables["Moneda"]));
                }
                if ((ds.Tables["Pais"] != null)) {
                    base.Tables.Add(new PaisDataTable(ds.Tables["Pais"]));
                }
                if ((ds.Tables["Retiros"] != null)) {
                    base.Tables.Add(new RetirosDataTable(ds.Tables["Retiros"]));
                }
                if ((ds.Tables["Rol"] != null)) {
                    base.Tables.Add(new RolDataTable(ds.Tables["Rol"]));
                }
                if ((ds.Tables["Rol_funcionalidad"] != null)) {
                    base.Tables.Add(new Rol_funcionalidadDataTable(ds.Tables["Rol_funcionalidad"]));
                }
                if ((ds.Tables["Tabla_Cliente"] != null)) {
                    base.Tables.Add(new Tabla_ClienteDataTable(ds.Tables["Tabla_Cliente"]));
                }
                if ((ds.Tables["Tabla_Clientes"] != null)) {
                    base.Tables.Add(new Tabla_ClientesDataTable(ds.Tables["Tabla_Clientes"]));
                }
                if ((ds.Tables["tabladementiritas"] != null)) {
                    base.Tables.Add(new tabladementiritasDataTable(ds.Tables["tabladementiritas"]));
                }
                if ((ds.Tables["tabladementiritas2"] != null)) {
                    base.Tables.Add(new tabladementiritas2DataTable(ds.Tables["tabladementiritas2"]));
                }
                if ((ds.Tables["Tarjetas_credito"] != null)) {
                    base.Tables.Add(new Tarjetas_creditoDataTable(ds.Tables["Tarjetas_credito"]));
                }
                if ((ds.Tables["Tipo_DNI"] != null)) {
                    base.Tables.Add(new Tipo_DNIDataTable(ds.Tables["Tipo_DNI"]));
                }
                if ((ds.Tables["Tipo_modificacion"] != null)) {
                    base.Tables.Add(new Tipo_modificacionDataTable(ds.Tables["Tipo_modificacion"]));
                }
                if ((ds.Tables["Transacciones"] != null)) {
                    base.Tables.Add(new TransaccionesDataTable(ds.Tables["Transacciones"]));
                }
                if ((ds.Tables["Transferencias"] != null)) {
                    base.Tables.Add(new TransferenciasDataTable(ds.Tables["Transferencias"]));
                }
                if ((ds.Tables["Usuario"] != null)) {
                    base.Tables.Add(new UsuarioDataTable(ds.Tables["Usuario"]));
                }
                if ((ds.Tables["Usuario_rol"] != null)) {
                    base.Tables.Add(new Usuario_rolDataTable(ds.Tables["Usuario_rol"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableBancos = ((BancosDataTable)(base.Tables["Bancos"]));
            if ((initTable == true)) {
                if ((this.tableBancos != null)) {
                    this.tableBancos.InitVars();
                }
            }
            this.tableCategoria = ((CategoriaDataTable)(base.Tables["Categoria"]));
            if ((initTable == true)) {
                if ((this.tableCategoria != null)) {
                    this.tableCategoria.InitVars();
                }
            }
            this.tableCheque = ((ChequeDataTable)(base.Tables["Cheque"]));
            if ((initTable == true)) {
                if ((this.tableCheque != null)) {
                    this.tableCheque.InitVars();
                }
            }
            this.tableCliente = ((ClienteDataTable)(base.Tables["Cliente"]));
            if ((initTable == true)) {
                if ((this.tableCliente != null)) {
                    this.tableCliente.InitVars();
                }
            }
            this.tableCuenta = ((CuentaDataTable)(base.Tables["Cuenta"]));
            if ((initTable == true)) {
                if ((this.tableCuenta != null)) {
                    this.tableCuenta.InitVars();
                }
            }
            this.tableDepositos = ((DepositosDataTable)(base.Tables["Depositos"]));
            if ((initTable == true)) {
                if ((this.tableDepositos != null)) {
                    this.tableDepositos.InitVars();
                }
            }
            this.tableEstado_cuenta = ((Estado_cuentaDataTable)(base.Tables["Estado_cuenta"]));
            if ((initTable == true)) {
                if ((this.tableEstado_cuenta != null)) {
                    this.tableEstado_cuenta.InitVars();
                }
            }
            this.tableEstado_rol = ((Estado_rolDataTable)(base.Tables["Estado_rol"]));
            if ((initTable == true)) {
                if ((this.tableEstado_rol != null)) {
                    this.tableEstado_rol.InitVars();
                }
            }
            this.tableEstado_transaccion = ((Estado_transaccionDataTable)(base.Tables["Estado_transaccion"]));
            if ((initTable == true)) {
                if ((this.tableEstado_transaccion != null)) {
                    this.tableEstado_transaccion.InitVars();
                }
            }
            this.tableFuncionalidad = ((FuncionalidadDataTable)(base.Tables["Funcionalidad"]));
            if ((initTable == true)) {
                if ((this.tableFuncionalidad != null)) {
                    this.tableFuncionalidad.InitVars();
                }
            }
            this.tableIntentos_fallidos = ((Intentos_fallidosDataTable)(base.Tables["Intentos_fallidos"]));
            if ((initTable == true)) {
                if ((this.tableIntentos_fallidos != null)) {
                    this.tableIntentos_fallidos.InitVars();
                }
            }
            this.tableIntentos_login = ((Intentos_loginDataTable)(base.Tables["Intentos_login"]));
            if ((initTable == true)) {
                if ((this.tableIntentos_login != null)) {
                    this.tableIntentos_login.InitVars();
                }
            }
            this.tableLocalidad = ((LocalidadDataTable)(base.Tables["Localidad"]));
            if ((initTable == true)) {
                if ((this.tableLocalidad != null)) {
                    this.tableLocalidad.InitVars();
                }
            }
            this.tableMaestra = ((MaestraDataTable)(base.Tables["Maestra"]));
            if ((initTable == true)) {
                if ((this.tableMaestra != null)) {
                    this.tableMaestra.InitVars();
                }
            }
            this.tableModificacion_cuenta = ((Modificacion_cuentaDataTable)(base.Tables["Modificacion_cuenta"]));
            if ((initTable == true)) {
                if ((this.tableModificacion_cuenta != null)) {
                    this.tableModificacion_cuenta.InitVars();
                }
            }
            this.tableMoneda = ((MonedaDataTable)(base.Tables["Moneda"]));
            if ((initTable == true)) {
                if ((this.tableMoneda != null)) {
                    this.tableMoneda.InitVars();
                }
            }
            this.tablePais = ((PaisDataTable)(base.Tables["Pais"]));
            if ((initTable == true)) {
                if ((this.tablePais != null)) {
                    this.tablePais.InitVars();
                }
            }
            this.tableRetiros = ((RetirosDataTable)(base.Tables["Retiros"]));
            if ((initTable == true)) {
                if ((this.tableRetiros != null)) {
                    this.tableRetiros.InitVars();
                }
            }
            this.tableRol = ((RolDataTable)(base.Tables["Rol"]));
            if ((initTable == true)) {
                if ((this.tableRol != null)) {
                    this.tableRol.InitVars();
                }
            }
            this.tableRol_funcionalidad = ((Rol_funcionalidadDataTable)(base.Tables["Rol_funcionalidad"]));
            if ((initTable == true)) {
                if ((this.tableRol_funcionalidad != null)) {
                    this.tableRol_funcionalidad.InitVars();
                }
            }
            this.tableTabla_Cliente = ((Tabla_ClienteDataTable)(base.Tables["Tabla_Cliente"]));
            if ((initTable == true)) {
                if ((this.tableTabla_Cliente != null)) {
                    this.tableTabla_Cliente.InitVars();
                }
            }
            this.tableTabla_Clientes = ((Tabla_ClientesDataTable)(base.Tables["Tabla_Clientes"]));
            if ((initTable == true)) {
                if ((this.tableTabla_Clientes != null)) {
                    this.tableTabla_Clientes.InitVars();
                }
            }
            this.tabletabladementiritas = ((tabladementiritasDataTable)(base.Tables["tabladementiritas"]));
            if ((initTable == true)) {
                if ((this.tabletabladementiritas != null)) {
                    this.tabletabladementiritas.InitVars();
                }
            }
            this.tabletabladementiritas2 = ((tabladementiritas2DataTable)(base.Tables["tabladementiritas2"]));
            if ((initTable == true)) {
                if ((this.tabletabladementiritas2 != null)) {
                    this.tabletabladementiritas2.InitVars();
                }
            }
            this.tableTarjetas_credito = ((Tarjetas_creditoDataTable)(base.Tables["Tarjetas_credito"]));
            if ((initTable == true)) {
                if ((this.tableTarjetas_credito != null)) {
                    this.tableTarjetas_credito.InitVars();
                }
            }
            this.tableTipo_DNI = ((Tipo_DNIDataTable)(base.Tables["Tipo_DNI"]));
            if ((initTable == true)) {
                if ((this.tableTipo_DNI != null)) {
                    this.tableTipo_DNI.InitVars();
                }
            }
            this.tableTipo_modificacion = ((Tipo_modificacionDataTable)(base.Tables["Tipo_modificacion"]));
            if ((initTable == true)) {
                if ((this.tableTipo_modificacion != null)) {
                    this.tableTipo_modificacion.InitVars();
                }
            }
            this.tableTransacciones = ((TransaccionesDataTable)(base.Tables["Transacciones"]));
            if ((initTable == true)) {
                if ((this.tableTransacciones != null)) {
                    this.tableTransacciones.InitVars();
                }
            }
            this.tableTransferencias = ((TransferenciasDataTable)(base.Tables["Transferencias"]));
            if ((initTable == true)) {
                if ((this.tableTransferencias != null)) {
                    this.tableTransferencias.InitVars();
                }
            }
            this.tableUsuario = ((UsuarioDataTable)(base.Tables["Usuario"]));
            if ((initTable == true)) {
                if ((this.tableUsuario != null)) {
                    this.tableUsuario.InitVars();
                }
            }
            this.tableUsuario_rol = ((Usuario_rolDataTable)(base.Tables["Usuario_rol"]));
            if ((initTable == true)) {
                if ((this.tableUsuario_rol != null)) {
                    this.tableUsuario_rol.InitVars();
                }
            }
            this.relationFK__Bancos__Cod_pais__02FC7413 = this.Relations["FK__Bancos__Cod_pais__02FC7413"];
            this.relationFK__Cheque__Cod_banc__160F4887 = this.Relations["FK__Cheque__Cod_banc__160F4887"];
            this.relationFK__Cheque__Cod_clie__17036CC0 = this.Relations["FK__Cheque__Cod_clie__17036CC0"];
            this.relationFK__Cliente__Cod_pai__2F10007B = this.Relations["FK__Cliente__Cod_pai__2F10007B"];
            this.relationFK__Cliente__Cod_usu__300424B4 = this.Relations["FK__Cliente__Cod_usu__300424B4"];
            this.relationFK__Cliente__Localid__30F848ED = this.Relations["FK__Cliente__Localid__30F848ED"];
            this.relationFK__Cuenta__Codigo_c__619B8048 = this.Relations["FK__Cuenta__Codigo_c__619B8048"];
            this.relationFK__Cuenta__Codigo_c__628FA481 = this.Relations["FK__Cuenta__Codigo_c__628FA481"];
            this.relationFK__Cuenta__Codigo_e__6383C8BA = this.Relations["FK__Cuenta__Codigo_e__6383C8BA"];
            this.relationFK__Cuenta__Codigo_m__60A75C0F = this.Relations["FK__Cuenta__Codigo_m__60A75C0F"];
            this.relationFK__Cuenta__Codigo_p__5FB337D6 = this.Relations["FK__Cuenta__Codigo_p__5FB337D6"];
            this.relationFK__Depositos__Cod_c__0E6E26BF = this.Relations["FK__Depositos__Cod_c__0E6E26BF"];
            this.relationFK__Depositos__Cod_m__0F624AF8 = this.Relations["FK__Depositos__Cod_m__0F624AF8"];
            this.relationFK__Depositos__Cod_T__10566F31 = this.Relations["FK__Depositos__Cod_T__10566F31"];
            this.relationFK__Intentos___Cod_l__3A81B327 = this.Relations["FK__Intentos___Cod_l__3A81B327"];
            this.relationFK__Intentos___Codig__35BCFE0A = this.Relations["FK__Intentos___Codig__35BCFE0A"];
            this.relationFK__Modificac__Cod_c__76969D2E = this.Relations["FK__Modificac__Cod_c__76969D2E"];
            this.relationFK__Modificac__Cod_t__75A278F5 = this.Relations["FK__Modificac__Cod_t__75A278F5"];
            this.relationFK__Modificac__Cod_t__778AC167 = this.Relations["FK__Modificac__Cod_t__778AC167"];
            this.relationFK__Retiros__Cod_che__1CBC4616 = this.Relations["FK__Retiros__Cod_che__1CBC4616"];
            this.relationFK__Retiros__Cod_cue__1BC821DD = this.Relations["FK__Retiros__Cod_cue__1BC821DD"];
            this.relationFK__Rol__Cod_estado__4316F928 = this.Relations["FK__Rol__Cod_estado__4316F928"];
            this.relationFK__Rol_funci__Cod_f__4BAC3F29 = this.Relations["FK__Rol_funci__Cod_f__4BAC3F29"];
            this.relationFK__Rol_funci__Cod_f__4CA06362 = this.Relations["FK__Rol_funci__Cod_f__4CA06362"];
            this.relationFK__Tarjetas___Cod_c__07C12930 = this.Relations["FK__Tarjetas___Cod_c__07C12930"];
            this.relationFK__Tarjetas___Cod_e__08B54D69 = this.Relations["FK__Tarjetas___Cod_e__08B54D69"];
            this.relationFK__Transacci__Cod_e__6D0D32F4 = this.Relations["FK__Transacci__Cod_e__6D0D32F4"];
            this.relationFK__Transfere__Cod_c__7C4F7684 = this.Relations["FK__Transfere__Cod_c__7C4F7684"];
            this.relationFK__Transfere__Cod_c__7D439ABD = this.Relations["FK__Transfere__Cod_c__7D439ABD"];
            this.relationFK__Transfere__Cod_t__7E37BEF6 = this.Relations["FK__Transfere__Cod_t__7E37BEF6"];
            this.relationFK__Usuario_r__Cod_r__45F365D3 = this.Relations["FK__Usuario_r__Cod_r__45F365D3"];
            this.relationFK__Usuario_r__Cod_u__44FF419A = this.Relations["FK__Usuario_r__Cod_u__44FF419A"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GD1C2015DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GD1C2015DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBancos = new BancosDataTable();
            base.Tables.Add(this.tableBancos);
            this.tableCategoria = new CategoriaDataTable();
            base.Tables.Add(this.tableCategoria);
            this.tableCheque = new ChequeDataTable();
            base.Tables.Add(this.tableCheque);
            this.tableCliente = new ClienteDataTable();
            base.Tables.Add(this.tableCliente);
            this.tableCuenta = new CuentaDataTable();
            base.Tables.Add(this.tableCuenta);
            this.tableDepositos = new DepositosDataTable();
            base.Tables.Add(this.tableDepositos);
            this.tableEstado_cuenta = new Estado_cuentaDataTable();
            base.Tables.Add(this.tableEstado_cuenta);
            this.tableEstado_rol = new Estado_rolDataTable();
            base.Tables.Add(this.tableEstado_rol);
            this.tableEstado_transaccion = new Estado_transaccionDataTable();
            base.Tables.Add(this.tableEstado_transaccion);
            this.tableFuncionalidad = new FuncionalidadDataTable();
            base.Tables.Add(this.tableFuncionalidad);
            this.tableIntentos_fallidos = new Intentos_fallidosDataTable();
            base.Tables.Add(this.tableIntentos_fallidos);
            this.tableIntentos_login = new Intentos_loginDataTable();
            base.Tables.Add(this.tableIntentos_login);
            this.tableLocalidad = new LocalidadDataTable();
            base.Tables.Add(this.tableLocalidad);
            this.tableMaestra = new MaestraDataTable();
            base.Tables.Add(this.tableMaestra);
            this.tableModificacion_cuenta = new Modificacion_cuentaDataTable();
            base.Tables.Add(this.tableModificacion_cuenta);
            this.tableMoneda = new MonedaDataTable();
            base.Tables.Add(this.tableMoneda);
            this.tablePais = new PaisDataTable();
            base.Tables.Add(this.tablePais);
            this.tableRetiros = new RetirosDataTable();
            base.Tables.Add(this.tableRetiros);
            this.tableRol = new RolDataTable();
            base.Tables.Add(this.tableRol);
            this.tableRol_funcionalidad = new Rol_funcionalidadDataTable();
            base.Tables.Add(this.tableRol_funcionalidad);
            this.tableTabla_Cliente = new Tabla_ClienteDataTable();
            base.Tables.Add(this.tableTabla_Cliente);
            this.tableTabla_Clientes = new Tabla_ClientesDataTable();
            base.Tables.Add(this.tableTabla_Clientes);
            this.tabletabladementiritas = new tabladementiritasDataTable();
            base.Tables.Add(this.tabletabladementiritas);
            this.tabletabladementiritas2 = new tabladementiritas2DataTable();
            base.Tables.Add(this.tabletabladementiritas2);
            this.tableTarjetas_credito = new Tarjetas_creditoDataTable();
            base.Tables.Add(this.tableTarjetas_credito);
            this.tableTipo_DNI = new Tipo_DNIDataTable();
            base.Tables.Add(this.tableTipo_DNI);
            this.tableTipo_modificacion = new Tipo_modificacionDataTable();
            base.Tables.Add(this.tableTipo_modificacion);
            this.tableTransacciones = new TransaccionesDataTable();
            base.Tables.Add(this.tableTransacciones);
            this.tableTransferencias = new TransferenciasDataTable();
            base.Tables.Add(this.tableTransferencias);
            this.tableUsuario = new UsuarioDataTable();
            base.Tables.Add(this.tableUsuario);
            this.tableUsuario_rol = new Usuario_rolDataTable();
            base.Tables.Add(this.tableUsuario_rol);
            this.relationFK__Bancos__Cod_pais__02FC7413 = new global::System.Data.DataRelation("FK__Bancos__Cod_pais__02FC7413", new global::System.Data.DataColumn[] {
                        this.tablePais.Id_PaisColumn}, new global::System.Data.DataColumn[] {
                        this.tableBancos.Cod_paisColumn}, false);
            this.Relations.Add(this.relationFK__Bancos__Cod_pais__02FC7413);
            this.relationFK__Cheque__Cod_banc__160F4887 = new global::System.Data.DataRelation("FK__Cheque__Cod_banc__160F4887", new global::System.Data.DataColumn[] {
                        this.tableBancos.Id_bancoColumn}, new global::System.Data.DataColumn[] {
                        this.tableCheque.Cod_bancoColumn}, false);
            this.Relations.Add(this.relationFK__Cheque__Cod_banc__160F4887);
            this.relationFK__Cheque__Cod_clie__17036CC0 = new global::System.Data.DataRelation("FK__Cheque__Cod_clie__17036CC0", new global::System.Data.DataColumn[] {
                        this.tableCliente.Id_clienteColumn}, new global::System.Data.DataColumn[] {
                        this.tableCheque.Cod_clienteColumn}, false);
            this.Relations.Add(this.relationFK__Cheque__Cod_clie__17036CC0);
            this.relationFK__Cliente__Cod_pai__2F10007B = new global::System.Data.DataRelation("FK__Cliente__Cod_pai__2F10007B", new global::System.Data.DataColumn[] {
                        this.tablePais.Id_PaisColumn}, new global::System.Data.DataColumn[] {
                        this.tableCliente.Cod_paisColumn}, false);
            this.Relations.Add(this.relationFK__Cliente__Cod_pai__2F10007B);
            this.relationFK__Cliente__Cod_usu__300424B4 = new global::System.Data.DataRelation("FK__Cliente__Cod_usu__300424B4", new global::System.Data.DataColumn[] {
                        this.tableUsuario.Id_usuarioColumn}, new global::System.Data.DataColumn[] {
                        this.tableCliente.Cod_usuarioColumn}, false);
            this.Relations.Add(this.relationFK__Cliente__Cod_usu__300424B4);
            this.relationFK__Cliente__Localid__30F848ED = new global::System.Data.DataRelation("FK__Cliente__Localid__30F848ED", new global::System.Data.DataColumn[] {
                        this.tableLocalidad.Id_localidadColumn}, new global::System.Data.DataColumn[] {
                        this.tableCliente.LocalidadColumn}, false);
            this.Relations.Add(this.relationFK__Cliente__Localid__30F848ED);
            this.relationFK__Cuenta__Codigo_c__619B8048 = new global::System.Data.DataRelation("FK__Cuenta__Codigo_c__619B8048", new global::System.Data.DataColumn[] {
                        this.tableCategoria.Id_categoriaColumn}, new global::System.Data.DataColumn[] {
                        this.tableCuenta.Codigo_categoriaColumn}, false);
            this.Relations.Add(this.relationFK__Cuenta__Codigo_c__619B8048);
            this.relationFK__Cuenta__Codigo_c__628FA481 = new global::System.Data.DataRelation("FK__Cuenta__Codigo_c__628FA481", new global::System.Data.DataColumn[] {
                        this.tableCliente.Id_clienteColumn}, new global::System.Data.DataColumn[] {
                        this.tableCuenta.Codigo_clienteColumn}, false);
            this.Relations.Add(this.relationFK__Cuenta__Codigo_c__628FA481);
            this.relationFK__Cuenta__Codigo_e__6383C8BA = new global::System.Data.DataRelation("FK__Cuenta__Codigo_e__6383C8BA", new global::System.Data.DataColumn[] {
                        this.tableEstado_cuenta.Id_estadoColumn}, new global::System.Data.DataColumn[] {
                        this.tableCuenta.Codigo_estadoColumn}, false);
            this.Relations.Add(this.relationFK__Cuenta__Codigo_e__6383C8BA);
            this.relationFK__Cuenta__Codigo_m__60A75C0F = new global::System.Data.DataRelation("FK__Cuenta__Codigo_m__60A75C0F", new global::System.Data.DataColumn[] {
                        this.tableMoneda.Id_monedaColumn}, new global::System.Data.DataColumn[] {
                        this.tableCuenta.Codigo_monedaColumn}, false);
            this.Relations.Add(this.relationFK__Cuenta__Codigo_m__60A75C0F);
            this.relationFK__Cuenta__Codigo_p__5FB337D6 = new global::System.Data.DataRelation("FK__Cuenta__Codigo_p__5FB337D6", new global::System.Data.DataColumn[] {
                        this.tablePais.Id_PaisColumn}, new global::System.Data.DataColumn[] {
                        this.tableCuenta.Codigo_paisColumn}, false);
            this.Relations.Add(this.relationFK__Cuenta__Codigo_p__5FB337D6);
            this.relationFK__Depositos__Cod_c__0E6E26BF = new global::System.Data.DataRelation("FK__Depositos__Cod_c__0E6E26BF", new global::System.Data.DataColumn[] {
                        this.tableCuenta.Num_cuentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableDepositos.Cod_cuentaColumn}, false);
            this.Relations.Add(this.relationFK__Depositos__Cod_c__0E6E26BF);
            this.relationFK__Depositos__Cod_m__0F624AF8 = new global::System.Data.DataRelation("FK__Depositos__Cod_m__0F624AF8", new global::System.Data.DataColumn[] {
                        this.tableMoneda.Id_monedaColumn}, new global::System.Data.DataColumn[] {
                        this.tableDepositos.Cod_monedaColumn}, false);
            this.Relations.Add(this.relationFK__Depositos__Cod_m__0F624AF8);
            this.relationFK__Depositos__Cod_T__10566F31 = new global::System.Data.DataRelation("FK__Depositos__Cod_T__10566F31", new global::System.Data.DataColumn[] {
                        this.tableTarjetas_credito.Num_tarjetaColumn}, new global::System.Data.DataColumn[] {
                        this.tableDepositos.Cod_TCColumn}, false);
            this.Relations.Add(this.relationFK__Depositos__Cod_T__10566F31);
            this.relationFK__Intentos___Cod_l__3A81B327 = new global::System.Data.DataRelation("FK__Intentos___Cod_l__3A81B327", new global::System.Data.DataColumn[] {
                        this.tableIntentos_login.Id_loginColumn}, new global::System.Data.DataColumn[] {
                        this.tableIntentos_fallidos.Cod_loginColumn}, false);
            this.Relations.Add(this.relationFK__Intentos___Cod_l__3A81B327);
            this.relationFK__Intentos___Codig__35BCFE0A = new global::System.Data.DataRelation("FK__Intentos___Codig__35BCFE0A", new global::System.Data.DataColumn[] {
                        this.tableUsuario.Id_usuarioColumn}, new global::System.Data.DataColumn[] {
                        this.tableIntentos_login.Codigo_usuarioColumn}, false);
            this.Relations.Add(this.relationFK__Intentos___Codig__35BCFE0A);
            this.relationFK__Modificac__Cod_c__76969D2E = new global::System.Data.DataRelation("FK__Modificac__Cod_c__76969D2E", new global::System.Data.DataColumn[] {
                        this.tableCuenta.Num_cuentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableModificacion_cuenta.Cod_cuentaColumn}, false);
            this.Relations.Add(this.relationFK__Modificac__Cod_c__76969D2E);
            this.relationFK__Modificac__Cod_t__75A278F5 = new global::System.Data.DataRelation("FK__Modificac__Cod_t__75A278F5", new global::System.Data.DataColumn[] {
                        this.tableTipo_modificacion.Id_tipoColumn}, new global::System.Data.DataColumn[] {
                        this.tableModificacion_cuenta.Cod_tipoColumn}, false);
            this.Relations.Add(this.relationFK__Modificac__Cod_t__75A278F5);
            this.relationFK__Modificac__Cod_t__778AC167 = new global::System.Data.DataRelation("FK__Modificac__Cod_t__778AC167", new global::System.Data.DataColumn[] {
                        this.tableTransacciones.Id_transaccionColumn}, new global::System.Data.DataColumn[] {
                        this.tableModificacion_cuenta.Cod_transaccionColumn}, false);
            this.Relations.Add(this.relationFK__Modificac__Cod_t__778AC167);
            this.relationFK__Retiros__Cod_che__1CBC4616 = new global::System.Data.DataRelation("FK__Retiros__Cod_che__1CBC4616", new global::System.Data.DataColumn[] {
                        this.tableCheque.Id_chequeColumn}, new global::System.Data.DataColumn[] {
                        this.tableRetiros.Cod_chequeColumn}, false);
            this.Relations.Add(this.relationFK__Retiros__Cod_che__1CBC4616);
            this.relationFK__Retiros__Cod_cue__1BC821DD = new global::System.Data.DataRelation("FK__Retiros__Cod_cue__1BC821DD", new global::System.Data.DataColumn[] {
                        this.tableCuenta.Num_cuentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableRetiros.Cod_cuentaColumn}, false);
            this.Relations.Add(this.relationFK__Retiros__Cod_cue__1BC821DD);
            this.relationFK__Rol__Cod_estado__4316F928 = new global::System.Data.DataRelation("FK__Rol__Cod_estado__4316F928", new global::System.Data.DataColumn[] {
                        this.tableEstado_rol.Id_estadoColumn}, new global::System.Data.DataColumn[] {
                        this.tableRol.Cod_estadoColumn}, false);
            this.Relations.Add(this.relationFK__Rol__Cod_estado__4316F928);
            this.relationFK__Rol_funci__Cod_f__4BAC3F29 = new global::System.Data.DataRelation("FK__Rol_funci__Cod_f__4BAC3F29", new global::System.Data.DataColumn[] {
                        this.tableRol.Id_rolColumn}, new global::System.Data.DataColumn[] {
                        this.tableRol_funcionalidad.Cod_rolColumn}, false);
            this.Relations.Add(this.relationFK__Rol_funci__Cod_f__4BAC3F29);
            this.relationFK__Rol_funci__Cod_f__4CA06362 = new global::System.Data.DataRelation("FK__Rol_funci__Cod_f__4CA06362", new global::System.Data.DataColumn[] {
                        this.tableFuncionalidad.Id_funcionalidadColumn}, new global::System.Data.DataColumn[] {
                        this.tableRol_funcionalidad.Cod_funcionalidadColumn}, false);
            this.Relations.Add(this.relationFK__Rol_funci__Cod_f__4CA06362);
            this.relationFK__Tarjetas___Cod_c__07C12930 = new global::System.Data.DataRelation("FK__Tarjetas___Cod_c__07C12930", new global::System.Data.DataColumn[] {
                        this.tableCliente.Id_clienteColumn}, new global::System.Data.DataColumn[] {
                        this.tableTarjetas_credito.Cod_clienteColumn}, false);
            this.Relations.Add(this.relationFK__Tarjetas___Cod_c__07C12930);
            this.relationFK__Tarjetas___Cod_e__08B54D69 = new global::System.Data.DataRelation("FK__Tarjetas___Cod_e__08B54D69", new global::System.Data.DataColumn[] {
                        this.tableBancos.Id_bancoColumn}, new global::System.Data.DataColumn[] {
                        this.tableTarjetas_credito.Cod_emisorColumn}, false);
            this.Relations.Add(this.relationFK__Tarjetas___Cod_e__08B54D69);
            this.relationFK__Transacci__Cod_e__6D0D32F4 = new global::System.Data.DataRelation("FK__Transacci__Cod_e__6D0D32F4", new global::System.Data.DataColumn[] {
                        this.tableEstado_transaccion.Id_estadoColumn}, new global::System.Data.DataColumn[] {
                        this.tableTransacciones.Cod_estadoColumn}, false);
            this.Relations.Add(this.relationFK__Transacci__Cod_e__6D0D32F4);
            this.relationFK__Transfere__Cod_c__7C4F7684 = new global::System.Data.DataRelation("FK__Transfere__Cod_c__7C4F7684", new global::System.Data.DataColumn[] {
                        this.tableCuenta.Num_cuentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableTransferencias.Cod_cuenta_origenColumn}, false);
            this.Relations.Add(this.relationFK__Transfere__Cod_c__7C4F7684);
            this.relationFK__Transfere__Cod_c__7D439ABD = new global::System.Data.DataRelation("FK__Transfere__Cod_c__7D439ABD", new global::System.Data.DataColumn[] {
                        this.tableCuenta.Num_cuentaColumn}, new global::System.Data.DataColumn[] {
                        this.tableTransferencias.Cod_cuenta_destinoColumn}, false);
            this.Relations.Add(this.relationFK__Transfere__Cod_c__7D439ABD);
            this.relationFK__Transfere__Cod_t__7E37BEF6 = new global::System.Data.DataRelation("FK__Transfere__Cod_t__7E37BEF6", new global::System.Data.DataColumn[] {
                        this.tableTransacciones.Id_transaccionColumn}, new global::System.Data.DataColumn[] {
                        this.tableTransferencias.Cod_transaccionColumn}, false);
            this.Relations.Add(this.relationFK__Transfere__Cod_t__7E37BEF6);
            this.relationFK__Usuario_r__Cod_r__45F365D3 = new global::System.Data.DataRelation("FK__Usuario_r__Cod_r__45F365D3", new global::System.Data.DataColumn[] {
                        this.tableRol.Id_rolColumn}, new global::System.Data.DataColumn[] {
                        this.tableUsuario_rol.Cod_rolColumn}, false);
            this.Relations.Add(this.relationFK__Usuario_r__Cod_r__45F365D3);
            this.relationFK__Usuario_r__Cod_u__44FF419A = new global::System.Data.DataRelation("FK__Usuario_r__Cod_u__44FF419A", new global::System.Data.DataColumn[] {
                        this.tableUsuario.Id_usuarioColumn}, new global::System.Data.DataColumn[] {
                        this.tableUsuario_rol.Cod_usuarioColumn}, false);
            this.Relations.Add(this.relationFK__Usuario_r__Cod_u__44FF419A);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBancos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCategoria() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCheque() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCliente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCuenta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepositos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstado_cuenta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstado_rol() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEstado_transaccion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFuncionalidad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIntentos_fallidos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeIntentos_login() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLocalidad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaestra() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeModificacion_cuenta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMoneda() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePais() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRetiros() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRol() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRol_funcionalidad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTabla_Cliente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTabla_Clientes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetabladementiritas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetabladementiritas2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTarjetas_credito() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTipo_DNI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTipo_modificacion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransacciones() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTransferencias() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUsuario() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUsuario_rol() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GD1C2015DataSet ds = new GD1C2015DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void BancosRowChangeEventHandler(object sender, BancosRowChangeEvent e);
        
        public delegate void CategoriaRowChangeEventHandler(object sender, CategoriaRowChangeEvent e);
        
        public delegate void ChequeRowChangeEventHandler(object sender, ChequeRowChangeEvent e);
        
        public delegate void ClienteRowChangeEventHandler(object sender, ClienteRowChangeEvent e);
        
        public delegate void CuentaRowChangeEventHandler(object sender, CuentaRowChangeEvent e);
        
        public delegate void DepositosRowChangeEventHandler(object sender, DepositosRowChangeEvent e);
        
        public delegate void Estado_cuentaRowChangeEventHandler(object sender, Estado_cuentaRowChangeEvent e);
        
        public delegate void Estado_rolRowChangeEventHandler(object sender, Estado_rolRowChangeEvent e);
        
        public delegate void Estado_transaccionRowChangeEventHandler(object sender, Estado_transaccionRowChangeEvent e);
        
        public delegate void FuncionalidadRowChangeEventHandler(object sender, FuncionalidadRowChangeEvent e);
        
        public delegate void Intentos_fallidosRowChangeEventHandler(object sender, Intentos_fallidosRowChangeEvent e);
        
        public delegate void Intentos_loginRowChangeEventHandler(object sender, Intentos_loginRowChangeEvent e);
        
        public delegate void LocalidadRowChangeEventHandler(object sender, LocalidadRowChangeEvent e);
        
        public delegate void MaestraRowChangeEventHandler(object sender, MaestraRowChangeEvent e);
        
        public delegate void Modificacion_cuentaRowChangeEventHandler(object sender, Modificacion_cuentaRowChangeEvent e);
        
        public delegate void MonedaRowChangeEventHandler(object sender, MonedaRowChangeEvent e);
        
        public delegate void PaisRowChangeEventHandler(object sender, PaisRowChangeEvent e);
        
        public delegate void RetirosRowChangeEventHandler(object sender, RetirosRowChangeEvent e);
        
        public delegate void RolRowChangeEventHandler(object sender, RolRowChangeEvent e);
        
        public delegate void Rol_funcionalidadRowChangeEventHandler(object sender, Rol_funcionalidadRowChangeEvent e);
        
        public delegate void Tabla_ClienteRowChangeEventHandler(object sender, Tabla_ClienteRowChangeEvent e);
        
        public delegate void Tabla_ClientesRowChangeEventHandler(object sender, Tabla_ClientesRowChangeEvent e);
        
        public delegate void tabladementiritasRowChangeEventHandler(object sender, tabladementiritasRowChangeEvent e);
        
        public delegate void tabladementiritas2RowChangeEventHandler(object sender, tabladementiritas2RowChangeEvent e);
        
        public delegate void Tarjetas_creditoRowChangeEventHandler(object sender, Tarjetas_creditoRowChangeEvent e);
        
        public delegate void Tipo_DNIRowChangeEventHandler(object sender, Tipo_DNIRowChangeEvent e);
        
        public delegate void Tipo_modificacionRowChangeEventHandler(object sender, Tipo_modificacionRowChangeEvent e);
        
        public delegate void TransaccionesRowChangeEventHandler(object sender, TransaccionesRowChangeEvent e);
        
        public delegate void TransferenciasRowChangeEventHandler(object sender, TransferenciasRowChangeEvent e);
        
        public delegate void UsuarioRowChangeEventHandler(object sender, UsuarioRowChangeEvent e);
        
        public delegate void Usuario_rolRowChangeEventHandler(object sender, Usuario_rolRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BancosDataTable : global::System.Data.TypedTableBase<BancosRow> {
            
            private global::System.Data.DataColumn columnId_banco;
            
            private global::System.Data.DataColumn columnNombre_banco;
            
            private global::System.Data.DataColumn columnCod_pais;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosDataTable() {
                this.TableName = "Bancos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BancosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BancosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_bancoColumn {
                get {
                    return this.columnId_banco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_bancoColumn {
                get {
                    return this.columnNombre_banco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_paisColumn {
                get {
                    return this.columnCod_pais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow this[int index] {
                get {
                    return ((BancosRow)(this.Rows[index]));
                }
            }
            
            public event BancosRowChangeEventHandler BancosRowChanging;
            
            public event BancosRowChangeEventHandler BancosRowChanged;
            
            public event BancosRowChangeEventHandler BancosRowDeleting;
            
            public event BancosRowChangeEventHandler BancosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBancosRow(BancosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow AddBancosRow(int Id_banco, string Nombre_banco, PaisRow parentPaisRowByFK__Bancos__Cod_pais__02FC7413) {
                BancosRow rowBancosRow = ((BancosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_banco,
                        Nombre_banco,
                        null};
                if ((parentPaisRowByFK__Bancos__Cod_pais__02FC7413 != null)) {
                    columnValuesArray[2] = parentPaisRowByFK__Bancos__Cod_pais__02FC7413[0];
                }
                rowBancosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBancosRow);
                return rowBancosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow FindById_banco(int Id_banco) {
                return ((BancosRow)(this.Rows.Find(new object[] {
                            Id_banco})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BancosDataTable cln = ((BancosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BancosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_banco = base.Columns["Id_banco"];
                this.columnNombre_banco = base.Columns["Nombre_banco"];
                this.columnCod_pais = base.Columns["Cod_pais"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_banco = new global::System.Data.DataColumn("Id_banco", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_banco);
                this.columnNombre_banco = new global::System.Data.DataColumn("Nombre_banco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_banco);
                this.columnCod_pais = new global::System.Data.DataColumn("Cod_pais", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_pais);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_banco}, true));
                this.columnId_banco.AllowDBNull = false;
                this.columnId_banco.Unique = true;
                this.columnNombre_banco.AllowDBNull = false;
                this.columnNombre_banco.MaxLength = 30;
                this.columnCod_pais.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow NewBancosRow() {
                return ((BancosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BancosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BancosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BancosRowChanged != null)) {
                    this.BancosRowChanged(this, new BancosRowChangeEvent(((BancosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BancosRowChanging != null)) {
                    this.BancosRowChanging(this, new BancosRowChangeEvent(((BancosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BancosRowDeleted != null)) {
                    this.BancosRowDeleted(this, new BancosRowChangeEvent(((BancosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BancosRowDeleting != null)) {
                    this.BancosRowDeleting(this, new BancosRowChangeEvent(((BancosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBancosRow(BancosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BancosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CategoriaDataTable : global::System.Data.TypedTableBase<CategoriaRow> {
            
            private global::System.Data.DataColumn columnId_categoria;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnCosto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaDataTable() {
                this.TableName = "Categoria";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoriaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CategoriaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_categoriaColumn {
                get {
                    return this.columnId_categoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoColumn {
                get {
                    return this.columnCosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow this[int index] {
                get {
                    return ((CategoriaRow)(this.Rows[index]));
                }
            }
            
            public event CategoriaRowChangeEventHandler CategoriaRowChanging;
            
            public event CategoriaRowChangeEventHandler CategoriaRowChanged;
            
            public event CategoriaRowChangeEventHandler CategoriaRowDeleting;
            
            public event CategoriaRowChangeEventHandler CategoriaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCategoriaRow(CategoriaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow AddCategoriaRow(string Descripcion, double Costo) {
                CategoriaRow rowCategoriaRow = ((CategoriaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Costo};
                rowCategoriaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCategoriaRow);
                return rowCategoriaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow FindById_categoria(int Id_categoria) {
                return ((CategoriaRow)(this.Rows.Find(new object[] {
                            Id_categoria})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CategoriaDataTable cln = ((CategoriaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CategoriaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_categoria = base.Columns["Id_categoria"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnCosto = base.Columns["Costo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_categoria = new global::System.Data.DataColumn("Id_categoria", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_categoria);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnCosto = new global::System.Data.DataColumn("Costo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCosto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_categoria}, true));
                this.columnId_categoria.AutoIncrement = true;
                this.columnId_categoria.AutoIncrementSeed = -1;
                this.columnId_categoria.AutoIncrementStep = -1;
                this.columnId_categoria.AllowDBNull = false;
                this.columnId_categoria.ReadOnly = true;
                this.columnId_categoria.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 30;
                this.columnCosto.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow NewCategoriaRow() {
                return ((CategoriaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CategoriaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CategoriaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CategoriaRowChanged != null)) {
                    this.CategoriaRowChanged(this, new CategoriaRowChangeEvent(((CategoriaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CategoriaRowChanging != null)) {
                    this.CategoriaRowChanging(this, new CategoriaRowChangeEvent(((CategoriaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CategoriaRowDeleted != null)) {
                    this.CategoriaRowDeleted(this, new CategoriaRowChangeEvent(((CategoriaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CategoriaRowDeleting != null)) {
                    this.CategoriaRowDeleting(this, new CategoriaRowChangeEvent(((CategoriaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCategoriaRow(CategoriaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CategoriaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChequeDataTable : global::System.Data.TypedTableBase<ChequeRow> {
            
            private global::System.Data.DataColumn columnId_cheque;
            
            private global::System.Data.DataColumn columnNum_cheque;
            
            private global::System.Data.DataColumn columnCod_banco;
            
            private global::System.Data.DataColumn columnCod_cliente;
            
            private global::System.Data.DataColumn columnFecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeDataTable() {
                this.TableName = "Cheque";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChequeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ChequeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_chequeColumn {
                get {
                    return this.columnId_cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Num_chequeColumn {
                get {
                    return this.columnNum_cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_bancoColumn {
                get {
                    return this.columnCod_banco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_clienteColumn {
                get {
                    return this.columnCod_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow this[int index] {
                get {
                    return ((ChequeRow)(this.Rows[index]));
                }
            }
            
            public event ChequeRowChangeEventHandler ChequeRowChanging;
            
            public event ChequeRowChangeEventHandler ChequeRowChanged;
            
            public event ChequeRowChangeEventHandler ChequeRowDeleting;
            
            public event ChequeRowChangeEventHandler ChequeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddChequeRow(ChequeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow AddChequeRow(int Num_cheque, BancosRow parentBancosRowByFK__Cheque__Cod_banc__160F4887, ClienteRow parentClienteRowByFK__Cheque__Cod_clie__17036CC0, System.DateTime Fecha) {
                ChequeRow rowChequeRow = ((ChequeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Num_cheque,
                        null,
                        null,
                        Fecha};
                if ((parentBancosRowByFK__Cheque__Cod_banc__160F4887 != null)) {
                    columnValuesArray[2] = parentBancosRowByFK__Cheque__Cod_banc__160F4887[0];
                }
                if ((parentClienteRowByFK__Cheque__Cod_clie__17036CC0 != null)) {
                    columnValuesArray[3] = parentClienteRowByFK__Cheque__Cod_clie__17036CC0[0];
                }
                rowChequeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChequeRow);
                return rowChequeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow FindById_cheque(int Id_cheque) {
                return ((ChequeRow)(this.Rows.Find(new object[] {
                            Id_cheque})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ChequeDataTable cln = ((ChequeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChequeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_cheque = base.Columns["Id_cheque"];
                this.columnNum_cheque = base.Columns["Num_cheque"];
                this.columnCod_banco = base.Columns["Cod_banco"];
                this.columnCod_cliente = base.Columns["Cod_cliente"];
                this.columnFecha = base.Columns["Fecha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_cheque = new global::System.Data.DataColumn("Id_cheque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_cheque);
                this.columnNum_cheque = new global::System.Data.DataColumn("Num_cheque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum_cheque);
                this.columnCod_banco = new global::System.Data.DataColumn("Cod_banco", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_banco);
                this.columnCod_cliente = new global::System.Data.DataColumn("Cod_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cliente);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_cheque}, true));
                this.columnId_cheque.AutoIncrement = true;
                this.columnId_cheque.AutoIncrementSeed = -1;
                this.columnId_cheque.AutoIncrementStep = -1;
                this.columnId_cheque.AllowDBNull = false;
                this.columnId_cheque.ReadOnly = true;
                this.columnId_cheque.Unique = true;
                this.columnNum_cheque.AllowDBNull = false;
                this.columnCod_banco.AllowDBNull = false;
                this.columnCod_cliente.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow NewChequeRow() {
                return ((ChequeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChequeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ChequeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChequeRowChanged != null)) {
                    this.ChequeRowChanged(this, new ChequeRowChangeEvent(((ChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChequeRowChanging != null)) {
                    this.ChequeRowChanging(this, new ChequeRowChangeEvent(((ChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChequeRowDeleted != null)) {
                    this.ChequeRowDeleted(this, new ChequeRowChangeEvent(((ChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChequeRowDeleting != null)) {
                    this.ChequeRowDeleting(this, new ChequeRowChangeEvent(((ChequeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveChequeRow(ChequeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChequeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClienteDataTable : global::System.Data.TypedTableBase<ClienteRow> {
            
            private global::System.Data.DataColumn columnId_cliente;
            
            private global::System.Data.DataColumn columnCod_usuario;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnTipo_documento;
            
            private global::System.Data.DataColumn columnNumero_documento;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnCod_pais;
            
            private global::System.Data.DataColumn columnLocalidad;
            
            private global::System.Data.DataColumn columnCalle;
            
            private global::System.Data.DataColumn columnNumero;
            
            private global::System.Data.DataColumn columnPiso;
            
            private global::System.Data.DataColumn columnDepto;
            
            private global::System.Data.DataColumn columnFecha_nacimiento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteDataTable() {
                this.TableName = "Cliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClienteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClienteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_clienteColumn {
                get {
                    return this.columnId_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_usuarioColumn {
                get {
                    return this.columnCod_usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tipo_documentoColumn {
                get {
                    return this.columnTipo_documento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Numero_documentoColumn {
                get {
                    return this.columnNumero_documento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_paisColumn {
                get {
                    return this.columnCod_pais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalidadColumn {
                get {
                    return this.columnLocalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalleColumn {
                get {
                    return this.columnCalle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PisoColumn {
                get {
                    return this.columnPiso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptoColumn {
                get {
                    return this.columnDepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_nacimientoColumn {
                get {
                    return this.columnFecha_nacimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow this[int index] {
                get {
                    return ((ClienteRow)(this.Rows[index]));
                }
            }
            
            public event ClienteRowChangeEventHandler ClienteRowChanging;
            
            public event ClienteRowChangeEventHandler ClienteRowChanged;
            
            public event ClienteRowChangeEventHandler ClienteRowDeleting;
            
            public event ClienteRowChangeEventHandler ClienteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClienteRow(ClienteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow AddClienteRow(UsuarioRow parentUsuarioRowByFK__Cliente__Cod_usu__300424B4, string Nombre, string Apellido, int Tipo_documento, int Numero_documento, string Mail, PaisRow parentPaisRowByFK__Cliente__Cod_pai__2F10007B, LocalidadRow parentLocalidadRowByFK__Cliente__Localid__30F848ED, string Calle, int Numero, short Piso, string Depto, System.DateTime Fecha_nacimiento) {
                ClienteRow rowClienteRow = ((ClienteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Nombre,
                        Apellido,
                        Tipo_documento,
                        Numero_documento,
                        Mail,
                        null,
                        null,
                        Calle,
                        Numero,
                        Piso,
                        Depto,
                        Fecha_nacimiento};
                if ((parentUsuarioRowByFK__Cliente__Cod_usu__300424B4 != null)) {
                    columnValuesArray[1] = parentUsuarioRowByFK__Cliente__Cod_usu__300424B4[0];
                }
                if ((parentPaisRowByFK__Cliente__Cod_pai__2F10007B != null)) {
                    columnValuesArray[7] = parentPaisRowByFK__Cliente__Cod_pai__2F10007B[0];
                }
                if ((parentLocalidadRowByFK__Cliente__Localid__30F848ED != null)) {
                    columnValuesArray[8] = parentLocalidadRowByFK__Cliente__Localid__30F848ED[0];
                }
                rowClienteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClienteRow);
                return rowClienteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow FindById_cliente(int Id_cliente) {
                return ((ClienteRow)(this.Rows.Find(new object[] {
                            Id_cliente})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClienteDataTable cln = ((ClienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClienteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_cliente = base.Columns["Id_cliente"];
                this.columnCod_usuario = base.Columns["Cod_usuario"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnTipo_documento = base.Columns["Tipo_documento"];
                this.columnNumero_documento = base.Columns["Numero_documento"];
                this.columnMail = base.Columns["Mail"];
                this.columnCod_pais = base.Columns["Cod_pais"];
                this.columnLocalidad = base.Columns["Localidad"];
                this.columnCalle = base.Columns["Calle"];
                this.columnNumero = base.Columns["Numero"];
                this.columnPiso = base.Columns["Piso"];
                this.columnDepto = base.Columns["Depto"];
                this.columnFecha_nacimiento = base.Columns["Fecha_nacimiento"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_cliente = new global::System.Data.DataColumn("Id_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_cliente);
                this.columnCod_usuario = new global::System.Data.DataColumn("Cod_usuario", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_usuario);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnTipo_documento = new global::System.Data.DataColumn("Tipo_documento", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_documento);
                this.columnNumero_documento = new global::System.Data.DataColumn("Numero_documento", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero_documento);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnCod_pais = new global::System.Data.DataColumn("Cod_pais", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_pais);
                this.columnLocalidad = new global::System.Data.DataColumn("Localidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalidad);
                this.columnCalle = new global::System.Data.DataColumn("Calle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalle);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnPiso = new global::System.Data.DataColumn("Piso", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiso);
                this.columnDepto = new global::System.Data.DataColumn("Depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepto);
                this.columnFecha_nacimiento = new global::System.Data.DataColumn("Fecha_nacimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_nacimiento);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_cliente}, true));
                this.columnId_cliente.AutoIncrement = true;
                this.columnId_cliente.AutoIncrementSeed = -1;
                this.columnId_cliente.AutoIncrementStep = -1;
                this.columnId_cliente.AllowDBNull = false;
                this.columnId_cliente.ReadOnly = true;
                this.columnId_cliente.Unique = true;
                this.columnCod_usuario.AllowDBNull = false;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 30;
                this.columnApellido.AllowDBNull = false;
                this.columnApellido.MaxLength = 30;
                this.columnTipo_documento.AllowDBNull = false;
                this.columnNumero_documento.AllowDBNull = false;
                this.columnMail.AllowDBNull = false;
                this.columnMail.MaxLength = 30;
                this.columnCod_pais.AllowDBNull = false;
                this.columnLocalidad.AllowDBNull = false;
                this.columnCalle.AllowDBNull = false;
                this.columnCalle.MaxLength = 30;
                this.columnNumero.AllowDBNull = false;
                this.columnDepto.MaxLength = 1;
                this.columnFecha_nacimiento.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow NewClienteRow() {
                return ((ClienteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClienteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClienteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClienteRowChanged != null)) {
                    this.ClienteRowChanged(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClienteRowChanging != null)) {
                    this.ClienteRowChanging(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClienteRowDeleted != null)) {
                    this.ClienteRowDeleted(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClienteRowDeleting != null)) {
                    this.ClienteRowDeleting(this, new ClienteRowChangeEvent(((ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClienteRow(ClienteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CuentaDataTable : global::System.Data.TypedTableBase<CuentaRow> {
            
            private global::System.Data.DataColumn columnNum_cuenta;
            
            private global::System.Data.DataColumn columnFecha_apertura;
            
            private global::System.Data.DataColumn columnCodigo_pais;
            
            private global::System.Data.DataColumn columnCodigo_moneda;
            
            private global::System.Data.DataColumn columnCodigo_categoria;
            
            private global::System.Data.DataColumn columnCodigo_cliente;
            
            private global::System.Data.DataColumn columnCodigo_estado;
            
            private global::System.Data.DataColumn columnSaldo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaDataTable() {
                this.TableName = "Cuenta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CuentaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CuentaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Num_cuentaColumn {
                get {
                    return this.columnNum_cuenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_aperturaColumn {
                get {
                    return this.columnFecha_apertura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_paisColumn {
                get {
                    return this.columnCodigo_pais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_monedaColumn {
                get {
                    return this.columnCodigo_moneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_categoriaColumn {
                get {
                    return this.columnCodigo_categoria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_clienteColumn {
                get {
                    return this.columnCodigo_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_estadoColumn {
                get {
                    return this.columnCodigo_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow this[int index] {
                get {
                    return ((CuentaRow)(this.Rows[index]));
                }
            }
            
            public event CuentaRowChangeEventHandler CuentaRowChanging;
            
            public event CuentaRowChangeEventHandler CuentaRowChanged;
            
            public event CuentaRowChangeEventHandler CuentaRowDeleting;
            
            public event CuentaRowChangeEventHandler CuentaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCuentaRow(CuentaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow AddCuentaRow(int Num_cuenta, System.DateTime Fecha_apertura, PaisRow parentPaisRowByFK__Cuenta__Codigo_p__5FB337D6, MonedaRow parentMonedaRowByFK__Cuenta__Codigo_m__60A75C0F, CategoriaRow parentCategoriaRowByFK__Cuenta__Codigo_c__619B8048, ClienteRow parentClienteRowByFK__Cuenta__Codigo_c__628FA481, Estado_cuentaRow parentEstado_cuentaRowByFK__Cuenta__Codigo_e__6383C8BA, double Saldo) {
                CuentaRow rowCuentaRow = ((CuentaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Num_cuenta,
                        Fecha_apertura,
                        null,
                        null,
                        null,
                        null,
                        null,
                        Saldo};
                if ((parentPaisRowByFK__Cuenta__Codigo_p__5FB337D6 != null)) {
                    columnValuesArray[2] = parentPaisRowByFK__Cuenta__Codigo_p__5FB337D6[0];
                }
                if ((parentMonedaRowByFK__Cuenta__Codigo_m__60A75C0F != null)) {
                    columnValuesArray[3] = parentMonedaRowByFK__Cuenta__Codigo_m__60A75C0F[0];
                }
                if ((parentCategoriaRowByFK__Cuenta__Codigo_c__619B8048 != null)) {
                    columnValuesArray[4] = parentCategoriaRowByFK__Cuenta__Codigo_c__619B8048[0];
                }
                if ((parentClienteRowByFK__Cuenta__Codigo_c__628FA481 != null)) {
                    columnValuesArray[5] = parentClienteRowByFK__Cuenta__Codigo_c__628FA481[0];
                }
                if ((parentEstado_cuentaRowByFK__Cuenta__Codigo_e__6383C8BA != null)) {
                    columnValuesArray[6] = parentEstado_cuentaRowByFK__Cuenta__Codigo_e__6383C8BA[0];
                }
                rowCuentaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCuentaRow);
                return rowCuentaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow FindByNum_cuenta(int Num_cuenta) {
                return ((CuentaRow)(this.Rows.Find(new object[] {
                            Num_cuenta})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CuentaDataTable cln = ((CuentaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CuentaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNum_cuenta = base.Columns["Num_cuenta"];
                this.columnFecha_apertura = base.Columns["Fecha_apertura"];
                this.columnCodigo_pais = base.Columns["Codigo_pais"];
                this.columnCodigo_moneda = base.Columns["Codigo_moneda"];
                this.columnCodigo_categoria = base.Columns["Codigo_categoria"];
                this.columnCodigo_cliente = base.Columns["Codigo_cliente"];
                this.columnCodigo_estado = base.Columns["Codigo_estado"];
                this.columnSaldo = base.Columns["Saldo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNum_cuenta = new global::System.Data.DataColumn("Num_cuenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum_cuenta);
                this.columnFecha_apertura = new global::System.Data.DataColumn("Fecha_apertura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_apertura);
                this.columnCodigo_pais = new global::System.Data.DataColumn("Codigo_pais", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_pais);
                this.columnCodigo_moneda = new global::System.Data.DataColumn("Codigo_moneda", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_moneda);
                this.columnCodigo_categoria = new global::System.Data.DataColumn("Codigo_categoria", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_categoria);
                this.columnCodigo_cliente = new global::System.Data.DataColumn("Codigo_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_cliente);
                this.columnCodigo_estado = new global::System.Data.DataColumn("Codigo_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_estado);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNum_cuenta}, true));
                this.columnNum_cuenta.AllowDBNull = false;
                this.columnNum_cuenta.Unique = true;
                this.columnFecha_apertura.AllowDBNull = false;
                this.columnCodigo_pais.AllowDBNull = false;
                this.columnCodigo_moneda.AllowDBNull = false;
                this.columnCodigo_categoria.AllowDBNull = false;
                this.columnCodigo_cliente.AllowDBNull = false;
                this.columnCodigo_estado.AllowDBNull = false;
                this.columnSaldo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow NewCuentaRow() {
                return ((CuentaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CuentaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CuentaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CuentaRowChanged != null)) {
                    this.CuentaRowChanged(this, new CuentaRowChangeEvent(((CuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CuentaRowChanging != null)) {
                    this.CuentaRowChanging(this, new CuentaRowChangeEvent(((CuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CuentaRowDeleted != null)) {
                    this.CuentaRowDeleted(this, new CuentaRowChangeEvent(((CuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CuentaRowDeleting != null)) {
                    this.CuentaRowDeleting(this, new CuentaRowChangeEvent(((CuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCuentaRow(CuentaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CuentaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepositosDataTable : global::System.Data.TypedTableBase<DepositosRow> {
            
            private global::System.Data.DataColumn columnId_deposito;
            
            private global::System.Data.DataColumn columnCod_cuenta;
            
            private global::System.Data.DataColumn columnCod_moneda;
            
            private global::System.Data.DataColumn columnImporte;
            
            private global::System.Data.DataColumn columnCod_TC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosDataTable() {
                this.TableName = "Depositos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepositosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepositosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_depositoColumn {
                get {
                    return this.columnId_deposito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_cuentaColumn {
                get {
                    return this.columnCod_cuenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_monedaColumn {
                get {
                    return this.columnCod_moneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_TCColumn {
                get {
                    return this.columnCod_TC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow this[int index] {
                get {
                    return ((DepositosRow)(this.Rows[index]));
                }
            }
            
            public event DepositosRowChangeEventHandler DepositosRowChanging;
            
            public event DepositosRowChangeEventHandler DepositosRowChanged;
            
            public event DepositosRowChangeEventHandler DepositosRowDeleting;
            
            public event DepositosRowChangeEventHandler DepositosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepositosRow(DepositosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow AddDepositosRow(int Id_deposito, CuentaRow parentCuentaRowByFK__Depositos__Cod_c__0E6E26BF, MonedaRow parentMonedaRowByFK__Depositos__Cod_m__0F624AF8, double Importe, Tarjetas_creditoRow parentTarjetas_creditoRowByFK__Depositos__Cod_T__10566F31) {
                DepositosRow rowDepositosRow = ((DepositosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_deposito,
                        null,
                        null,
                        Importe,
                        null};
                if ((parentCuentaRowByFK__Depositos__Cod_c__0E6E26BF != null)) {
                    columnValuesArray[1] = parentCuentaRowByFK__Depositos__Cod_c__0E6E26BF[0];
                }
                if ((parentMonedaRowByFK__Depositos__Cod_m__0F624AF8 != null)) {
                    columnValuesArray[2] = parentMonedaRowByFK__Depositos__Cod_m__0F624AF8[0];
                }
                if ((parentTarjetas_creditoRowByFK__Depositos__Cod_T__10566F31 != null)) {
                    columnValuesArray[4] = parentTarjetas_creditoRowByFK__Depositos__Cod_T__10566F31[0];
                }
                rowDepositosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepositosRow);
                return rowDepositosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow FindById_deposito(int Id_deposito) {
                return ((DepositosRow)(this.Rows.Find(new object[] {
                            Id_deposito})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepositosDataTable cln = ((DepositosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepositosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_deposito = base.Columns["Id_deposito"];
                this.columnCod_cuenta = base.Columns["Cod_cuenta"];
                this.columnCod_moneda = base.Columns["Cod_moneda"];
                this.columnImporte = base.Columns["Importe"];
                this.columnCod_TC = base.Columns["Cod_TC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_deposito = new global::System.Data.DataColumn("Id_deposito", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_deposito);
                this.columnCod_cuenta = new global::System.Data.DataColumn("Cod_cuenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cuenta);
                this.columnCod_moneda = new global::System.Data.DataColumn("Cod_moneda", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_moneda);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnCod_TC = new global::System.Data.DataColumn("Cod_TC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_TC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_deposito}, true));
                this.columnId_deposito.AllowDBNull = false;
                this.columnId_deposito.Unique = true;
                this.columnCod_cuenta.AllowDBNull = false;
                this.columnCod_moneda.AllowDBNull = false;
                this.columnImporte.AllowDBNull = false;
                this.columnCod_TC.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow NewDepositosRow() {
                return ((DepositosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepositosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepositosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepositosRowChanged != null)) {
                    this.DepositosRowChanged(this, new DepositosRowChangeEvent(((DepositosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepositosRowChanging != null)) {
                    this.DepositosRowChanging(this, new DepositosRowChangeEvent(((DepositosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepositosRowDeleted != null)) {
                    this.DepositosRowDeleted(this, new DepositosRowChangeEvent(((DepositosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepositosRowDeleting != null)) {
                    this.DepositosRowDeleting(this, new DepositosRowChangeEvent(((DepositosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepositosRow(DepositosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepositosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Estado_cuentaDataTable : global::System.Data.TypedTableBase<Estado_cuentaRow> {
            
            private global::System.Data.DataColumn columnId_estado;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaDataTable() {
                this.TableName = "Estado_cuenta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_cuentaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Estado_cuentaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_estadoColumn {
                get {
                    return this.columnId_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow this[int index] {
                get {
                    return ((Estado_cuentaRow)(this.Rows[index]));
                }
            }
            
            public event Estado_cuentaRowChangeEventHandler Estado_cuentaRowChanging;
            
            public event Estado_cuentaRowChangeEventHandler Estado_cuentaRowChanged;
            
            public event Estado_cuentaRowChangeEventHandler Estado_cuentaRowDeleting;
            
            public event Estado_cuentaRowChangeEventHandler Estado_cuentaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstado_cuentaRow(Estado_cuentaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow AddEstado_cuentaRow(string Descripcion) {
                Estado_cuentaRow rowEstado_cuentaRow = ((Estado_cuentaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion};
                rowEstado_cuentaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstado_cuentaRow);
                return rowEstado_cuentaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow FindById_estado(int Id_estado) {
                return ((Estado_cuentaRow)(this.Rows.Find(new object[] {
                            Id_estado})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Estado_cuentaDataTable cln = ((Estado_cuentaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Estado_cuentaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_estado = base.Columns["Id_estado"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_estado = new global::System.Data.DataColumn("Id_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_estado);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_estado}, true));
                this.columnId_estado.AutoIncrement = true;
                this.columnId_estado.AutoIncrementSeed = -1;
                this.columnId_estado.AutoIncrementStep = -1;
                this.columnId_estado.AllowDBNull = false;
                this.columnId_estado.ReadOnly = true;
                this.columnId_estado.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow NewEstado_cuentaRow() {
                return ((Estado_cuentaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Estado_cuentaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Estado_cuentaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Estado_cuentaRowChanged != null)) {
                    this.Estado_cuentaRowChanged(this, new Estado_cuentaRowChangeEvent(((Estado_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Estado_cuentaRowChanging != null)) {
                    this.Estado_cuentaRowChanging(this, new Estado_cuentaRowChangeEvent(((Estado_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Estado_cuentaRowDeleted != null)) {
                    this.Estado_cuentaRowDeleted(this, new Estado_cuentaRowChangeEvent(((Estado_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Estado_cuentaRowDeleting != null)) {
                    this.Estado_cuentaRowDeleting(this, new Estado_cuentaRowChangeEvent(((Estado_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstado_cuentaRow(Estado_cuentaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Estado_cuentaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Estado_rolDataTable : global::System.Data.TypedTableBase<Estado_rolRow> {
            
            private global::System.Data.DataColumn columnId_estado;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolDataTable() {
                this.TableName = "Estado_rol";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_rolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Estado_rolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_estadoColumn {
                get {
                    return this.columnId_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow this[int index] {
                get {
                    return ((Estado_rolRow)(this.Rows[index]));
                }
            }
            
            public event Estado_rolRowChangeEventHandler Estado_rolRowChanging;
            
            public event Estado_rolRowChangeEventHandler Estado_rolRowChanged;
            
            public event Estado_rolRowChangeEventHandler Estado_rolRowDeleting;
            
            public event Estado_rolRowChangeEventHandler Estado_rolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstado_rolRow(Estado_rolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow AddEstado_rolRow(string Descripcion) {
                Estado_rolRow rowEstado_rolRow = ((Estado_rolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion};
                rowEstado_rolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstado_rolRow);
                return rowEstado_rolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow FindById_estado(int Id_estado) {
                return ((Estado_rolRow)(this.Rows.Find(new object[] {
                            Id_estado})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Estado_rolDataTable cln = ((Estado_rolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Estado_rolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_estado = base.Columns["Id_estado"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_estado = new global::System.Data.DataColumn("Id_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_estado);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_estado}, true));
                this.columnId_estado.AutoIncrement = true;
                this.columnId_estado.AutoIncrementSeed = -1;
                this.columnId_estado.AutoIncrementStep = -1;
                this.columnId_estado.AllowDBNull = false;
                this.columnId_estado.ReadOnly = true;
                this.columnId_estado.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow NewEstado_rolRow() {
                return ((Estado_rolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Estado_rolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Estado_rolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Estado_rolRowChanged != null)) {
                    this.Estado_rolRowChanged(this, new Estado_rolRowChangeEvent(((Estado_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Estado_rolRowChanging != null)) {
                    this.Estado_rolRowChanging(this, new Estado_rolRowChangeEvent(((Estado_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Estado_rolRowDeleted != null)) {
                    this.Estado_rolRowDeleted(this, new Estado_rolRowChangeEvent(((Estado_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Estado_rolRowDeleting != null)) {
                    this.Estado_rolRowDeleting(this, new Estado_rolRowChangeEvent(((Estado_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstado_rolRow(Estado_rolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Estado_rolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Estado_transaccionDataTable : global::System.Data.TypedTableBase<Estado_transaccionRow> {
            
            private global::System.Data.DataColumn columnId_estado;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionDataTable() {
                this.TableName = "Estado_transaccion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_transaccionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Estado_transaccionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_estadoColumn {
                get {
                    return this.columnId_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow this[int index] {
                get {
                    return ((Estado_transaccionRow)(this.Rows[index]));
                }
            }
            
            public event Estado_transaccionRowChangeEventHandler Estado_transaccionRowChanging;
            
            public event Estado_transaccionRowChangeEventHandler Estado_transaccionRowChanged;
            
            public event Estado_transaccionRowChangeEventHandler Estado_transaccionRowDeleting;
            
            public event Estado_transaccionRowChangeEventHandler Estado_transaccionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEstado_transaccionRow(Estado_transaccionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow AddEstado_transaccionRow(string Descripcion) {
                Estado_transaccionRow rowEstado_transaccionRow = ((Estado_transaccionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion};
                rowEstado_transaccionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEstado_transaccionRow);
                return rowEstado_transaccionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow FindById_estado(int Id_estado) {
                return ((Estado_transaccionRow)(this.Rows.Find(new object[] {
                            Id_estado})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Estado_transaccionDataTable cln = ((Estado_transaccionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Estado_transaccionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_estado = base.Columns["Id_estado"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_estado = new global::System.Data.DataColumn("Id_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_estado);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_estado}, true));
                this.columnId_estado.AutoIncrement = true;
                this.columnId_estado.AutoIncrementSeed = -1;
                this.columnId_estado.AutoIncrementStep = -1;
                this.columnId_estado.AllowDBNull = false;
                this.columnId_estado.ReadOnly = true;
                this.columnId_estado.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow NewEstado_transaccionRow() {
                return ((Estado_transaccionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Estado_transaccionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Estado_transaccionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Estado_transaccionRowChanged != null)) {
                    this.Estado_transaccionRowChanged(this, new Estado_transaccionRowChangeEvent(((Estado_transaccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Estado_transaccionRowChanging != null)) {
                    this.Estado_transaccionRowChanging(this, new Estado_transaccionRowChangeEvent(((Estado_transaccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Estado_transaccionRowDeleted != null)) {
                    this.Estado_transaccionRowDeleted(this, new Estado_transaccionRowChangeEvent(((Estado_transaccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Estado_transaccionRowDeleting != null)) {
                    this.Estado_transaccionRowDeleting(this, new Estado_transaccionRowChangeEvent(((Estado_transaccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEstado_transaccionRow(Estado_transaccionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Estado_transaccionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FuncionalidadDataTable : global::System.Data.TypedTableBase<FuncionalidadRow> {
            
            private global::System.Data.DataColumn columnId_funcionalidad;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadDataTable() {
                this.TableName = "Funcionalidad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FuncionalidadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FuncionalidadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_funcionalidadColumn {
                get {
                    return this.columnId_funcionalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow this[int index] {
                get {
                    return ((FuncionalidadRow)(this.Rows[index]));
                }
            }
            
            public event FuncionalidadRowChangeEventHandler FuncionalidadRowChanging;
            
            public event FuncionalidadRowChangeEventHandler FuncionalidadRowChanged;
            
            public event FuncionalidadRowChangeEventHandler FuncionalidadRowDeleting;
            
            public event FuncionalidadRowChangeEventHandler FuncionalidadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFuncionalidadRow(FuncionalidadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow AddFuncionalidadRow(int Id_funcionalidad, string Descripcion) {
                FuncionalidadRow rowFuncionalidadRow = ((FuncionalidadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_funcionalidad,
                        Descripcion};
                rowFuncionalidadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFuncionalidadRow);
                return rowFuncionalidadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow FindById_funcionalidad(int Id_funcionalidad) {
                return ((FuncionalidadRow)(this.Rows.Find(new object[] {
                            Id_funcionalidad})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FuncionalidadDataTable cln = ((FuncionalidadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FuncionalidadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_funcionalidad = base.Columns["Id_funcionalidad"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_funcionalidad = new global::System.Data.DataColumn("Id_funcionalidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_funcionalidad);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_funcionalidad}, true));
                this.columnId_funcionalidad.AllowDBNull = false;
                this.columnId_funcionalidad.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow NewFuncionalidadRow() {
                return ((FuncionalidadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FuncionalidadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FuncionalidadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FuncionalidadRowChanged != null)) {
                    this.FuncionalidadRowChanged(this, new FuncionalidadRowChangeEvent(((FuncionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FuncionalidadRowChanging != null)) {
                    this.FuncionalidadRowChanging(this, new FuncionalidadRowChangeEvent(((FuncionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FuncionalidadRowDeleted != null)) {
                    this.FuncionalidadRowDeleted(this, new FuncionalidadRowChangeEvent(((FuncionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FuncionalidadRowDeleting != null)) {
                    this.FuncionalidadRowDeleting(this, new FuncionalidadRowChangeEvent(((FuncionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFuncionalidadRow(FuncionalidadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FuncionalidadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Intentos_fallidosDataTable : global::System.Data.TypedTableBase<Intentos_fallidosRow> {
            
            private global::System.Data.DataColumn columnId_fallido;
            
            private global::System.Data.DataColumn columnCod_login;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosDataTable() {
                this.TableName = "Intentos_fallidos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Intentos_fallidosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Intentos_fallidosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_fallidoColumn {
                get {
                    return this.columnId_fallido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_loginColumn {
                get {
                    return this.columnCod_login;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow this[int index] {
                get {
                    return ((Intentos_fallidosRow)(this.Rows[index]));
                }
            }
            
            public event Intentos_fallidosRowChangeEventHandler Intentos_fallidosRowChanging;
            
            public event Intentos_fallidosRowChangeEventHandler Intentos_fallidosRowChanged;
            
            public event Intentos_fallidosRowChangeEventHandler Intentos_fallidosRowDeleting;
            
            public event Intentos_fallidosRowChangeEventHandler Intentos_fallidosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIntentos_fallidosRow(Intentos_fallidosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow AddIntentos_fallidosRow(Intentos_loginRow parentIntentos_loginRowByFK__Intentos___Cod_l__3A81B327) {
                Intentos_fallidosRow rowIntentos_fallidosRow = ((Intentos_fallidosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentIntentos_loginRowByFK__Intentos___Cod_l__3A81B327 != null)) {
                    columnValuesArray[1] = parentIntentos_loginRowByFK__Intentos___Cod_l__3A81B327[0];
                }
                rowIntentos_fallidosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIntentos_fallidosRow);
                return rowIntentos_fallidosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow FindById_fallido(int Id_fallido) {
                return ((Intentos_fallidosRow)(this.Rows.Find(new object[] {
                            Id_fallido})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Intentos_fallidosDataTable cln = ((Intentos_fallidosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Intentos_fallidosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_fallido = base.Columns["Id_fallido"];
                this.columnCod_login = base.Columns["Cod_login"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_fallido = new global::System.Data.DataColumn("Id_fallido", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_fallido);
                this.columnCod_login = new global::System.Data.DataColumn("Cod_login", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_login);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_fallido}, true));
                this.columnId_fallido.AutoIncrement = true;
                this.columnId_fallido.AutoIncrementSeed = -1;
                this.columnId_fallido.AutoIncrementStep = -1;
                this.columnId_fallido.AllowDBNull = false;
                this.columnId_fallido.ReadOnly = true;
                this.columnId_fallido.Unique = true;
                this.columnCod_login.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow NewIntentos_fallidosRow() {
                return ((Intentos_fallidosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Intentos_fallidosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Intentos_fallidosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Intentos_fallidosRowChanged != null)) {
                    this.Intentos_fallidosRowChanged(this, new Intentos_fallidosRowChangeEvent(((Intentos_fallidosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Intentos_fallidosRowChanging != null)) {
                    this.Intentos_fallidosRowChanging(this, new Intentos_fallidosRowChangeEvent(((Intentos_fallidosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Intentos_fallidosRowDeleted != null)) {
                    this.Intentos_fallidosRowDeleted(this, new Intentos_fallidosRowChangeEvent(((Intentos_fallidosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Intentos_fallidosRowDeleting != null)) {
                    this.Intentos_fallidosRowDeleting(this, new Intentos_fallidosRowChangeEvent(((Intentos_fallidosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIntentos_fallidosRow(Intentos_fallidosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Intentos_fallidosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Intentos_loginDataTable : global::System.Data.TypedTableBase<Intentos_loginRow> {
            
            private global::System.Data.DataColumn columnId_login;
            
            private global::System.Data.DataColumn columnCodigo_usuario;
            
            private global::System.Data.DataColumn columnEs_correcto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginDataTable() {
                this.TableName = "Intentos_login";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Intentos_loginDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Intentos_loginDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_loginColumn {
                get {
                    return this.columnId_login;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Codigo_usuarioColumn {
                get {
                    return this.columnCodigo_usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Es_correctoColumn {
                get {
                    return this.columnEs_correcto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow this[int index] {
                get {
                    return ((Intentos_loginRow)(this.Rows[index]));
                }
            }
            
            public event Intentos_loginRowChangeEventHandler Intentos_loginRowChanging;
            
            public event Intentos_loginRowChangeEventHandler Intentos_loginRowChanged;
            
            public event Intentos_loginRowChangeEventHandler Intentos_loginRowDeleting;
            
            public event Intentos_loginRowChangeEventHandler Intentos_loginRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddIntentos_loginRow(Intentos_loginRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow AddIntentos_loginRow(UsuarioRow parentUsuarioRowByFK__Intentos___Codig__35BCFE0A, bool Es_correcto) {
                Intentos_loginRow rowIntentos_loginRow = ((Intentos_loginRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Es_correcto};
                if ((parentUsuarioRowByFK__Intentos___Codig__35BCFE0A != null)) {
                    columnValuesArray[1] = parentUsuarioRowByFK__Intentos___Codig__35BCFE0A[0];
                }
                rowIntentos_loginRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIntentos_loginRow);
                return rowIntentos_loginRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow FindById_login(int Id_login) {
                return ((Intentos_loginRow)(this.Rows.Find(new object[] {
                            Id_login})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Intentos_loginDataTable cln = ((Intentos_loginDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Intentos_loginDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_login = base.Columns["Id_login"];
                this.columnCodigo_usuario = base.Columns["Codigo_usuario"];
                this.columnEs_correcto = base.Columns["Es_correcto"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_login = new global::System.Data.DataColumn("Id_login", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_login);
                this.columnCodigo_usuario = new global::System.Data.DataColumn("Codigo_usuario", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_usuario);
                this.columnEs_correcto = new global::System.Data.DataColumn("Es_correcto", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEs_correcto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_login}, true));
                this.columnId_login.AutoIncrement = true;
                this.columnId_login.AutoIncrementSeed = -1;
                this.columnId_login.AutoIncrementStep = -1;
                this.columnId_login.AllowDBNull = false;
                this.columnId_login.ReadOnly = true;
                this.columnId_login.Unique = true;
                this.columnCodigo_usuario.AllowDBNull = false;
                this.columnEs_correcto.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow NewIntentos_loginRow() {
                return ((Intentos_loginRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Intentos_loginRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Intentos_loginRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Intentos_loginRowChanged != null)) {
                    this.Intentos_loginRowChanged(this, new Intentos_loginRowChangeEvent(((Intentos_loginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Intentos_loginRowChanging != null)) {
                    this.Intentos_loginRowChanging(this, new Intentos_loginRowChangeEvent(((Intentos_loginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Intentos_loginRowDeleted != null)) {
                    this.Intentos_loginRowDeleted(this, new Intentos_loginRowChangeEvent(((Intentos_loginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Intentos_loginRowDeleting != null)) {
                    this.Intentos_loginRowDeleting(this, new Intentos_loginRowChangeEvent(((Intentos_loginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveIntentos_loginRow(Intentos_loginRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Intentos_loginDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LocalidadDataTable : global::System.Data.TypedTableBase<LocalidadRow> {
            
            private global::System.Data.DataColumn columnId_localidad;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadDataTable() {
                this.TableName = "Localidad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocalidadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LocalidadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_localidadColumn {
                get {
                    return this.columnId_localidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow this[int index] {
                get {
                    return ((LocalidadRow)(this.Rows[index]));
                }
            }
            
            public event LocalidadRowChangeEventHandler LocalidadRowChanging;
            
            public event LocalidadRowChangeEventHandler LocalidadRowChanged;
            
            public event LocalidadRowChangeEventHandler LocalidadRowDeleting;
            
            public event LocalidadRowChangeEventHandler LocalidadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLocalidadRow(LocalidadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow AddLocalidadRow(string Descripcion) {
                LocalidadRow rowLocalidadRow = ((LocalidadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion};
                rowLocalidadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLocalidadRow);
                return rowLocalidadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow FindById_localidad(int Id_localidad) {
                return ((LocalidadRow)(this.Rows.Find(new object[] {
                            Id_localidad})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LocalidadDataTable cln = ((LocalidadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LocalidadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_localidad = base.Columns["Id_localidad"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_localidad = new global::System.Data.DataColumn("Id_localidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_localidad);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_localidad}, true));
                this.columnId_localidad.AutoIncrement = true;
                this.columnId_localidad.AutoIncrementSeed = -1;
                this.columnId_localidad.AutoIncrementStep = -1;
                this.columnId_localidad.AllowDBNull = false;
                this.columnId_localidad.ReadOnly = true;
                this.columnId_localidad.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow NewLocalidadRow() {
                return ((LocalidadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LocalidadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LocalidadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LocalidadRowChanged != null)) {
                    this.LocalidadRowChanged(this, new LocalidadRowChangeEvent(((LocalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LocalidadRowChanging != null)) {
                    this.LocalidadRowChanging(this, new LocalidadRowChangeEvent(((LocalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LocalidadRowDeleted != null)) {
                    this.LocalidadRowDeleted(this, new LocalidadRowChangeEvent(((LocalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LocalidadRowDeleting != null)) {
                    this.LocalidadRowDeleting(this, new LocalidadRowChangeEvent(((LocalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLocalidadRow(LocalidadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LocalidadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MaestraDataTable : global::System.Data.TypedTableBase<MaestraRow> {
            
            private global::System.Data.DataColumn columnCli_Pais_Codigo;
            
            private global::System.Data.DataColumn columnCli_Pais_Desc;
            
            private global::System.Data.DataColumn columnCli_Nombre;
            
            private global::System.Data.DataColumn columnCli_Apellido;
            
            private global::System.Data.DataColumn columnCli_Tipo_Doc_Cod;
            
            private global::System.Data.DataColumn columnCli_Nro_Doc;
            
            private global::System.Data.DataColumn columnCli_Tipo_Doc_Desc;
            
            private global::System.Data.DataColumn columnCli_Dom_Calle;
            
            private global::System.Data.DataColumn columnCli_Dom_Nro;
            
            private global::System.Data.DataColumn columnCli_Dom_Piso;
            
            private global::System.Data.DataColumn columnCli_Dom_Depto;
            
            private global::System.Data.DataColumn columnCli_Fecha_Nac;
            
            private global::System.Data.DataColumn columnCli_Mail;
            
            private global::System.Data.DataColumn columnCuenta_Numero;
            
            private global::System.Data.DataColumn columnCuenta_Fecha_Creacion;
            
            private global::System.Data.DataColumn columnCuenta_Estado;
            
            private global::System.Data.DataColumn columnCuenta_Pais_Codigo;
            
            private global::System.Data.DataColumn columnCuenta_Pais_Desc;
            
            private global::System.Data.DataColumn columnCuenta_Fecha_Cierre;
            
            private global::System.Data.DataColumn columnDeposito_Codigo;
            
            private global::System.Data.DataColumn columnDeposito_Fecha;
            
            private global::System.Data.DataColumn columnDeposito_Importe;
            
            private global::System.Data.DataColumn columnTarjeta_Numero;
            
            private global::System.Data.DataColumn columnTarjeta_Fecha_Emision;
            
            private global::System.Data.DataColumn columnTarjeta_Fecha_Vencimiento;
            
            private global::System.Data.DataColumn columnTarjeta_Codigo_Seg;
            
            private global::System.Data.DataColumn columnTarjeta_Emisor_Descripcion;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Numero;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Fecha_Creacion;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Estado;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Pais_Codigo;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Pais_Desc;
            
            private global::System.Data.DataColumn columnCuenta_Dest_Fecha_Cierre;
            
            private global::System.Data.DataColumn columnTransf_Fecha;
            
            private global::System.Data.DataColumn columnTrans_Importe;
            
            private global::System.Data.DataColumn columnTrans_Costo_Trans;
            
            private global::System.Data.DataColumn columnRetiro_Fecha;
            
            private global::System.Data.DataColumn columnRetiro_Codigo;
            
            private global::System.Data.DataColumn columnRetiro_Importe;
            
            private global::System.Data.DataColumn columnCheque_Numero;
            
            private global::System.Data.DataColumn columnCheque_Fecha;
            
            private global::System.Data.DataColumn columnCheque_Importe;
            
            private global::System.Data.DataColumn columnBanco_Cogido;
            
            private global::System.Data.DataColumn columnBanco_Nombre;
            
            private global::System.Data.DataColumn columnBanco_Direccion;
            
            private global::System.Data.DataColumn columnItem_Factura_Descr;
            
            private global::System.Data.DataColumn columnItem_Factura_Importe;
            
            private global::System.Data.DataColumn columnFactura_Numero;
            
            private global::System.Data.DataColumn columnFactura_Fecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraDataTable() {
                this.TableName = "Maestra";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaestraDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MaestraDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Pais_CodigoColumn {
                get {
                    return this.columnCli_Pais_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Pais_DescColumn {
                get {
                    return this.columnCli_Pais_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_NombreColumn {
                get {
                    return this.columnCli_Nombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_ApellidoColumn {
                get {
                    return this.columnCli_Apellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Tipo_Doc_CodColumn {
                get {
                    return this.columnCli_Tipo_Doc_Cod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Nro_DocColumn {
                get {
                    return this.columnCli_Nro_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Tipo_Doc_DescColumn {
                get {
                    return this.columnCli_Tipo_Doc_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Dom_CalleColumn {
                get {
                    return this.columnCli_Dom_Calle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Dom_NroColumn {
                get {
                    return this.columnCli_Dom_Nro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Dom_PisoColumn {
                get {
                    return this.columnCli_Dom_Piso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Dom_DeptoColumn {
                get {
                    return this.columnCli_Dom_Depto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_Fecha_NacColumn {
                get {
                    return this.columnCli_Fecha_Nac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cli_MailColumn {
                get {
                    return this.columnCli_Mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_NumeroColumn {
                get {
                    return this.columnCuenta_Numero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Fecha_CreacionColumn {
                get {
                    return this.columnCuenta_Fecha_Creacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_EstadoColumn {
                get {
                    return this.columnCuenta_Estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Pais_CodigoColumn {
                get {
                    return this.columnCuenta_Pais_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Pais_DescColumn {
                get {
                    return this.columnCuenta_Pais_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Fecha_CierreColumn {
                get {
                    return this.columnCuenta_Fecha_Cierre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deposito_CodigoColumn {
                get {
                    return this.columnDeposito_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deposito_FechaColumn {
                get {
                    return this.columnDeposito_Fecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Deposito_ImporteColumn {
                get {
                    return this.columnDeposito_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tarjeta_NumeroColumn {
                get {
                    return this.columnTarjeta_Numero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tarjeta_Fecha_EmisionColumn {
                get {
                    return this.columnTarjeta_Fecha_Emision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tarjeta_Fecha_VencimientoColumn {
                get {
                    return this.columnTarjeta_Fecha_Vencimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tarjeta_Codigo_SegColumn {
                get {
                    return this.columnTarjeta_Codigo_Seg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tarjeta_Emisor_DescripcionColumn {
                get {
                    return this.columnTarjeta_Emisor_Descripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_NumeroColumn {
                get {
                    return this.columnCuenta_Dest_Numero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_Fecha_CreacionColumn {
                get {
                    return this.columnCuenta_Dest_Fecha_Creacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_EstadoColumn {
                get {
                    return this.columnCuenta_Dest_Estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_Pais_CodigoColumn {
                get {
                    return this.columnCuenta_Dest_Pais_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_Pais_DescColumn {
                get {
                    return this.columnCuenta_Dest_Pais_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cuenta_Dest_Fecha_CierreColumn {
                get {
                    return this.columnCuenta_Dest_Fecha_Cierre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transf_FechaColumn {
                get {
                    return this.columnTransf_Fecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Trans_ImporteColumn {
                get {
                    return this.columnTrans_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Trans_Costo_TransColumn {
                get {
                    return this.columnTrans_Costo_Trans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Retiro_FechaColumn {
                get {
                    return this.columnRetiro_Fecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Retiro_CodigoColumn {
                get {
                    return this.columnRetiro_Codigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Retiro_ImporteColumn {
                get {
                    return this.columnRetiro_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_NumeroColumn {
                get {
                    return this.columnCheque_Numero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_FechaColumn {
                get {
                    return this.columnCheque_Fecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cheque_ImporteColumn {
                get {
                    return this.columnCheque_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Banco_CogidoColumn {
                get {
                    return this.columnBanco_Cogido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Banco_NombreColumn {
                get {
                    return this.columnBanco_Nombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Banco_DireccionColumn {
                get {
                    return this.columnBanco_Direccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Factura_DescrColumn {
                get {
                    return this.columnItem_Factura_Descr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_Factura_ImporteColumn {
                get {
                    return this.columnItem_Factura_Importe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Factura_NumeroColumn {
                get {
                    return this.columnFactura_Numero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Factura_FechaColumn {
                get {
                    return this.columnFactura_Fecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraRow this[int index] {
                get {
                    return ((MaestraRow)(this.Rows[index]));
                }
            }
            
            public event MaestraRowChangeEventHandler MaestraRowChanging;
            
            public event MaestraRowChangeEventHandler MaestraRowChanged;
            
            public event MaestraRowChangeEventHandler MaestraRowDeleting;
            
            public event MaestraRowChangeEventHandler MaestraRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMaestraRow(MaestraRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraRow AddMaestraRow(
                        decimal Cli_Pais_Codigo, 
                        string Cli_Pais_Desc, 
                        string Cli_Nombre, 
                        string Cli_Apellido, 
                        decimal Cli_Tipo_Doc_Cod, 
                        decimal Cli_Nro_Doc, 
                        string Cli_Tipo_Doc_Desc, 
                        string Cli_Dom_Calle, 
                        decimal Cli_Dom_Nro, 
                        decimal Cli_Dom_Piso, 
                        string Cli_Dom_Depto, 
                        System.DateTime Cli_Fecha_Nac, 
                        string Cli_Mail, 
                        decimal Cuenta_Numero, 
                        System.DateTime Cuenta_Fecha_Creacion, 
                        string Cuenta_Estado, 
                        decimal Cuenta_Pais_Codigo, 
                        string Cuenta_Pais_Desc, 
                        System.DateTime Cuenta_Fecha_Cierre, 
                        decimal Deposito_Codigo, 
                        System.DateTime Deposito_Fecha, 
                        decimal Deposito_Importe, 
                        string Tarjeta_Numero, 
                        System.DateTime Tarjeta_Fecha_Emision, 
                        System.DateTime Tarjeta_Fecha_Vencimiento, 
                        string Tarjeta_Codigo_Seg, 
                        string Tarjeta_Emisor_Descripcion, 
                        decimal Cuenta_Dest_Numero, 
                        System.DateTime Cuenta_Dest_Fecha_Creacion, 
                        string Cuenta_Dest_Estado, 
                        decimal Cuenta_Dest_Pais_Codigo, 
                        string Cuenta_Dest_Pais_Desc, 
                        System.DateTime Cuenta_Dest_Fecha_Cierre, 
                        System.DateTime Transf_Fecha, 
                        decimal Trans_Importe, 
                        decimal Trans_Costo_Trans, 
                        System.DateTime Retiro_Fecha, 
                        decimal Retiro_Codigo, 
                        decimal Retiro_Importe, 
                        decimal Cheque_Numero, 
                        System.DateTime Cheque_Fecha, 
                        decimal Cheque_Importe, 
                        decimal Banco_Cogido, 
                        string Banco_Nombre, 
                        string Banco_Direccion, 
                        string Item_Factura_Descr, 
                        decimal Item_Factura_Importe, 
                        decimal Factura_Numero, 
                        System.DateTime Factura_Fecha) {
                MaestraRow rowMaestraRow = ((MaestraRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cli_Pais_Codigo,
                        Cli_Pais_Desc,
                        Cli_Nombre,
                        Cli_Apellido,
                        Cli_Tipo_Doc_Cod,
                        Cli_Nro_Doc,
                        Cli_Tipo_Doc_Desc,
                        Cli_Dom_Calle,
                        Cli_Dom_Nro,
                        Cli_Dom_Piso,
                        Cli_Dom_Depto,
                        Cli_Fecha_Nac,
                        Cli_Mail,
                        Cuenta_Numero,
                        Cuenta_Fecha_Creacion,
                        Cuenta_Estado,
                        Cuenta_Pais_Codigo,
                        Cuenta_Pais_Desc,
                        Cuenta_Fecha_Cierre,
                        Deposito_Codigo,
                        Deposito_Fecha,
                        Deposito_Importe,
                        Tarjeta_Numero,
                        Tarjeta_Fecha_Emision,
                        Tarjeta_Fecha_Vencimiento,
                        Tarjeta_Codigo_Seg,
                        Tarjeta_Emisor_Descripcion,
                        Cuenta_Dest_Numero,
                        Cuenta_Dest_Fecha_Creacion,
                        Cuenta_Dest_Estado,
                        Cuenta_Dest_Pais_Codigo,
                        Cuenta_Dest_Pais_Desc,
                        Cuenta_Dest_Fecha_Cierre,
                        Transf_Fecha,
                        Trans_Importe,
                        Trans_Costo_Trans,
                        Retiro_Fecha,
                        Retiro_Codigo,
                        Retiro_Importe,
                        Cheque_Numero,
                        Cheque_Fecha,
                        Cheque_Importe,
                        Banco_Cogido,
                        Banco_Nombre,
                        Banco_Direccion,
                        Item_Factura_Descr,
                        Item_Factura_Importe,
                        Factura_Numero,
                        Factura_Fecha};
                rowMaestraRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMaestraRow);
                return rowMaestraRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MaestraDataTable cln = ((MaestraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MaestraDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCli_Pais_Codigo = base.Columns["Cli_Pais_Codigo"];
                this.columnCli_Pais_Desc = base.Columns["Cli_Pais_Desc"];
                this.columnCli_Nombre = base.Columns["Cli_Nombre"];
                this.columnCli_Apellido = base.Columns["Cli_Apellido"];
                this.columnCli_Tipo_Doc_Cod = base.Columns["Cli_Tipo_Doc_Cod"];
                this.columnCli_Nro_Doc = base.Columns["Cli_Nro_Doc"];
                this.columnCli_Tipo_Doc_Desc = base.Columns["Cli_Tipo_Doc_Desc"];
                this.columnCli_Dom_Calle = base.Columns["Cli_Dom_Calle"];
                this.columnCli_Dom_Nro = base.Columns["Cli_Dom_Nro"];
                this.columnCli_Dom_Piso = base.Columns["Cli_Dom_Piso"];
                this.columnCli_Dom_Depto = base.Columns["Cli_Dom_Depto"];
                this.columnCli_Fecha_Nac = base.Columns["Cli_Fecha_Nac"];
                this.columnCli_Mail = base.Columns["Cli_Mail"];
                this.columnCuenta_Numero = base.Columns["Cuenta_Numero"];
                this.columnCuenta_Fecha_Creacion = base.Columns["Cuenta_Fecha_Creacion"];
                this.columnCuenta_Estado = base.Columns["Cuenta_Estado"];
                this.columnCuenta_Pais_Codigo = base.Columns["Cuenta_Pais_Codigo"];
                this.columnCuenta_Pais_Desc = base.Columns["Cuenta_Pais_Desc"];
                this.columnCuenta_Fecha_Cierre = base.Columns["Cuenta_Fecha_Cierre"];
                this.columnDeposito_Codigo = base.Columns["Deposito_Codigo"];
                this.columnDeposito_Fecha = base.Columns["Deposito_Fecha"];
                this.columnDeposito_Importe = base.Columns["Deposito_Importe"];
                this.columnTarjeta_Numero = base.Columns["Tarjeta_Numero"];
                this.columnTarjeta_Fecha_Emision = base.Columns["Tarjeta_Fecha_Emision"];
                this.columnTarjeta_Fecha_Vencimiento = base.Columns["Tarjeta_Fecha_Vencimiento"];
                this.columnTarjeta_Codigo_Seg = base.Columns["Tarjeta_Codigo_Seg"];
                this.columnTarjeta_Emisor_Descripcion = base.Columns["Tarjeta_Emisor_Descripcion"];
                this.columnCuenta_Dest_Numero = base.Columns["Cuenta_Dest_Numero"];
                this.columnCuenta_Dest_Fecha_Creacion = base.Columns["Cuenta_Dest_Fecha_Creacion"];
                this.columnCuenta_Dest_Estado = base.Columns["Cuenta_Dest_Estado"];
                this.columnCuenta_Dest_Pais_Codigo = base.Columns["Cuenta_Dest_Pais_Codigo"];
                this.columnCuenta_Dest_Pais_Desc = base.Columns["Cuenta_Dest_Pais_Desc"];
                this.columnCuenta_Dest_Fecha_Cierre = base.Columns["Cuenta_Dest_Fecha_Cierre"];
                this.columnTransf_Fecha = base.Columns["Transf_Fecha"];
                this.columnTrans_Importe = base.Columns["Trans_Importe"];
                this.columnTrans_Costo_Trans = base.Columns["Trans_Costo_Trans"];
                this.columnRetiro_Fecha = base.Columns["Retiro_Fecha"];
                this.columnRetiro_Codigo = base.Columns["Retiro_Codigo"];
                this.columnRetiro_Importe = base.Columns["Retiro_Importe"];
                this.columnCheque_Numero = base.Columns["Cheque_Numero"];
                this.columnCheque_Fecha = base.Columns["Cheque_Fecha"];
                this.columnCheque_Importe = base.Columns["Cheque_Importe"];
                this.columnBanco_Cogido = base.Columns["Banco_Cogido"];
                this.columnBanco_Nombre = base.Columns["Banco_Nombre"];
                this.columnBanco_Direccion = base.Columns["Banco_Direccion"];
                this.columnItem_Factura_Descr = base.Columns["Item_Factura_Descr"];
                this.columnItem_Factura_Importe = base.Columns["Item_Factura_Importe"];
                this.columnFactura_Numero = base.Columns["Factura_Numero"];
                this.columnFactura_Fecha = base.Columns["Factura_Fecha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCli_Pais_Codigo = new global::System.Data.DataColumn("Cli_Pais_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Pais_Codigo);
                this.columnCli_Pais_Desc = new global::System.Data.DataColumn("Cli_Pais_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Pais_Desc);
                this.columnCli_Nombre = new global::System.Data.DataColumn("Cli_Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Nombre);
                this.columnCli_Apellido = new global::System.Data.DataColumn("Cli_Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Apellido);
                this.columnCli_Tipo_Doc_Cod = new global::System.Data.DataColumn("Cli_Tipo_Doc_Cod", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Tipo_Doc_Cod);
                this.columnCli_Nro_Doc = new global::System.Data.DataColumn("Cli_Nro_Doc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Nro_Doc);
                this.columnCli_Tipo_Doc_Desc = new global::System.Data.DataColumn("Cli_Tipo_Doc_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Tipo_Doc_Desc);
                this.columnCli_Dom_Calle = new global::System.Data.DataColumn("Cli_Dom_Calle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Dom_Calle);
                this.columnCli_Dom_Nro = new global::System.Data.DataColumn("Cli_Dom_Nro", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Dom_Nro);
                this.columnCli_Dom_Piso = new global::System.Data.DataColumn("Cli_Dom_Piso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Dom_Piso);
                this.columnCli_Dom_Depto = new global::System.Data.DataColumn("Cli_Dom_Depto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Dom_Depto);
                this.columnCli_Fecha_Nac = new global::System.Data.DataColumn("Cli_Fecha_Nac", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Fecha_Nac);
                this.columnCli_Mail = new global::System.Data.DataColumn("Cli_Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCli_Mail);
                this.columnCuenta_Numero = new global::System.Data.DataColumn("Cuenta_Numero", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Numero);
                this.columnCuenta_Fecha_Creacion = new global::System.Data.DataColumn("Cuenta_Fecha_Creacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Fecha_Creacion);
                this.columnCuenta_Estado = new global::System.Data.DataColumn("Cuenta_Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Estado);
                this.columnCuenta_Pais_Codigo = new global::System.Data.DataColumn("Cuenta_Pais_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Pais_Codigo);
                this.columnCuenta_Pais_Desc = new global::System.Data.DataColumn("Cuenta_Pais_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Pais_Desc);
                this.columnCuenta_Fecha_Cierre = new global::System.Data.DataColumn("Cuenta_Fecha_Cierre", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Fecha_Cierre);
                this.columnDeposito_Codigo = new global::System.Data.DataColumn("Deposito_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposito_Codigo);
                this.columnDeposito_Fecha = new global::System.Data.DataColumn("Deposito_Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposito_Fecha);
                this.columnDeposito_Importe = new global::System.Data.DataColumn("Deposito_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposito_Importe);
                this.columnTarjeta_Numero = new global::System.Data.DataColumn("Tarjeta_Numero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarjeta_Numero);
                this.columnTarjeta_Fecha_Emision = new global::System.Data.DataColumn("Tarjeta_Fecha_Emision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarjeta_Fecha_Emision);
                this.columnTarjeta_Fecha_Vencimiento = new global::System.Data.DataColumn("Tarjeta_Fecha_Vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarjeta_Fecha_Vencimiento);
                this.columnTarjeta_Codigo_Seg = new global::System.Data.DataColumn("Tarjeta_Codigo_Seg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarjeta_Codigo_Seg);
                this.columnTarjeta_Emisor_Descripcion = new global::System.Data.DataColumn("Tarjeta_Emisor_Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarjeta_Emisor_Descripcion);
                this.columnCuenta_Dest_Numero = new global::System.Data.DataColumn("Cuenta_Dest_Numero", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Numero);
                this.columnCuenta_Dest_Fecha_Creacion = new global::System.Data.DataColumn("Cuenta_Dest_Fecha_Creacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Fecha_Creacion);
                this.columnCuenta_Dest_Estado = new global::System.Data.DataColumn("Cuenta_Dest_Estado", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Estado);
                this.columnCuenta_Dest_Pais_Codigo = new global::System.Data.DataColumn("Cuenta_Dest_Pais_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Pais_Codigo);
                this.columnCuenta_Dest_Pais_Desc = new global::System.Data.DataColumn("Cuenta_Dest_Pais_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Pais_Desc);
                this.columnCuenta_Dest_Fecha_Cierre = new global::System.Data.DataColumn("Cuenta_Dest_Fecha_Cierre", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCuenta_Dest_Fecha_Cierre);
                this.columnTransf_Fecha = new global::System.Data.DataColumn("Transf_Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransf_Fecha);
                this.columnTrans_Importe = new global::System.Data.DataColumn("Trans_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrans_Importe);
                this.columnTrans_Costo_Trans = new global::System.Data.DataColumn("Trans_Costo_Trans", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrans_Costo_Trans);
                this.columnRetiro_Fecha = new global::System.Data.DataColumn("Retiro_Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetiro_Fecha);
                this.columnRetiro_Codigo = new global::System.Data.DataColumn("Retiro_Codigo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetiro_Codigo);
                this.columnRetiro_Importe = new global::System.Data.DataColumn("Retiro_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetiro_Importe);
                this.columnCheque_Numero = new global::System.Data.DataColumn("Cheque_Numero", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Numero);
                this.columnCheque_Fecha = new global::System.Data.DataColumn("Cheque_Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Fecha);
                this.columnCheque_Importe = new global::System.Data.DataColumn("Cheque_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheque_Importe);
                this.columnBanco_Cogido = new global::System.Data.DataColumn("Banco_Cogido", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBanco_Cogido);
                this.columnBanco_Nombre = new global::System.Data.DataColumn("Banco_Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBanco_Nombre);
                this.columnBanco_Direccion = new global::System.Data.DataColumn("Banco_Direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBanco_Direccion);
                this.columnItem_Factura_Descr = new global::System.Data.DataColumn("Item_Factura_Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Factura_Descr);
                this.columnItem_Factura_Importe = new global::System.Data.DataColumn("Item_Factura_Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Factura_Importe);
                this.columnFactura_Numero = new global::System.Data.DataColumn("Factura_Numero", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactura_Numero);
                this.columnFactura_Fecha = new global::System.Data.DataColumn("Factura_Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactura_Fecha);
                this.columnCli_Pais_Desc.MaxLength = 250;
                this.columnCli_Nombre.MaxLength = 255;
                this.columnCli_Apellido.MaxLength = 255;
                this.columnCli_Tipo_Doc_Desc.MaxLength = 255;
                this.columnCli_Dom_Calle.MaxLength = 255;
                this.columnCli_Dom_Depto.MaxLength = 10;
                this.columnCli_Mail.MaxLength = 255;
                this.columnCuenta_Estado.MaxLength = 255;
                this.columnCuenta_Pais_Desc.MaxLength = 250;
                this.columnTarjeta_Numero.MaxLength = 16;
                this.columnTarjeta_Codigo_Seg.MaxLength = 3;
                this.columnTarjeta_Emisor_Descripcion.MaxLength = 255;
                this.columnCuenta_Dest_Estado.MaxLength = 255;
                this.columnCuenta_Dest_Pais_Desc.MaxLength = 250;
                this.columnBanco_Nombre.MaxLength = 255;
                this.columnBanco_Direccion.MaxLength = 255;
                this.columnItem_Factura_Descr.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraRow NewMaestraRow() {
                return ((MaestraRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MaestraRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MaestraRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MaestraRowChanged != null)) {
                    this.MaestraRowChanged(this, new MaestraRowChangeEvent(((MaestraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MaestraRowChanging != null)) {
                    this.MaestraRowChanging(this, new MaestraRowChangeEvent(((MaestraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MaestraRowDeleted != null)) {
                    this.MaestraRowDeleted(this, new MaestraRowChangeEvent(((MaestraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MaestraRowDeleting != null)) {
                    this.MaestraRowDeleting(this, new MaestraRowChangeEvent(((MaestraRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMaestraRow(MaestraRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MaestraDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Modificacion_cuentaDataTable : global::System.Data.TypedTableBase<Modificacion_cuentaRow> {
            
            private global::System.Data.DataColumn columnId_modificacion;
            
            private global::System.Data.DataColumn columnCod_tipo;
            
            private global::System.Data.DataColumn columnCod_cuenta;
            
            private global::System.Data.DataColumn columnCod_transaccion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaDataTable() {
                this.TableName = "Modificacion_cuenta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Modificacion_cuentaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Modificacion_cuentaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_modificacionColumn {
                get {
                    return this.columnId_modificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_tipoColumn {
                get {
                    return this.columnCod_tipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_cuentaColumn {
                get {
                    return this.columnCod_cuenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_transaccionColumn {
                get {
                    return this.columnCod_transaccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow this[int index] {
                get {
                    return ((Modificacion_cuentaRow)(this.Rows[index]));
                }
            }
            
            public event Modificacion_cuentaRowChangeEventHandler Modificacion_cuentaRowChanging;
            
            public event Modificacion_cuentaRowChangeEventHandler Modificacion_cuentaRowChanged;
            
            public event Modificacion_cuentaRowChangeEventHandler Modificacion_cuentaRowDeleting;
            
            public event Modificacion_cuentaRowChangeEventHandler Modificacion_cuentaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddModificacion_cuentaRow(Modificacion_cuentaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow AddModificacion_cuentaRow(Tipo_modificacionRow parentTipo_modificacionRowByFK__Modificac__Cod_t__75A278F5, CuentaRow parentCuentaRowByFK__Modificac__Cod_c__76969D2E, TransaccionesRow parentTransaccionesRowByFK__Modificac__Cod_t__778AC167) {
                Modificacion_cuentaRow rowModificacion_cuentaRow = ((Modificacion_cuentaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null};
                if ((parentTipo_modificacionRowByFK__Modificac__Cod_t__75A278F5 != null)) {
                    columnValuesArray[1] = parentTipo_modificacionRowByFK__Modificac__Cod_t__75A278F5[0];
                }
                if ((parentCuentaRowByFK__Modificac__Cod_c__76969D2E != null)) {
                    columnValuesArray[2] = parentCuentaRowByFK__Modificac__Cod_c__76969D2E[0];
                }
                if ((parentTransaccionesRowByFK__Modificac__Cod_t__778AC167 != null)) {
                    columnValuesArray[3] = parentTransaccionesRowByFK__Modificac__Cod_t__778AC167[0];
                }
                rowModificacion_cuentaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowModificacion_cuentaRow);
                return rowModificacion_cuentaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow FindById_modificacion(int Id_modificacion) {
                return ((Modificacion_cuentaRow)(this.Rows.Find(new object[] {
                            Id_modificacion})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Modificacion_cuentaDataTable cln = ((Modificacion_cuentaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Modificacion_cuentaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_modificacion = base.Columns["Id_modificacion"];
                this.columnCod_tipo = base.Columns["Cod_tipo"];
                this.columnCod_cuenta = base.Columns["Cod_cuenta"];
                this.columnCod_transaccion = base.Columns["Cod_transaccion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_modificacion = new global::System.Data.DataColumn("Id_modificacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_modificacion);
                this.columnCod_tipo = new global::System.Data.DataColumn("Cod_tipo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_tipo);
                this.columnCod_cuenta = new global::System.Data.DataColumn("Cod_cuenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cuenta);
                this.columnCod_transaccion = new global::System.Data.DataColumn("Cod_transaccion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_transaccion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_modificacion}, true));
                this.columnId_modificacion.AutoIncrement = true;
                this.columnId_modificacion.AutoIncrementSeed = -1;
                this.columnId_modificacion.AutoIncrementStep = -1;
                this.columnId_modificacion.AllowDBNull = false;
                this.columnId_modificacion.ReadOnly = true;
                this.columnId_modificacion.Unique = true;
                this.columnCod_tipo.AllowDBNull = false;
                this.columnCod_cuenta.AllowDBNull = false;
                this.columnCod_transaccion.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow NewModificacion_cuentaRow() {
                return ((Modificacion_cuentaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Modificacion_cuentaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Modificacion_cuentaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Modificacion_cuentaRowChanged != null)) {
                    this.Modificacion_cuentaRowChanged(this, new Modificacion_cuentaRowChangeEvent(((Modificacion_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Modificacion_cuentaRowChanging != null)) {
                    this.Modificacion_cuentaRowChanging(this, new Modificacion_cuentaRowChangeEvent(((Modificacion_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Modificacion_cuentaRowDeleted != null)) {
                    this.Modificacion_cuentaRowDeleted(this, new Modificacion_cuentaRowChangeEvent(((Modificacion_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Modificacion_cuentaRowDeleting != null)) {
                    this.Modificacion_cuentaRowDeleting(this, new Modificacion_cuentaRowChangeEvent(((Modificacion_cuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveModificacion_cuentaRow(Modificacion_cuentaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Modificacion_cuentaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonedaDataTable : global::System.Data.TypedTableBase<MonedaRow> {
            
            private global::System.Data.DataColumn columnId_moneda;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnConversion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaDataTable() {
                this.TableName = "Moneda";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonedaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MonedaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_monedaColumn {
                get {
                    return this.columnId_moneda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConversionColumn {
                get {
                    return this.columnConversion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow this[int index] {
                get {
                    return ((MonedaRow)(this.Rows[index]));
                }
            }
            
            public event MonedaRowChangeEventHandler MonedaRowChanging;
            
            public event MonedaRowChangeEventHandler MonedaRowChanged;
            
            public event MonedaRowChangeEventHandler MonedaRowDeleting;
            
            public event MonedaRowChangeEventHandler MonedaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMonedaRow(MonedaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow AddMonedaRow(string Descripcion, double Conversion) {
                MonedaRow rowMonedaRow = ((MonedaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Conversion};
                rowMonedaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonedaRow);
                return rowMonedaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow FindById_moneda(int Id_moneda) {
                return ((MonedaRow)(this.Rows.Find(new object[] {
                            Id_moneda})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MonedaDataTable cln = ((MonedaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonedaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_moneda = base.Columns["Id_moneda"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnConversion = base.Columns["Conversion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_moneda = new global::System.Data.DataColumn("Id_moneda", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_moneda);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnConversion = new global::System.Data.DataColumn("Conversion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConversion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_moneda}, true));
                this.columnId_moneda.AutoIncrement = true;
                this.columnId_moneda.AutoIncrementSeed = -1;
                this.columnId_moneda.AutoIncrementStep = -1;
                this.columnId_moneda.AllowDBNull = false;
                this.columnId_moneda.ReadOnly = true;
                this.columnId_moneda.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 20;
                this.columnConversion.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow NewMonedaRow() {
                return ((MonedaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonedaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MonedaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonedaRowChanged != null)) {
                    this.MonedaRowChanged(this, new MonedaRowChangeEvent(((MonedaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonedaRowChanging != null)) {
                    this.MonedaRowChanging(this, new MonedaRowChangeEvent(((MonedaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonedaRowDeleted != null)) {
                    this.MonedaRowDeleted(this, new MonedaRowChangeEvent(((MonedaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonedaRowDeleting != null)) {
                    this.MonedaRowDeleting(this, new MonedaRowChangeEvent(((MonedaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMonedaRow(MonedaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonedaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaisDataTable : global::System.Data.TypedTableBase<PaisRow> {
            
            private global::System.Data.DataColumn columnId_Pais;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisDataTable() {
                this.TableName = "Pais";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_PaisColumn {
                get {
                    return this.columnId_Pais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow this[int index] {
                get {
                    return ((PaisRow)(this.Rows[index]));
                }
            }
            
            public event PaisRowChangeEventHandler PaisRowChanging;
            
            public event PaisRowChangeEventHandler PaisRowChanged;
            
            public event PaisRowChangeEventHandler PaisRowDeleting;
            
            public event PaisRowChangeEventHandler PaisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaisRow(PaisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow AddPaisRow(int Id_Pais, string Descripcion) {
                PaisRow rowPaisRow = ((PaisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_Pais,
                        Descripcion};
                rowPaisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaisRow);
                return rowPaisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow FindById_Pais(int Id_Pais) {
                return ((PaisRow)(this.Rows.Find(new object[] {
                            Id_Pais})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaisDataTable cln = ((PaisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_Pais = base.Columns["Id_Pais"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_Pais = new global::System.Data.DataColumn("Id_Pais", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Pais);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_Pais}, true));
                this.columnId_Pais.AllowDBNull = false;
                this.columnId_Pais.Unique = true;
                this.columnDescripcion.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow NewPaisRow() {
                return ((PaisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaisRowChanged != null)) {
                    this.PaisRowChanged(this, new PaisRowChangeEvent(((PaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaisRowChanging != null)) {
                    this.PaisRowChanging(this, new PaisRowChangeEvent(((PaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaisRowDeleted != null)) {
                    this.PaisRowDeleted(this, new PaisRowChangeEvent(((PaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaisRowDeleting != null)) {
                    this.PaisRowDeleting(this, new PaisRowChangeEvent(((PaisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaisRow(PaisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RetirosDataTable : global::System.Data.TypedTableBase<RetirosRow> {
            
            private global::System.Data.DataColumn columnId_retiro;
            
            private global::System.Data.DataColumn columnCod_cuenta;
            
            private global::System.Data.DataColumn columnCod_cheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosDataTable() {
                this.TableName = "Retiros";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetirosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RetirosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_retiroColumn {
                get {
                    return this.columnId_retiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_cuentaColumn {
                get {
                    return this.columnCod_cuenta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_chequeColumn {
                get {
                    return this.columnCod_cheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow this[int index] {
                get {
                    return ((RetirosRow)(this.Rows[index]));
                }
            }
            
            public event RetirosRowChangeEventHandler RetirosRowChanging;
            
            public event RetirosRowChangeEventHandler RetirosRowChanged;
            
            public event RetirosRowChangeEventHandler RetirosRowDeleting;
            
            public event RetirosRowChangeEventHandler RetirosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRetirosRow(RetirosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow AddRetirosRow(int Id_retiro, CuentaRow parentCuentaRowByFK__Retiros__Cod_cue__1BC821DD, ChequeRow parentChequeRowByFK__Retiros__Cod_che__1CBC4616) {
                RetirosRow rowRetirosRow = ((RetirosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_retiro,
                        null,
                        null};
                if ((parentCuentaRowByFK__Retiros__Cod_cue__1BC821DD != null)) {
                    columnValuesArray[1] = parentCuentaRowByFK__Retiros__Cod_cue__1BC821DD[0];
                }
                if ((parentChequeRowByFK__Retiros__Cod_che__1CBC4616 != null)) {
                    columnValuesArray[2] = parentChequeRowByFK__Retiros__Cod_che__1CBC4616[0];
                }
                rowRetirosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRetirosRow);
                return rowRetirosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow FindById_retiro(int Id_retiro) {
                return ((RetirosRow)(this.Rows.Find(new object[] {
                            Id_retiro})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RetirosDataTable cln = ((RetirosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RetirosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_retiro = base.Columns["Id_retiro"];
                this.columnCod_cuenta = base.Columns["Cod_cuenta"];
                this.columnCod_cheque = base.Columns["Cod_cheque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_retiro = new global::System.Data.DataColumn("Id_retiro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_retiro);
                this.columnCod_cuenta = new global::System.Data.DataColumn("Cod_cuenta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cuenta);
                this.columnCod_cheque = new global::System.Data.DataColumn("Cod_cheque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cheque);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_retiro}, true));
                this.columnId_retiro.AllowDBNull = false;
                this.columnId_retiro.Unique = true;
                this.columnCod_cuenta.AllowDBNull = false;
                this.columnCod_cheque.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow NewRetirosRow() {
                return ((RetirosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RetirosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RetirosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RetirosRowChanged != null)) {
                    this.RetirosRowChanged(this, new RetirosRowChangeEvent(((RetirosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RetirosRowChanging != null)) {
                    this.RetirosRowChanging(this, new RetirosRowChangeEvent(((RetirosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RetirosRowDeleted != null)) {
                    this.RetirosRowDeleted(this, new RetirosRowChangeEvent(((RetirosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RetirosRowDeleting != null)) {
                    this.RetirosRowDeleting(this, new RetirosRowChangeEvent(((RetirosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRetirosRow(RetirosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RetirosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RolDataTable : global::System.Data.TypedTableBase<RolRow> {
            
            private global::System.Data.DataColumn columnId_rol;
            
            private global::System.Data.DataColumn columnNombre_rol;
            
            private global::System.Data.DataColumn columnCod_estado;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolDataTable() {
                this.TableName = "Rol";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_rolColumn {
                get {
                    return this.columnId_rol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nombre_rolColumn {
                get {
                    return this.columnNombre_rol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_estadoColumn {
                get {
                    return this.columnCod_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow this[int index] {
                get {
                    return ((RolRow)(this.Rows[index]));
                }
            }
            
            public event RolRowChangeEventHandler RolRowChanging;
            
            public event RolRowChangeEventHandler RolRowChanged;
            
            public event RolRowChangeEventHandler RolRowDeleting;
            
            public event RolRowChangeEventHandler RolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRolRow(RolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow AddRolRow(string Nombre_rol, Estado_rolRow parentEstado_rolRowByFK__Rol__Cod_estado__4316F928) {
                RolRow rowRolRow = ((RolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre_rol,
                        null};
                if ((parentEstado_rolRowByFK__Rol__Cod_estado__4316F928 != null)) {
                    columnValuesArray[2] = parentEstado_rolRowByFK__Rol__Cod_estado__4316F928[0];
                }
                rowRolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRolRow);
                return rowRolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow FindById_rol(int Id_rol) {
                return ((RolRow)(this.Rows.Find(new object[] {
                            Id_rol})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RolDataTable cln = ((RolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_rol = base.Columns["Id_rol"];
                this.columnNombre_rol = base.Columns["Nombre_rol"];
                this.columnCod_estado = base.Columns["Cod_estado"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_rol = new global::System.Data.DataColumn("Id_rol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_rol);
                this.columnNombre_rol = new global::System.Data.DataColumn("Nombre_rol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_rol);
                this.columnCod_estado = new global::System.Data.DataColumn("Cod_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_estado);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_rol}, true));
                this.columnId_rol.AutoIncrement = true;
                this.columnId_rol.AutoIncrementSeed = -1;
                this.columnId_rol.AutoIncrementStep = -1;
                this.columnId_rol.AllowDBNull = false;
                this.columnId_rol.ReadOnly = true;
                this.columnId_rol.Unique = true;
                this.columnNombre_rol.AllowDBNull = false;
                this.columnNombre_rol.MaxLength = 30;
                this.columnCod_estado.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow NewRolRow() {
                return ((RolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RolRowChanged != null)) {
                    this.RolRowChanged(this, new RolRowChangeEvent(((RolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RolRowChanging != null)) {
                    this.RolRowChanging(this, new RolRowChangeEvent(((RolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RolRowDeleted != null)) {
                    this.RolRowDeleted(this, new RolRowChangeEvent(((RolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RolRowDeleting != null)) {
                    this.RolRowDeleting(this, new RolRowChangeEvent(((RolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRolRow(RolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Rol_funcionalidadDataTable : global::System.Data.TypedTableBase<Rol_funcionalidadRow> {
            
            private global::System.Data.DataColumn columnCod_rol;
            
            private global::System.Data.DataColumn columnCod_funcionalidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadDataTable() {
                this.TableName = "Rol_funcionalidad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Rol_funcionalidadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Rol_funcionalidadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_rolColumn {
                get {
                    return this.columnCod_rol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_funcionalidadColumn {
                get {
                    return this.columnCod_funcionalidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow this[int index] {
                get {
                    return ((Rol_funcionalidadRow)(this.Rows[index]));
                }
            }
            
            public event Rol_funcionalidadRowChangeEventHandler Rol_funcionalidadRowChanging;
            
            public event Rol_funcionalidadRowChangeEventHandler Rol_funcionalidadRowChanged;
            
            public event Rol_funcionalidadRowChangeEventHandler Rol_funcionalidadRowDeleting;
            
            public event Rol_funcionalidadRowChangeEventHandler Rol_funcionalidadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRol_funcionalidadRow(Rol_funcionalidadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow AddRol_funcionalidadRow(RolRow parentRolRowByFK__Rol_funci__Cod_f__4BAC3F29, FuncionalidadRow parentFuncionalidadRowByFK__Rol_funci__Cod_f__4CA06362) {
                Rol_funcionalidadRow rowRol_funcionalidadRow = ((Rol_funcionalidadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentRolRowByFK__Rol_funci__Cod_f__4BAC3F29 != null)) {
                    columnValuesArray[0] = parentRolRowByFK__Rol_funci__Cod_f__4BAC3F29[0];
                }
                if ((parentFuncionalidadRowByFK__Rol_funci__Cod_f__4CA06362 != null)) {
                    columnValuesArray[1] = parentFuncionalidadRowByFK__Rol_funci__Cod_f__4CA06362[0];
                }
                rowRol_funcionalidadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRol_funcionalidadRow);
                return rowRol_funcionalidadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Rol_funcionalidadDataTable cln = ((Rol_funcionalidadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Rol_funcionalidadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCod_rol = base.Columns["Cod_rol"];
                this.columnCod_funcionalidad = base.Columns["Cod_funcionalidad"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCod_rol = new global::System.Data.DataColumn("Cod_rol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_rol);
                this.columnCod_funcionalidad = new global::System.Data.DataColumn("Cod_funcionalidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_funcionalidad);
                this.columnCod_rol.AllowDBNull = false;
                this.columnCod_funcionalidad.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow NewRol_funcionalidadRow() {
                return ((Rol_funcionalidadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Rol_funcionalidadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Rol_funcionalidadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Rol_funcionalidadRowChanged != null)) {
                    this.Rol_funcionalidadRowChanged(this, new Rol_funcionalidadRowChangeEvent(((Rol_funcionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Rol_funcionalidadRowChanging != null)) {
                    this.Rol_funcionalidadRowChanging(this, new Rol_funcionalidadRowChangeEvent(((Rol_funcionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Rol_funcionalidadRowDeleted != null)) {
                    this.Rol_funcionalidadRowDeleted(this, new Rol_funcionalidadRowChangeEvent(((Rol_funcionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Rol_funcionalidadRowDeleting != null)) {
                    this.Rol_funcionalidadRowDeleting(this, new Rol_funcionalidadRowChangeEvent(((Rol_funcionalidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRol_funcionalidadRow(Rol_funcionalidadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Rol_funcionalidadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tabla_ClienteDataTable : global::System.Data.TypedTableBase<Tabla_ClienteRow> {
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnTipo_Doc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteDataTable() {
                this.TableName = "Tabla_Cliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tabla_ClienteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tabla_ClienteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tipo_DocColumn {
                get {
                    return this.columnTipo_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteRow this[int index] {
                get {
                    return ((Tabla_ClienteRow)(this.Rows[index]));
                }
            }
            
            public event Tabla_ClienteRowChangeEventHandler Tabla_ClienteRowChanging;
            
            public event Tabla_ClienteRowChangeEventHandler Tabla_ClienteRowChanged;
            
            public event Tabla_ClienteRowChangeEventHandler Tabla_ClienteRowDeleting;
            
            public event Tabla_ClienteRowChangeEventHandler Tabla_ClienteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTabla_ClienteRow(Tabla_ClienteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteRow AddTabla_ClienteRow(string Nombre, string Apellido, decimal Tipo_Doc) {
                Tabla_ClienteRow rowTabla_ClienteRow = ((Tabla_ClienteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nombre,
                        Apellido,
                        Tipo_Doc};
                rowTabla_ClienteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTabla_ClienteRow);
                return rowTabla_ClienteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tabla_ClienteDataTable cln = ((Tabla_ClienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tabla_ClienteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnTipo_Doc = base.Columns["Tipo_Doc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnTipo_Doc = new global::System.Data.DataColumn("Tipo_Doc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_Doc);
                this.columnNombre.MaxLength = 50;
                this.columnApellido.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteRow NewTabla_ClienteRow() {
                return ((Tabla_ClienteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tabla_ClienteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tabla_ClienteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tabla_ClienteRowChanged != null)) {
                    this.Tabla_ClienteRowChanged(this, new Tabla_ClienteRowChangeEvent(((Tabla_ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tabla_ClienteRowChanging != null)) {
                    this.Tabla_ClienteRowChanging(this, new Tabla_ClienteRowChangeEvent(((Tabla_ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tabla_ClienteRowDeleted != null)) {
                    this.Tabla_ClienteRowDeleted(this, new Tabla_ClienteRowChangeEvent(((Tabla_ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tabla_ClienteRowDeleting != null)) {
                    this.Tabla_ClienteRowDeleting(this, new Tabla_ClienteRowChangeEvent(((Tabla_ClienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTabla_ClienteRow(Tabla_ClienteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tabla_ClienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tabla_ClientesDataTable : global::System.Data.TypedTableBase<Tabla_ClientesRow> {
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnApellido;
            
            private global::System.Data.DataColumn columnTipo_Doc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesDataTable() {
                this.TableName = "Tabla_Clientes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tabla_ClientesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tabla_ClientesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tipo_DocColumn {
                get {
                    return this.columnTipo_Doc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesRow this[int index] {
                get {
                    return ((Tabla_ClientesRow)(this.Rows[index]));
                }
            }
            
            public event Tabla_ClientesRowChangeEventHandler Tabla_ClientesRowChanging;
            
            public event Tabla_ClientesRowChangeEventHandler Tabla_ClientesRowChanged;
            
            public event Tabla_ClientesRowChangeEventHandler Tabla_ClientesRowDeleting;
            
            public event Tabla_ClientesRowChangeEventHandler Tabla_ClientesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTabla_ClientesRow(Tabla_ClientesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesRow AddTabla_ClientesRow(string Nombre, string Apellido, decimal Tipo_Doc) {
                Tabla_ClientesRow rowTabla_ClientesRow = ((Tabla_ClientesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Nombre,
                        Apellido,
                        Tipo_Doc};
                rowTabla_ClientesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTabla_ClientesRow);
                return rowTabla_ClientesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tabla_ClientesDataTable cln = ((Tabla_ClientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tabla_ClientesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
                this.columnTipo_Doc = base.Columns["Tipo_Doc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new global::System.Data.DataColumn("Apellido", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.columnTipo_Doc = new global::System.Data.DataColumn("Tipo_Doc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_Doc);
                this.columnNombre.MaxLength = 50;
                this.columnApellido.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesRow NewTabla_ClientesRow() {
                return ((Tabla_ClientesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tabla_ClientesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tabla_ClientesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tabla_ClientesRowChanged != null)) {
                    this.Tabla_ClientesRowChanged(this, new Tabla_ClientesRowChangeEvent(((Tabla_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tabla_ClientesRowChanging != null)) {
                    this.Tabla_ClientesRowChanging(this, new Tabla_ClientesRowChangeEvent(((Tabla_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tabla_ClientesRowDeleted != null)) {
                    this.Tabla_ClientesRowDeleted(this, new Tabla_ClientesRowChangeEvent(((Tabla_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tabla_ClientesRowDeleting != null)) {
                    this.Tabla_ClientesRowDeleting(this, new Tabla_ClientesRowChangeEvent(((Tabla_ClientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTabla_ClientesRow(Tabla_ClientesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tabla_ClientesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tabladementiritasDataTable : global::System.Data.TypedTableBase<tabladementiritasRow> {
            
            private global::System.Data.DataColumn columnnumerito;
            
            private global::System.Data.DataColumn columnnombresillo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasDataTable() {
                this.TableName = "tabladementiritas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tabladementiritasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tabladementiritasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numeritoColumn {
                get {
                    return this.columnnumerito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombresilloColumn {
                get {
                    return this.columnnombresillo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasRow this[int index] {
                get {
                    return ((tabladementiritasRow)(this.Rows[index]));
                }
            }
            
            public event tabladementiritasRowChangeEventHandler tabladementiritasRowChanging;
            
            public event tabladementiritasRowChangeEventHandler tabladementiritasRowChanged;
            
            public event tabladementiritasRowChangeEventHandler tabladementiritasRowDeleting;
            
            public event tabladementiritasRowChangeEventHandler tabladementiritasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtabladementiritasRow(tabladementiritasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasRow AddtabladementiritasRow(string nombresillo) {
                tabladementiritasRow rowtabladementiritasRow = ((tabladementiritasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nombresillo};
                rowtabladementiritasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtabladementiritasRow);
                return rowtabladementiritasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tabladementiritasDataTable cln = ((tabladementiritasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tabladementiritasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnumerito = base.Columns["numerito"];
                this.columnnombresillo = base.Columns["nombresillo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnumerito = new global::System.Data.DataColumn("numerito", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumerito);
                this.columnnombresillo = new global::System.Data.DataColumn("nombresillo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombresillo);
                this.columnnumerito.AutoIncrement = true;
                this.columnnumerito.AutoIncrementSeed = -1;
                this.columnnumerito.AutoIncrementStep = -1;
                this.columnnumerito.AllowDBNull = false;
                this.columnnumerito.ReadOnly = true;
                this.columnnombresillo.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasRow NewtabladementiritasRow() {
                return ((tabladementiritasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tabladementiritasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tabladementiritasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabladementiritasRowChanged != null)) {
                    this.tabladementiritasRowChanged(this, new tabladementiritasRowChangeEvent(((tabladementiritasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabladementiritasRowChanging != null)) {
                    this.tabladementiritasRowChanging(this, new tabladementiritasRowChangeEvent(((tabladementiritasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabladementiritasRowDeleted != null)) {
                    this.tabladementiritasRowDeleted(this, new tabladementiritasRowChangeEvent(((tabladementiritasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabladementiritasRowDeleting != null)) {
                    this.tabladementiritasRowDeleting(this, new tabladementiritasRowChangeEvent(((tabladementiritasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetabladementiritasRow(tabladementiritasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tabladementiritasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tabladementiritas2DataTable : global::System.Data.TypedTableBase<tabladementiritas2Row> {
            
            private global::System.Data.DataColumn columnnumerito;
            
            private global::System.Data.DataColumn columnnombresillo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2DataTable() {
                this.TableName = "tabladementiritas2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tabladementiritas2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tabladementiritas2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numeritoColumn {
                get {
                    return this.columnnumerito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombresilloColumn {
                get {
                    return this.columnnombresillo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2Row this[int index] {
                get {
                    return ((tabladementiritas2Row)(this.Rows[index]));
                }
            }
            
            public event tabladementiritas2RowChangeEventHandler tabladementiritas2RowChanging;
            
            public event tabladementiritas2RowChangeEventHandler tabladementiritas2RowChanged;
            
            public event tabladementiritas2RowChangeEventHandler tabladementiritas2RowDeleting;
            
            public event tabladementiritas2RowChangeEventHandler tabladementiritas2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtabladementiritas2Row(tabladementiritas2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2Row Addtabladementiritas2Row(string nombresillo) {
                tabladementiritas2Row rowtabladementiritas2Row = ((tabladementiritas2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nombresillo};
                rowtabladementiritas2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtabladementiritas2Row);
                return rowtabladementiritas2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tabladementiritas2DataTable cln = ((tabladementiritas2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tabladementiritas2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnumerito = base.Columns["numerito"];
                this.columnnombresillo = base.Columns["nombresillo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnumerito = new global::System.Data.DataColumn("numerito", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumerito);
                this.columnnombresillo = new global::System.Data.DataColumn("nombresillo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombresillo);
                this.columnnumerito.AutoIncrement = true;
                this.columnnumerito.AutoIncrementSeed = -1;
                this.columnnumerito.AutoIncrementStep = -1;
                this.columnnumerito.AllowDBNull = false;
                this.columnnumerito.ReadOnly = true;
                this.columnnombresillo.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2Row Newtabladementiritas2Row() {
                return ((tabladementiritas2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tabladementiritas2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tabladementiritas2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tabladementiritas2RowChanged != null)) {
                    this.tabladementiritas2RowChanged(this, new tabladementiritas2RowChangeEvent(((tabladementiritas2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tabladementiritas2RowChanging != null)) {
                    this.tabladementiritas2RowChanging(this, new tabladementiritas2RowChangeEvent(((tabladementiritas2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tabladementiritas2RowDeleted != null)) {
                    this.tabladementiritas2RowDeleted(this, new tabladementiritas2RowChangeEvent(((tabladementiritas2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tabladementiritas2RowDeleting != null)) {
                    this.tabladementiritas2RowDeleting(this, new tabladementiritas2RowChangeEvent(((tabladementiritas2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetabladementiritas2Row(tabladementiritas2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tabladementiritas2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tarjetas_creditoDataTable : global::System.Data.TypedTableBase<Tarjetas_creditoRow> {
            
            private global::System.Data.DataColumn columnNum_tarjeta;
            
            private global::System.Data.DataColumn columnCod_cliente;
            
            private global::System.Data.DataColumn columnCod_emisor;
            
            private global::System.Data.DataColumn columnFecha_emision;
            
            private global::System.Data.DataColumn columnFecha_vencimiento;
            
            private global::System.Data.DataColumn columnCod_seguridad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoDataTable() {
                this.TableName = "Tarjetas_credito";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tarjetas_creditoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tarjetas_creditoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Num_tarjetaColumn {
                get {
                    return this.columnNum_tarjeta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_clienteColumn {
                get {
                    return this.columnCod_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_emisorColumn {
                get {
                    return this.columnCod_emisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_emisionColumn {
                get {
                    return this.columnFecha_emision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_vencimientoColumn {
                get {
                    return this.columnFecha_vencimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_seguridadColumn {
                get {
                    return this.columnCod_seguridad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow this[int index] {
                get {
                    return ((Tarjetas_creditoRow)(this.Rows[index]));
                }
            }
            
            public event Tarjetas_creditoRowChangeEventHandler Tarjetas_creditoRowChanging;
            
            public event Tarjetas_creditoRowChangeEventHandler Tarjetas_creditoRowChanged;
            
            public event Tarjetas_creditoRowChangeEventHandler Tarjetas_creditoRowDeleting;
            
            public event Tarjetas_creditoRowChangeEventHandler Tarjetas_creditoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTarjetas_creditoRow(Tarjetas_creditoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow AddTarjetas_creditoRow(int Num_tarjeta, ClienteRow parentClienteRowByFK__Tarjetas___Cod_c__07C12930, BancosRow parentBancosRowByFK__Tarjetas___Cod_e__08B54D69, System.DateTime Fecha_emision, System.DateTime Fecha_vencimiento, int Cod_seguridad) {
                Tarjetas_creditoRow rowTarjetas_creditoRow = ((Tarjetas_creditoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Num_tarjeta,
                        null,
                        null,
                        Fecha_emision,
                        Fecha_vencimiento,
                        Cod_seguridad};
                if ((parentClienteRowByFK__Tarjetas___Cod_c__07C12930 != null)) {
                    columnValuesArray[1] = parentClienteRowByFK__Tarjetas___Cod_c__07C12930[0];
                }
                if ((parentBancosRowByFK__Tarjetas___Cod_e__08B54D69 != null)) {
                    columnValuesArray[2] = parentBancosRowByFK__Tarjetas___Cod_e__08B54D69[0];
                }
                rowTarjetas_creditoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTarjetas_creditoRow);
                return rowTarjetas_creditoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow FindByNum_tarjeta(int Num_tarjeta) {
                return ((Tarjetas_creditoRow)(this.Rows.Find(new object[] {
                            Num_tarjeta})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tarjetas_creditoDataTable cln = ((Tarjetas_creditoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tarjetas_creditoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNum_tarjeta = base.Columns["Num_tarjeta"];
                this.columnCod_cliente = base.Columns["Cod_cliente"];
                this.columnCod_emisor = base.Columns["Cod_emisor"];
                this.columnFecha_emision = base.Columns["Fecha_emision"];
                this.columnFecha_vencimiento = base.Columns["Fecha_vencimiento"];
                this.columnCod_seguridad = base.Columns["Cod_seguridad"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNum_tarjeta = new global::System.Data.DataColumn("Num_tarjeta", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum_tarjeta);
                this.columnCod_cliente = new global::System.Data.DataColumn("Cod_cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cliente);
                this.columnCod_emisor = new global::System.Data.DataColumn("Cod_emisor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_emisor);
                this.columnFecha_emision = new global::System.Data.DataColumn("Fecha_emision", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_emision);
                this.columnFecha_vencimiento = new global::System.Data.DataColumn("Fecha_vencimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_vencimiento);
                this.columnCod_seguridad = new global::System.Data.DataColumn("Cod_seguridad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_seguridad);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNum_tarjeta}, true));
                this.columnNum_tarjeta.AllowDBNull = false;
                this.columnNum_tarjeta.Unique = true;
                this.columnCod_cliente.AllowDBNull = false;
                this.columnCod_emisor.AllowDBNull = false;
                this.columnFecha_emision.AllowDBNull = false;
                this.columnFecha_vencimiento.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow NewTarjetas_creditoRow() {
                return ((Tarjetas_creditoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tarjetas_creditoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tarjetas_creditoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tarjetas_creditoRowChanged != null)) {
                    this.Tarjetas_creditoRowChanged(this, new Tarjetas_creditoRowChangeEvent(((Tarjetas_creditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tarjetas_creditoRowChanging != null)) {
                    this.Tarjetas_creditoRowChanging(this, new Tarjetas_creditoRowChangeEvent(((Tarjetas_creditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tarjetas_creditoRowDeleted != null)) {
                    this.Tarjetas_creditoRowDeleted(this, new Tarjetas_creditoRowChangeEvent(((Tarjetas_creditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tarjetas_creditoRowDeleting != null)) {
                    this.Tarjetas_creditoRowDeleting(this, new Tarjetas_creditoRowChangeEvent(((Tarjetas_creditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTarjetas_creditoRow(Tarjetas_creditoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tarjetas_creditoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tipo_DNIDataTable : global::System.Data.TypedTableBase<Tipo_DNIRow> {
            
            private global::System.Data.DataColumn columnId_DNI;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIDataTable() {
                this.TableName = "Tipo_DNI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tipo_DNIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tipo_DNIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_DNIColumn {
                get {
                    return this.columnId_DNI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRow this[int index] {
                get {
                    return ((Tipo_DNIRow)(this.Rows[index]));
                }
            }
            
            public event Tipo_DNIRowChangeEventHandler Tipo_DNIRowChanging;
            
            public event Tipo_DNIRowChangeEventHandler Tipo_DNIRowChanged;
            
            public event Tipo_DNIRowChangeEventHandler Tipo_DNIRowDeleting;
            
            public event Tipo_DNIRowChangeEventHandler Tipo_DNIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTipo_DNIRow(Tipo_DNIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRow AddTipo_DNIRow(int Id_DNI, string Descripcion) {
                Tipo_DNIRow rowTipo_DNIRow = ((Tipo_DNIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_DNI,
                        Descripcion};
                rowTipo_DNIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTipo_DNIRow);
                return rowTipo_DNIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRow FindById_DNI(int Id_DNI) {
                return ((Tipo_DNIRow)(this.Rows.Find(new object[] {
                            Id_DNI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tipo_DNIDataTable cln = ((Tipo_DNIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tipo_DNIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_DNI = base.Columns["Id_DNI"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_DNI = new global::System.Data.DataColumn("Id_DNI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_DNI);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_DNI}, true));
                this.columnId_DNI.AllowDBNull = false;
                this.columnId_DNI.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRow NewTipo_DNIRow() {
                return ((Tipo_DNIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tipo_DNIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tipo_DNIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tipo_DNIRowChanged != null)) {
                    this.Tipo_DNIRowChanged(this, new Tipo_DNIRowChangeEvent(((Tipo_DNIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tipo_DNIRowChanging != null)) {
                    this.Tipo_DNIRowChanging(this, new Tipo_DNIRowChangeEvent(((Tipo_DNIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tipo_DNIRowDeleted != null)) {
                    this.Tipo_DNIRowDeleted(this, new Tipo_DNIRowChangeEvent(((Tipo_DNIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tipo_DNIRowDeleting != null)) {
                    this.Tipo_DNIRowDeleting(this, new Tipo_DNIRowChangeEvent(((Tipo_DNIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTipo_DNIRow(Tipo_DNIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tipo_DNIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tipo_modificacionDataTable : global::System.Data.TypedTableBase<Tipo_modificacionRow> {
            
            private global::System.Data.DataColumn columnId_tipo;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionDataTable() {
                this.TableName = "Tipo_modificacion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tipo_modificacionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tipo_modificacionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_tipoColumn {
                get {
                    return this.columnId_tipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow this[int index] {
                get {
                    return ((Tipo_modificacionRow)(this.Rows[index]));
                }
            }
            
            public event Tipo_modificacionRowChangeEventHandler Tipo_modificacionRowChanging;
            
            public event Tipo_modificacionRowChangeEventHandler Tipo_modificacionRowChanged;
            
            public event Tipo_modificacionRowChangeEventHandler Tipo_modificacionRowDeleting;
            
            public event Tipo_modificacionRowChangeEventHandler Tipo_modificacionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTipo_modificacionRow(Tipo_modificacionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow AddTipo_modificacionRow(string Descripcion) {
                Tipo_modificacionRow rowTipo_modificacionRow = ((Tipo_modificacionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion};
                rowTipo_modificacionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTipo_modificacionRow);
                return rowTipo_modificacionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow FindById_tipo(int Id_tipo) {
                return ((Tipo_modificacionRow)(this.Rows.Find(new object[] {
                            Id_tipo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tipo_modificacionDataTable cln = ((Tipo_modificacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tipo_modificacionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_tipo = base.Columns["Id_tipo"];
                this.columnDescripcion = base.Columns["Descripcion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_tipo = new global::System.Data.DataColumn("Id_tipo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_tipo);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_tipo}, true));
                this.columnId_tipo.AutoIncrement = true;
                this.columnId_tipo.AutoIncrementSeed = -1;
                this.columnId_tipo.AutoIncrementStep = -1;
                this.columnId_tipo.AllowDBNull = false;
                this.columnId_tipo.ReadOnly = true;
                this.columnId_tipo.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow NewTipo_modificacionRow() {
                return ((Tipo_modificacionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tipo_modificacionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tipo_modificacionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tipo_modificacionRowChanged != null)) {
                    this.Tipo_modificacionRowChanged(this, new Tipo_modificacionRowChangeEvent(((Tipo_modificacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tipo_modificacionRowChanging != null)) {
                    this.Tipo_modificacionRowChanging(this, new Tipo_modificacionRowChangeEvent(((Tipo_modificacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tipo_modificacionRowDeleted != null)) {
                    this.Tipo_modificacionRowDeleted(this, new Tipo_modificacionRowChangeEvent(((Tipo_modificacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tipo_modificacionRowDeleting != null)) {
                    this.Tipo_modificacionRowDeleting(this, new Tipo_modificacionRowChangeEvent(((Tipo_modificacionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTipo_modificacionRow(Tipo_modificacionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tipo_modificacionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransaccionesDataTable : global::System.Data.TypedTableBase<TransaccionesRow> {
            
            private global::System.Data.DataColumn columnId_transaccion;
            
            private global::System.Data.DataColumn columnCod_estado;
            
            private global::System.Data.DataColumn columnCosto;
            
            private global::System.Data.DataColumn columnFecha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesDataTable() {
                this.TableName = "Transacciones";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaccionesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransaccionesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_transaccionColumn {
                get {
                    return this.columnId_transaccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_estadoColumn {
                get {
                    return this.columnCod_estado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostoColumn {
                get {
                    return this.columnCosto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow this[int index] {
                get {
                    return ((TransaccionesRow)(this.Rows[index]));
                }
            }
            
            public event TransaccionesRowChangeEventHandler TransaccionesRowChanging;
            
            public event TransaccionesRowChangeEventHandler TransaccionesRowChanged;
            
            public event TransaccionesRowChangeEventHandler TransaccionesRowDeleting;
            
            public event TransaccionesRowChangeEventHandler TransaccionesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransaccionesRow(TransaccionesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow AddTransaccionesRow(Estado_transaccionRow parentEstado_transaccionRowByFK__Transacci__Cod_e__6D0D32F4, double Costo, System.DateTime Fecha) {
                TransaccionesRow rowTransaccionesRow = ((TransaccionesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Costo,
                        Fecha};
                if ((parentEstado_transaccionRowByFK__Transacci__Cod_e__6D0D32F4 != null)) {
                    columnValuesArray[1] = parentEstado_transaccionRowByFK__Transacci__Cod_e__6D0D32F4[0];
                }
                rowTransaccionesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransaccionesRow);
                return rowTransaccionesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow FindById_transaccion(int Id_transaccion) {
                return ((TransaccionesRow)(this.Rows.Find(new object[] {
                            Id_transaccion})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransaccionesDataTable cln = ((TransaccionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransaccionesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_transaccion = base.Columns["Id_transaccion"];
                this.columnCod_estado = base.Columns["Cod_estado"];
                this.columnCosto = base.Columns["Costo"];
                this.columnFecha = base.Columns["Fecha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_transaccion = new global::System.Data.DataColumn("Id_transaccion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_transaccion);
                this.columnCod_estado = new global::System.Data.DataColumn("Cod_estado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_estado);
                this.columnCosto = new global::System.Data.DataColumn("Costo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCosto);
                this.columnFecha = new global::System.Data.DataColumn("Fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_transaccion}, true));
                this.columnId_transaccion.AutoIncrement = true;
                this.columnId_transaccion.AutoIncrementSeed = -1;
                this.columnId_transaccion.AutoIncrementStep = -1;
                this.columnId_transaccion.AllowDBNull = false;
                this.columnId_transaccion.ReadOnly = true;
                this.columnId_transaccion.Unique = true;
                this.columnCod_estado.AllowDBNull = false;
                this.columnCosto.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow NewTransaccionesRow() {
                return ((TransaccionesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransaccionesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransaccionesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransaccionesRowChanged != null)) {
                    this.TransaccionesRowChanged(this, new TransaccionesRowChangeEvent(((TransaccionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransaccionesRowChanging != null)) {
                    this.TransaccionesRowChanging(this, new TransaccionesRowChangeEvent(((TransaccionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransaccionesRowDeleted != null)) {
                    this.TransaccionesRowDeleted(this, new TransaccionesRowChangeEvent(((TransaccionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransaccionesRowDeleting != null)) {
                    this.TransaccionesRowDeleting(this, new TransaccionesRowChangeEvent(((TransaccionesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransaccionesRow(TransaccionesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransaccionesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TransferenciasDataTable : global::System.Data.TypedTableBase<TransferenciasRow> {
            
            private global::System.Data.DataColumn columnId_transferencia;
            
            private global::System.Data.DataColumn columnImporte;
            
            private global::System.Data.DataColumn columnCod_cuenta_origen;
            
            private global::System.Data.DataColumn columnCod_cuenta_destino;
            
            private global::System.Data.DataColumn columnCod_transaccion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasDataTable() {
                this.TableName = "Transferencias";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferenciasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TransferenciasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_transferenciaColumn {
                get {
                    return this.columnId_transferencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_cuenta_origenColumn {
                get {
                    return this.columnCod_cuenta_origen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_cuenta_destinoColumn {
                get {
                    return this.columnCod_cuenta_destino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_transaccionColumn {
                get {
                    return this.columnCod_transaccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow this[int index] {
                get {
                    return ((TransferenciasRow)(this.Rows[index]));
                }
            }
            
            public event TransferenciasRowChangeEventHandler TransferenciasRowChanging;
            
            public event TransferenciasRowChangeEventHandler TransferenciasRowChanged;
            
            public event TransferenciasRowChangeEventHandler TransferenciasRowDeleting;
            
            public event TransferenciasRowChangeEventHandler TransferenciasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTransferenciasRow(TransferenciasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow AddTransferenciasRow(double Importe, CuentaRow parentCuentaRowByFK__Transfere__Cod_c__7C4F7684, CuentaRow parentCuentaRowByFK__Transfere__Cod_c__7D439ABD, TransaccionesRow parentTransaccionesRowByFK__Transfere__Cod_t__7E37BEF6) {
                TransferenciasRow rowTransferenciasRow = ((TransferenciasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Importe,
                        null,
                        null,
                        null};
                if ((parentCuentaRowByFK__Transfere__Cod_c__7C4F7684 != null)) {
                    columnValuesArray[2] = parentCuentaRowByFK__Transfere__Cod_c__7C4F7684[0];
                }
                if ((parentCuentaRowByFK__Transfere__Cod_c__7D439ABD != null)) {
                    columnValuesArray[3] = parentCuentaRowByFK__Transfere__Cod_c__7D439ABD[0];
                }
                if ((parentTransaccionesRowByFK__Transfere__Cod_t__7E37BEF6 != null)) {
                    columnValuesArray[4] = parentTransaccionesRowByFK__Transfere__Cod_t__7E37BEF6[0];
                }
                rowTransferenciasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTransferenciasRow);
                return rowTransferenciasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow FindById_transferencia(int Id_transferencia) {
                return ((TransferenciasRow)(this.Rows.Find(new object[] {
                            Id_transferencia})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TransferenciasDataTable cln = ((TransferenciasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TransferenciasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_transferencia = base.Columns["Id_transferencia"];
                this.columnImporte = base.Columns["Importe"];
                this.columnCod_cuenta_origen = base.Columns["Cod_cuenta_origen"];
                this.columnCod_cuenta_destino = base.Columns["Cod_cuenta_destino"];
                this.columnCod_transaccion = base.Columns["Cod_transaccion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_transferencia = new global::System.Data.DataColumn("Id_transferencia", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_transferencia);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnCod_cuenta_origen = new global::System.Data.DataColumn("Cod_cuenta_origen", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cuenta_origen);
                this.columnCod_cuenta_destino = new global::System.Data.DataColumn("Cod_cuenta_destino", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_cuenta_destino);
                this.columnCod_transaccion = new global::System.Data.DataColumn("Cod_transaccion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_transaccion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_transferencia}, true));
                this.columnId_transferencia.AutoIncrement = true;
                this.columnId_transferencia.AutoIncrementSeed = -1;
                this.columnId_transferencia.AutoIncrementStep = -1;
                this.columnId_transferencia.AllowDBNull = false;
                this.columnId_transferencia.ReadOnly = true;
                this.columnId_transferencia.Unique = true;
                this.columnImporte.AllowDBNull = false;
                this.columnCod_cuenta_origen.AllowDBNull = false;
                this.columnCod_cuenta_destino.AllowDBNull = false;
                this.columnCod_transaccion.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow NewTransferenciasRow() {
                return ((TransferenciasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TransferenciasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TransferenciasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TransferenciasRowChanged != null)) {
                    this.TransferenciasRowChanged(this, new TransferenciasRowChangeEvent(((TransferenciasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TransferenciasRowChanging != null)) {
                    this.TransferenciasRowChanging(this, new TransferenciasRowChangeEvent(((TransferenciasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TransferenciasRowDeleted != null)) {
                    this.TransferenciasRowDeleted(this, new TransferenciasRowChangeEvent(((TransferenciasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TransferenciasRowDeleting != null)) {
                    this.TransferenciasRowDeleting(this, new TransferenciasRowChangeEvent(((TransferenciasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTransferenciasRow(TransferenciasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TransferenciasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsuarioDataTable : global::System.Data.TypedTableBase<UsuarioRow> {
            
            private global::System.Data.DataColumn columnId_usuario;
            
            private global::System.Data.DataColumn columnUseranme;
            
            private global::System.Data.DataColumn columnContraseña;
            
            private global::System.Data.DataColumn columnFecha_creacion;
            
            private global::System.Data.DataColumn columnUltima_modificacion;
            
            private global::System.Data.DataColumn columnPregunta_secreta;
            
            private global::System.Data.DataColumn columnRespuesta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioDataTable() {
                this.TableName = "Usuario";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsuarioDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UsuarioDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Id_usuarioColumn {
                get {
                    return this.columnId_usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseranmeColumn {
                get {
                    return this.columnUseranme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContraseñaColumn {
                get {
                    return this.columnContraseña;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_creacionColumn {
                get {
                    return this.columnFecha_creacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ultima_modificacionColumn {
                get {
                    return this.columnUltima_modificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pregunta_secretaColumn {
                get {
                    return this.columnPregunta_secreta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RespuestaColumn {
                get {
                    return this.columnRespuesta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow this[int index] {
                get {
                    return ((UsuarioRow)(this.Rows[index]));
                }
            }
            
            public event UsuarioRowChangeEventHandler UsuarioRowChanging;
            
            public event UsuarioRowChangeEventHandler UsuarioRowChanged;
            
            public event UsuarioRowChangeEventHandler UsuarioRowDeleting;
            
            public event UsuarioRowChangeEventHandler UsuarioRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUsuarioRow(UsuarioRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow AddUsuarioRow(string Useranme, string Contraseña, System.DateTime Fecha_creacion, System.DateTime Ultima_modificacion, string Pregunta_secreta, string Respuesta) {
                UsuarioRow rowUsuarioRow = ((UsuarioRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Useranme,
                        Contraseña,
                        Fecha_creacion,
                        Ultima_modificacion,
                        Pregunta_secreta,
                        Respuesta};
                rowUsuarioRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsuarioRow);
                return rowUsuarioRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow FindById_usuario(int Id_usuario) {
                return ((UsuarioRow)(this.Rows.Find(new object[] {
                            Id_usuario})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UsuarioDataTable cln = ((UsuarioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UsuarioDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId_usuario = base.Columns["Id_usuario"];
                this.columnUseranme = base.Columns["Useranme"];
                this.columnContraseña = base.Columns["Contraseña"];
                this.columnFecha_creacion = base.Columns["Fecha_creacion"];
                this.columnUltima_modificacion = base.Columns["Ultima_modificacion"];
                this.columnPregunta_secreta = base.Columns["Pregunta_secreta"];
                this.columnRespuesta = base.Columns["Respuesta"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId_usuario = new global::System.Data.DataColumn("Id_usuario", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_usuario);
                this.columnUseranme = new global::System.Data.DataColumn("Useranme", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseranme);
                this.columnContraseña = new global::System.Data.DataColumn("Contraseña", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContraseña);
                this.columnFecha_creacion = new global::System.Data.DataColumn("Fecha_creacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_creacion);
                this.columnUltima_modificacion = new global::System.Data.DataColumn("Ultima_modificacion", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUltima_modificacion);
                this.columnPregunta_secreta = new global::System.Data.DataColumn("Pregunta_secreta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregunta_secreta);
                this.columnRespuesta = new global::System.Data.DataColumn("Respuesta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRespuesta);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_usuario}, true));
                this.columnId_usuario.AutoIncrement = true;
                this.columnId_usuario.AutoIncrementSeed = -1;
                this.columnId_usuario.AutoIncrementStep = -1;
                this.columnId_usuario.AllowDBNull = false;
                this.columnId_usuario.ReadOnly = true;
                this.columnId_usuario.Unique = true;
                this.columnUseranme.AllowDBNull = false;
                this.columnUseranme.MaxLength = 30;
                this.columnContraseña.AllowDBNull = false;
                this.columnContraseña.MaxLength = 30;
                this.columnUltima_modificacion.AllowDBNull = false;
                this.columnPregunta_secreta.AllowDBNull = false;
                this.columnPregunta_secreta.MaxLength = 50;
                this.columnRespuesta.AllowDBNull = false;
                this.columnRespuesta.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow NewUsuarioRow() {
                return ((UsuarioRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UsuarioRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UsuarioRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsuarioRowChanged != null)) {
                    this.UsuarioRowChanged(this, new UsuarioRowChangeEvent(((UsuarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsuarioRowChanging != null)) {
                    this.UsuarioRowChanging(this, new UsuarioRowChangeEvent(((UsuarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsuarioRowDeleted != null)) {
                    this.UsuarioRowDeleted(this, new UsuarioRowChangeEvent(((UsuarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsuarioRowDeleting != null)) {
                    this.UsuarioRowDeleting(this, new UsuarioRowChangeEvent(((UsuarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUsuarioRow(UsuarioRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsuarioDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Usuario_rolDataTable : global::System.Data.TypedTableBase<Usuario_rolRow> {
            
            private global::System.Data.DataColumn columnCod_usuario;
            
            private global::System.Data.DataColumn columnCod_rol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolDataTable() {
                this.TableName = "Usuario_rol";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Usuario_rolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Usuario_rolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_usuarioColumn {
                get {
                    return this.columnCod_usuario;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cod_rolColumn {
                get {
                    return this.columnCod_rol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow this[int index] {
                get {
                    return ((Usuario_rolRow)(this.Rows[index]));
                }
            }
            
            public event Usuario_rolRowChangeEventHandler Usuario_rolRowChanging;
            
            public event Usuario_rolRowChangeEventHandler Usuario_rolRowChanged;
            
            public event Usuario_rolRowChangeEventHandler Usuario_rolRowDeleting;
            
            public event Usuario_rolRowChangeEventHandler Usuario_rolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUsuario_rolRow(Usuario_rolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow AddUsuario_rolRow(UsuarioRow parentUsuarioRowByFK__Usuario_r__Cod_u__44FF419A, RolRow parentRolRowByFK__Usuario_r__Cod_r__45F365D3) {
                Usuario_rolRow rowUsuario_rolRow = ((Usuario_rolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentUsuarioRowByFK__Usuario_r__Cod_u__44FF419A != null)) {
                    columnValuesArray[0] = parentUsuarioRowByFK__Usuario_r__Cod_u__44FF419A[0];
                }
                if ((parentRolRowByFK__Usuario_r__Cod_r__45F365D3 != null)) {
                    columnValuesArray[1] = parentRolRowByFK__Usuario_r__Cod_r__45F365D3[0];
                }
                rowUsuario_rolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsuario_rolRow);
                return rowUsuario_rolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Usuario_rolDataTable cln = ((Usuario_rolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Usuario_rolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCod_usuario = base.Columns["Cod_usuario"];
                this.columnCod_rol = base.Columns["Cod_rol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCod_usuario = new global::System.Data.DataColumn("Cod_usuario", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_usuario);
                this.columnCod_rol = new global::System.Data.DataColumn("Cod_rol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCod_rol);
                this.columnCod_usuario.AllowDBNull = false;
                this.columnCod_rol.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow NewUsuario_rolRow() {
                return ((Usuario_rolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Usuario_rolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Usuario_rolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Usuario_rolRowChanged != null)) {
                    this.Usuario_rolRowChanged(this, new Usuario_rolRowChangeEvent(((Usuario_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Usuario_rolRowChanging != null)) {
                    this.Usuario_rolRowChanging(this, new Usuario_rolRowChangeEvent(((Usuario_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Usuario_rolRowDeleted != null)) {
                    this.Usuario_rolRowDeleted(this, new Usuario_rolRowChangeEvent(((Usuario_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Usuario_rolRowDeleting != null)) {
                    this.Usuario_rolRowDeleting(this, new Usuario_rolRowChangeEvent(((Usuario_rolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUsuario_rolRow(Usuario_rolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GD1C2015DataSet ds = new GD1C2015DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Usuario_rolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BancosRow : global::System.Data.DataRow {
            
            private BancosDataTable tableBancos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BancosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBancos = ((BancosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_banco {
                get {
                    return ((int)(this[this.tableBancos.Id_bancoColumn]));
                }
                set {
                    this[this.tableBancos.Id_bancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_banco {
                get {
                    return ((string)(this[this.tableBancos.Nombre_bancoColumn]));
                }
                set {
                    this[this.tableBancos.Nombre_bancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_pais {
                get {
                    return ((int)(this[this.tableBancos.Cod_paisColumn]));
                }
                set {
                    this[this.tableBancos.Cod_paisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow PaisRow {
                get {
                    return ((PaisRow)(this.GetParentRow(this.Table.ParentRelations["FK__Bancos__Cod_pais__02FC7413"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Bancos__Cod_pais__02FC7413"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow[] GetChequeRows() {
                if ((this.Table.ChildRelations["FK__Cheque__Cod_banc__160F4887"] == null)) {
                    return new ChequeRow[0];
                }
                else {
                    return ((ChequeRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cheque__Cod_banc__160F4887"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow[] GetTarjetas_creditoRows() {
                if ((this.Table.ChildRelations["FK__Tarjetas___Cod_e__08B54D69"] == null)) {
                    return new Tarjetas_creditoRow[0];
                }
                else {
                    return ((Tarjetas_creditoRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Tarjetas___Cod_e__08B54D69"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CategoriaRow : global::System.Data.DataRow {
            
            private CategoriaDataTable tableCategoria;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CategoriaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCategoria = ((CategoriaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_categoria {
                get {
                    return ((int)(this[this.tableCategoria.Id_categoriaColumn]));
                }
                set {
                    this[this.tableCategoria.Id_categoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableCategoria.DescripcionColumn]));
                }
                set {
                    this[this.tableCategoria.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Costo {
                get {
                    return ((double)(this[this.tableCategoria.CostoColumn]));
                }
                set {
                    this[this.tableCategoria.CostoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow[] GetCuentaRows() {
                if ((this.Table.ChildRelations["FK__Cuenta__Codigo_c__619B8048"] == null)) {
                    return new CuentaRow[0];
                }
                else {
                    return ((CuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cuenta__Codigo_c__619B8048"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ChequeRow : global::System.Data.DataRow {
            
            private ChequeDataTable tableCheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChequeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCheque = ((ChequeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_cheque {
                get {
                    return ((int)(this[this.tableCheque.Id_chequeColumn]));
                }
                set {
                    this[this.tableCheque.Id_chequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Num_cheque {
                get {
                    return ((int)(this[this.tableCheque.Num_chequeColumn]));
                }
                set {
                    this[this.tableCheque.Num_chequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_banco {
                get {
                    return ((int)(this[this.tableCheque.Cod_bancoColumn]));
                }
                set {
                    this[this.tableCheque.Cod_bancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cliente {
                get {
                    return ((int)(this[this.tableCheque.Cod_clienteColumn]));
                }
                set {
                    this[this.tableCheque.Cod_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableCheque.FechaColumn]));
                }
                set {
                    this[this.tableCheque.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow BancosRow {
                get {
                    return ((BancosRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cheque__Cod_banc__160F4887"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cheque__Cod_banc__160F4887"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow ClienteRow {
                get {
                    return ((ClienteRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cheque__Cod_clie__17036CC0"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cheque__Cod_clie__17036CC0"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow[] GetRetirosRows() {
                if ((this.Table.ChildRelations["FK__Retiros__Cod_che__1CBC4616"] == null)) {
                    return new RetirosRow[0];
                }
                else {
                    return ((RetirosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Retiros__Cod_che__1CBC4616"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClienteRow : global::System.Data.DataRow {
            
            private ClienteDataTable tableCliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClienteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCliente = ((ClienteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_cliente {
                get {
                    return ((int)(this[this.tableCliente.Id_clienteColumn]));
                }
                set {
                    this[this.tableCliente.Id_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_usuario {
                get {
                    return ((int)(this[this.tableCliente.Cod_usuarioColumn]));
                }
                set {
                    this[this.tableCliente.Cod_usuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tableCliente.NombreColumn]));
                }
                set {
                    this[this.tableCliente.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    return ((string)(this[this.tableCliente.ApellidoColumn]));
                }
                set {
                    this[this.tableCliente.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tipo_documento {
                get {
                    return ((int)(this[this.tableCliente.Tipo_documentoColumn]));
                }
                set {
                    this[this.tableCliente.Tipo_documentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Numero_documento {
                get {
                    return ((int)(this[this.tableCliente.Numero_documentoColumn]));
                }
                set {
                    this[this.tableCliente.Numero_documentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mail {
                get {
                    return ((string)(this[this.tableCliente.MailColumn]));
                }
                set {
                    this[this.tableCliente.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_pais {
                get {
                    return ((int)(this[this.tableCliente.Cod_paisColumn]));
                }
                set {
                    this[this.tableCliente.Cod_paisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Localidad {
                get {
                    return ((int)(this[this.tableCliente.LocalidadColumn]));
                }
                set {
                    this[this.tableCliente.LocalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Calle {
                get {
                    return ((string)(this[this.tableCliente.CalleColumn]));
                }
                set {
                    this[this.tableCliente.CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Numero {
                get {
                    return ((int)(this[this.tableCliente.NumeroColumn]));
                }
                set {
                    this[this.tableCliente.NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Piso {
                get {
                    try {
                        return ((short)(this[this.tableCliente.PisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Piso\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.PisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Depto {
                get {
                    try {
                        return ((string)(this[this.tableCliente.DeptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Depto\' in table \'Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCliente.DeptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_nacimiento {
                get {
                    return ((global::System.DateTime)(this[this.tableCliente.Fecha_nacimientoColumn]));
                }
                set {
                    this[this.tableCliente.Fecha_nacimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow PaisRow {
                get {
                    return ((PaisRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cliente__Cod_pai__2F10007B"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cliente__Cod_pai__2F10007B"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow UsuarioRow {
                get {
                    return ((UsuarioRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cliente__Cod_usu__300424B4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cliente__Cod_usu__300424B4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow LocalidadRow {
                get {
                    return ((LocalidadRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cliente__Localid__30F848ED"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cliente__Localid__30F848ED"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPisoNull() {
                return this.IsNull(this.tableCliente.PisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPisoNull() {
                this[this.tableCliente.PisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptoNull() {
                return this.IsNull(this.tableCliente.DeptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptoNull() {
                this[this.tableCliente.DeptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow[] GetChequeRows() {
                if ((this.Table.ChildRelations["FK__Cheque__Cod_clie__17036CC0"] == null)) {
                    return new ChequeRow[0];
                }
                else {
                    return ((ChequeRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cheque__Cod_clie__17036CC0"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow[] GetCuentaRows() {
                if ((this.Table.ChildRelations["FK__Cuenta__Codigo_c__628FA481"] == null)) {
                    return new CuentaRow[0];
                }
                else {
                    return ((CuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cuenta__Codigo_c__628FA481"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow[] GetTarjetas_creditoRows() {
                if ((this.Table.ChildRelations["FK__Tarjetas___Cod_c__07C12930"] == null)) {
                    return new Tarjetas_creditoRow[0];
                }
                else {
                    return ((Tarjetas_creditoRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Tarjetas___Cod_c__07C12930"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CuentaRow : global::System.Data.DataRow {
            
            private CuentaDataTable tableCuenta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CuentaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCuenta = ((CuentaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Num_cuenta {
                get {
                    return ((int)(this[this.tableCuenta.Num_cuentaColumn]));
                }
                set {
                    this[this.tableCuenta.Num_cuentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_apertura {
                get {
                    return ((global::System.DateTime)(this[this.tableCuenta.Fecha_aperturaColumn]));
                }
                set {
                    this[this.tableCuenta.Fecha_aperturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_pais {
                get {
                    return ((int)(this[this.tableCuenta.Codigo_paisColumn]));
                }
                set {
                    this[this.tableCuenta.Codigo_paisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_moneda {
                get {
                    return ((int)(this[this.tableCuenta.Codigo_monedaColumn]));
                }
                set {
                    this[this.tableCuenta.Codigo_monedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_categoria {
                get {
                    return ((int)(this[this.tableCuenta.Codigo_categoriaColumn]));
                }
                set {
                    this[this.tableCuenta.Codigo_categoriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_cliente {
                get {
                    return ((int)(this[this.tableCuenta.Codigo_clienteColumn]));
                }
                set {
                    this[this.tableCuenta.Codigo_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_estado {
                get {
                    return ((int)(this[this.tableCuenta.Codigo_estadoColumn]));
                }
                set {
                    this[this.tableCuenta.Codigo_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    return ((double)(this[this.tableCuenta.SaldoColumn]));
                }
                set {
                    this[this.tableCuenta.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow CategoriaRow {
                get {
                    return ((CategoriaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cuenta__Codigo_c__619B8048"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cuenta__Codigo_c__619B8048"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow ClienteRow {
                get {
                    return ((ClienteRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cuenta__Codigo_c__628FA481"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cuenta__Codigo_c__628FA481"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow Estado_cuentaRow {
                get {
                    return ((Estado_cuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cuenta__Codigo_e__6383C8BA"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cuenta__Codigo_e__6383C8BA"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow MonedaRow {
                get {
                    return ((MonedaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cuenta__Codigo_m__60A75C0F"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cuenta__Codigo_m__60A75C0F"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow PaisRow {
                get {
                    return ((PaisRow)(this.GetParentRow(this.Table.ParentRelations["FK__Cuenta__Codigo_p__5FB337D6"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Cuenta__Codigo_p__5FB337D6"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow[] GetDepositosRows() {
                if ((this.Table.ChildRelations["FK__Depositos__Cod_c__0E6E26BF"] == null)) {
                    return new DepositosRow[0];
                }
                else {
                    return ((DepositosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Depositos__Cod_c__0E6E26BF"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow[] GetModificacion_cuentaRows() {
                if ((this.Table.ChildRelations["FK__Modificac__Cod_c__76969D2E"] == null)) {
                    return new Modificacion_cuentaRow[0];
                }
                else {
                    return ((Modificacion_cuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Modificac__Cod_c__76969D2E"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow[] GetRetirosRows() {
                if ((this.Table.ChildRelations["FK__Retiros__Cod_cue__1BC821DD"] == null)) {
                    return new RetirosRow[0];
                }
                else {
                    return ((RetirosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Retiros__Cod_cue__1BC821DD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow[] GetTransferenciasRowsByFK__Transfere__Cod_c__7C4F7684() {
                if ((this.Table.ChildRelations["FK__Transfere__Cod_c__7C4F7684"] == null)) {
                    return new TransferenciasRow[0];
                }
                else {
                    return ((TransferenciasRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Transfere__Cod_c__7C4F7684"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow[] GetTransferenciasRowsByFK__Transfere__Cod_c__7D439ABD() {
                if ((this.Table.ChildRelations["FK__Transfere__Cod_c__7D439ABD"] == null)) {
                    return new TransferenciasRow[0];
                }
                else {
                    return ((TransferenciasRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Transfere__Cod_c__7D439ABD"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepositosRow : global::System.Data.DataRow {
            
            private DepositosDataTable tableDepositos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepositosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepositos = ((DepositosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_deposito {
                get {
                    return ((int)(this[this.tableDepositos.Id_depositoColumn]));
                }
                set {
                    this[this.tableDepositos.Id_depositoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cuenta {
                get {
                    return ((int)(this[this.tableDepositos.Cod_cuentaColumn]));
                }
                set {
                    this[this.tableDepositos.Cod_cuentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_moneda {
                get {
                    return ((int)(this[this.tableDepositos.Cod_monedaColumn]));
                }
                set {
                    this[this.tableDepositos.Cod_monedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Importe {
                get {
                    return ((double)(this[this.tableDepositos.ImporteColumn]));
                }
                set {
                    this[this.tableDepositos.ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_TC {
                get {
                    return ((int)(this[this.tableDepositos.Cod_TCColumn]));
                }
                set {
                    this[this.tableDepositos.Cod_TCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow CuentaRow {
                get {
                    return ((CuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Depositos__Cod_c__0E6E26BF"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Depositos__Cod_c__0E6E26BF"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow MonedaRow {
                get {
                    return ((MonedaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Depositos__Cod_m__0F624AF8"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Depositos__Cod_m__0F624AF8"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow Tarjetas_creditoRow {
                get {
                    return ((Tarjetas_creditoRow)(this.GetParentRow(this.Table.ParentRelations["FK__Depositos__Cod_T__10566F31"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Depositos__Cod_T__10566F31"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Estado_cuentaRow : global::System.Data.DataRow {
            
            private Estado_cuentaDataTable tableEstado_cuenta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_cuentaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstado_cuenta = ((Estado_cuentaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_estado {
                get {
                    return ((int)(this[this.tableEstado_cuenta.Id_estadoColumn]));
                }
                set {
                    this[this.tableEstado_cuenta.Id_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableEstado_cuenta.DescripcionColumn]));
                }
                set {
                    this[this.tableEstado_cuenta.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow[] GetCuentaRows() {
                if ((this.Table.ChildRelations["FK__Cuenta__Codigo_e__6383C8BA"] == null)) {
                    return new CuentaRow[0];
                }
                else {
                    return ((CuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cuenta__Codigo_e__6383C8BA"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Estado_rolRow : global::System.Data.DataRow {
            
            private Estado_rolDataTable tableEstado_rol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_rolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstado_rol = ((Estado_rolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_estado {
                get {
                    return ((int)(this[this.tableEstado_rol.Id_estadoColumn]));
                }
                set {
                    this[this.tableEstado_rol.Id_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableEstado_rol.DescripcionColumn]));
                }
                set {
                    this[this.tableEstado_rol.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow[] GetRolRows() {
                if ((this.Table.ChildRelations["FK__Rol__Cod_estado__4316F928"] == null)) {
                    return new RolRow[0];
                }
                else {
                    return ((RolRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Rol__Cod_estado__4316F928"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Estado_transaccionRow : global::System.Data.DataRow {
            
            private Estado_transaccionDataTable tableEstado_transaccion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Estado_transaccionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEstado_transaccion = ((Estado_transaccionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_estado {
                get {
                    return ((int)(this[this.tableEstado_transaccion.Id_estadoColumn]));
                }
                set {
                    this[this.tableEstado_transaccion.Id_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableEstado_transaccion.DescripcionColumn]));
                }
                set {
                    this[this.tableEstado_transaccion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow[] GetTransaccionesRows() {
                if ((this.Table.ChildRelations["FK__Transacci__Cod_e__6D0D32F4"] == null)) {
                    return new TransaccionesRow[0];
                }
                else {
                    return ((TransaccionesRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Transacci__Cod_e__6D0D32F4"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FuncionalidadRow : global::System.Data.DataRow {
            
            private FuncionalidadDataTable tableFuncionalidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FuncionalidadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFuncionalidad = ((FuncionalidadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_funcionalidad {
                get {
                    return ((int)(this[this.tableFuncionalidad.Id_funcionalidadColumn]));
                }
                set {
                    this[this.tableFuncionalidad.Id_funcionalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableFuncionalidad.DescripcionColumn]));
                }
                set {
                    this[this.tableFuncionalidad.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow[] GetRol_funcionalidadRows() {
                if ((this.Table.ChildRelations["FK__Rol_funci__Cod_f__4CA06362"] == null)) {
                    return new Rol_funcionalidadRow[0];
                }
                else {
                    return ((Rol_funcionalidadRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Rol_funci__Cod_f__4CA06362"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Intentos_fallidosRow : global::System.Data.DataRow {
            
            private Intentos_fallidosDataTable tableIntentos_fallidos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Intentos_fallidosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIntentos_fallidos = ((Intentos_fallidosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_fallido {
                get {
                    return ((int)(this[this.tableIntentos_fallidos.Id_fallidoColumn]));
                }
                set {
                    this[this.tableIntentos_fallidos.Id_fallidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_login {
                get {
                    return ((int)(this[this.tableIntentos_fallidos.Cod_loginColumn]));
                }
                set {
                    this[this.tableIntentos_fallidos.Cod_loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow Intentos_loginRow {
                get {
                    return ((Intentos_loginRow)(this.GetParentRow(this.Table.ParentRelations["FK__Intentos___Cod_l__3A81B327"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Intentos___Cod_l__3A81B327"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Intentos_loginRow : global::System.Data.DataRow {
            
            private Intentos_loginDataTable tableIntentos_login;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Intentos_loginRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIntentos_login = ((Intentos_loginDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_login {
                get {
                    return ((int)(this[this.tableIntentos_login.Id_loginColumn]));
                }
                set {
                    this[this.tableIntentos_login.Id_loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Codigo_usuario {
                get {
                    return ((int)(this[this.tableIntentos_login.Codigo_usuarioColumn]));
                }
                set {
                    this[this.tableIntentos_login.Codigo_usuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Es_correcto {
                get {
                    return ((bool)(this[this.tableIntentos_login.Es_correctoColumn]));
                }
                set {
                    this[this.tableIntentos_login.Es_correctoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow UsuarioRow {
                get {
                    return ((UsuarioRow)(this.GetParentRow(this.Table.ParentRelations["FK__Intentos___Codig__35BCFE0A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Intentos___Codig__35BCFE0A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow[] GetIntentos_fallidosRows() {
                if ((this.Table.ChildRelations["FK__Intentos___Cod_l__3A81B327"] == null)) {
                    return new Intentos_fallidosRow[0];
                }
                else {
                    return ((Intentos_fallidosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Intentos___Cod_l__3A81B327"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LocalidadRow : global::System.Data.DataRow {
            
            private LocalidadDataTable tableLocalidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LocalidadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLocalidad = ((LocalidadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_localidad {
                get {
                    return ((int)(this[this.tableLocalidad.Id_localidadColumn]));
                }
                set {
                    this[this.tableLocalidad.Id_localidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableLocalidad.DescripcionColumn]));
                }
                set {
                    this[this.tableLocalidad.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow[] GetClienteRows() {
                if ((this.Table.ChildRelations["FK__Cliente__Localid__30F848ED"] == null)) {
                    return new ClienteRow[0];
                }
                else {
                    return ((ClienteRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cliente__Localid__30F848ED"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MaestraRow : global::System.Data.DataRow {
            
            private MaestraDataTable tableMaestra;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MaestraRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMaestra = ((MaestraDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cli_Pais_Codigo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cli_Pais_CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Pais_Codigo\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Pais_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Pais_Desc {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_Pais_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Pais_Desc\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Pais_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Nombre {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Nombre\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Apellido {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_ApellidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Apellido\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cli_Tipo_Doc_Cod {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cli_Tipo_Doc_CodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Tipo_Doc_Cod\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Tipo_Doc_CodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cli_Nro_Doc {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cli_Nro_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Nro_Doc\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Nro_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Tipo_Doc_Desc {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_Tipo_Doc_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Tipo_Doc_Desc\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Tipo_Doc_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Dom_Calle {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_Dom_CalleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Dom_Calle\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Dom_CalleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cli_Dom_Nro {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cli_Dom_NroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Dom_Nro\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Dom_NroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cli_Dom_Piso {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cli_Dom_PisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Dom_Piso\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Dom_PisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Dom_Depto {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_Dom_DeptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Dom_Depto\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Dom_DeptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cli_Fecha_Nac {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cli_Fecha_NacColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Fecha_Nac\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_Fecha_NacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cli_Mail {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cli_MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cli_Mail\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cli_MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cuenta_Numero {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cuenta_NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Numero\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cuenta_Fecha_Creacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cuenta_Fecha_CreacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Fecha_Creacion\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Fecha_CreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta_Estado {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cuenta_EstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Estado\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cuenta_Pais_Codigo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cuenta_Pais_CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Pais_Codigo\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Pais_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta_Pais_Desc {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cuenta_Pais_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Pais_Desc\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Pais_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cuenta_Fecha_Cierre {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cuenta_Fecha_CierreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Fecha_Cierre\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Fecha_CierreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposito_Codigo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Deposito_CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposito_Codigo\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Deposito_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Deposito_Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Deposito_FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposito_Fecha\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Deposito_FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Deposito_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Deposito_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deposito_Importe\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Deposito_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tarjeta_Numero {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Tarjeta_NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarjeta_Numero\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Tarjeta_NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tarjeta_Fecha_Emision {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Tarjeta_Fecha_EmisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarjeta_Fecha_Emision\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Tarjeta_Fecha_EmisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tarjeta_Fecha_Vencimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Tarjeta_Fecha_VencimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarjeta_Fecha_Vencimiento\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Tarjeta_Fecha_VencimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tarjeta_Codigo_Seg {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Tarjeta_Codigo_SegColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarjeta_Codigo_Seg\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Tarjeta_Codigo_SegColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tarjeta_Emisor_Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Tarjeta_Emisor_DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tarjeta_Emisor_Descripcion\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Tarjeta_Emisor_DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cuenta_Dest_Numero {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cuenta_Dest_NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Numero\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cuenta_Dest_Fecha_Creacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cuenta_Dest_Fecha_CreacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Fecha_Creacion\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_Fecha_CreacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta_Dest_Estado {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cuenta_Dest_EstadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Estado\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_EstadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cuenta_Dest_Pais_Codigo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cuenta_Dest_Pais_CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Pais_Codigo\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_Pais_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cuenta_Dest_Pais_Desc {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Cuenta_Dest_Pais_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Pais_Desc\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_Pais_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cuenta_Dest_Fecha_Cierre {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cuenta_Dest_Fecha_CierreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cuenta_Dest_Fecha_Cierre\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cuenta_Dest_Fecha_CierreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Transf_Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Transf_FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transf_Fecha\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Transf_FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Trans_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Trans_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trans_Importe\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Trans_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Trans_Costo_Trans {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Trans_Costo_TransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trans_Costo_Trans\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Trans_Costo_TransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Retiro_Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Retiro_FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retiro_Fecha\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Retiro_FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Retiro_Codigo {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Retiro_CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retiro_Codigo\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Retiro_CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Retiro_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Retiro_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retiro_Importe\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Retiro_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cheque_Numero {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cheque_NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Numero\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cheque_NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Cheque_Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Cheque_FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Fecha\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cheque_FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cheque_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Cheque_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cheque_Importe\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Cheque_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Banco_Cogido {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Banco_CogidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Banco_Cogido\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Banco_CogidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Banco_Nombre {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Banco_NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Banco_Nombre\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Banco_NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Banco_Direccion {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Banco_DireccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Banco_Direccion\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Banco_DireccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Factura_Descr {
                get {
                    try {
                        return ((string)(this[this.tableMaestra.Item_Factura_DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Factura_Descr\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Item_Factura_DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Item_Factura_Importe {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Item_Factura_ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Factura_Importe\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Item_Factura_ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Factura_Numero {
                get {
                    try {
                        return ((decimal)(this[this.tableMaestra.Factura_NumeroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factura_Numero\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Factura_NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Factura_Fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMaestra.Factura_FechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factura_Fecha\' in table \'Maestra\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMaestra.Factura_FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Pais_CodigoNull() {
                return this.IsNull(this.tableMaestra.Cli_Pais_CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Pais_CodigoNull() {
                this[this.tableMaestra.Cli_Pais_CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Pais_DescNull() {
                return this.IsNull(this.tableMaestra.Cli_Pais_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Pais_DescNull() {
                this[this.tableMaestra.Cli_Pais_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_NombreNull() {
                return this.IsNull(this.tableMaestra.Cli_NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_NombreNull() {
                this[this.tableMaestra.Cli_NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_ApellidoNull() {
                return this.IsNull(this.tableMaestra.Cli_ApellidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_ApellidoNull() {
                this[this.tableMaestra.Cli_ApellidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Tipo_Doc_CodNull() {
                return this.IsNull(this.tableMaestra.Cli_Tipo_Doc_CodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Tipo_Doc_CodNull() {
                this[this.tableMaestra.Cli_Tipo_Doc_CodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Nro_DocNull() {
                return this.IsNull(this.tableMaestra.Cli_Nro_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Nro_DocNull() {
                this[this.tableMaestra.Cli_Nro_DocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Tipo_Doc_DescNull() {
                return this.IsNull(this.tableMaestra.Cli_Tipo_Doc_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Tipo_Doc_DescNull() {
                this[this.tableMaestra.Cli_Tipo_Doc_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Dom_CalleNull() {
                return this.IsNull(this.tableMaestra.Cli_Dom_CalleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Dom_CalleNull() {
                this[this.tableMaestra.Cli_Dom_CalleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Dom_NroNull() {
                return this.IsNull(this.tableMaestra.Cli_Dom_NroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Dom_NroNull() {
                this[this.tableMaestra.Cli_Dom_NroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Dom_PisoNull() {
                return this.IsNull(this.tableMaestra.Cli_Dom_PisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Dom_PisoNull() {
                this[this.tableMaestra.Cli_Dom_PisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Dom_DeptoNull() {
                return this.IsNull(this.tableMaestra.Cli_Dom_DeptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Dom_DeptoNull() {
                this[this.tableMaestra.Cli_Dom_DeptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_Fecha_NacNull() {
                return this.IsNull(this.tableMaestra.Cli_Fecha_NacColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_Fecha_NacNull() {
                this[this.tableMaestra.Cli_Fecha_NacColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCli_MailNull() {
                return this.IsNull(this.tableMaestra.Cli_MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCli_MailNull() {
                this[this.tableMaestra.Cli_MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_NumeroNull() {
                return this.IsNull(this.tableMaestra.Cuenta_NumeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_NumeroNull() {
                this[this.tableMaestra.Cuenta_NumeroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Fecha_CreacionNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Fecha_CreacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Fecha_CreacionNull() {
                this[this.tableMaestra.Cuenta_Fecha_CreacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_EstadoNull() {
                return this.IsNull(this.tableMaestra.Cuenta_EstadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_EstadoNull() {
                this[this.tableMaestra.Cuenta_EstadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Pais_CodigoNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Pais_CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Pais_CodigoNull() {
                this[this.tableMaestra.Cuenta_Pais_CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Pais_DescNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Pais_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Pais_DescNull() {
                this[this.tableMaestra.Cuenta_Pais_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Fecha_CierreNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Fecha_CierreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Fecha_CierreNull() {
                this[this.tableMaestra.Cuenta_Fecha_CierreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeposito_CodigoNull() {
                return this.IsNull(this.tableMaestra.Deposito_CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeposito_CodigoNull() {
                this[this.tableMaestra.Deposito_CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeposito_FechaNull() {
                return this.IsNull(this.tableMaestra.Deposito_FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeposito_FechaNull() {
                this[this.tableMaestra.Deposito_FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeposito_ImporteNull() {
                return this.IsNull(this.tableMaestra.Deposito_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeposito_ImporteNull() {
                this[this.tableMaestra.Deposito_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarjeta_NumeroNull() {
                return this.IsNull(this.tableMaestra.Tarjeta_NumeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarjeta_NumeroNull() {
                this[this.tableMaestra.Tarjeta_NumeroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarjeta_Fecha_EmisionNull() {
                return this.IsNull(this.tableMaestra.Tarjeta_Fecha_EmisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarjeta_Fecha_EmisionNull() {
                this[this.tableMaestra.Tarjeta_Fecha_EmisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarjeta_Fecha_VencimientoNull() {
                return this.IsNull(this.tableMaestra.Tarjeta_Fecha_VencimientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarjeta_Fecha_VencimientoNull() {
                this[this.tableMaestra.Tarjeta_Fecha_VencimientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarjeta_Codigo_SegNull() {
                return this.IsNull(this.tableMaestra.Tarjeta_Codigo_SegColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarjeta_Codigo_SegNull() {
                this[this.tableMaestra.Tarjeta_Codigo_SegColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTarjeta_Emisor_DescripcionNull() {
                return this.IsNull(this.tableMaestra.Tarjeta_Emisor_DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTarjeta_Emisor_DescripcionNull() {
                this[this.tableMaestra.Tarjeta_Emisor_DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_NumeroNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_NumeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_NumeroNull() {
                this[this.tableMaestra.Cuenta_Dest_NumeroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_Fecha_CreacionNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_Fecha_CreacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_Fecha_CreacionNull() {
                this[this.tableMaestra.Cuenta_Dest_Fecha_CreacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_EstadoNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_EstadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_EstadoNull() {
                this[this.tableMaestra.Cuenta_Dest_EstadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_Pais_CodigoNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_Pais_CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_Pais_CodigoNull() {
                this[this.tableMaestra.Cuenta_Dest_Pais_CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_Pais_DescNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_Pais_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_Pais_DescNull() {
                this[this.tableMaestra.Cuenta_Dest_Pais_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCuenta_Dest_Fecha_CierreNull() {
                return this.IsNull(this.tableMaestra.Cuenta_Dest_Fecha_CierreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCuenta_Dest_Fecha_CierreNull() {
                this[this.tableMaestra.Cuenta_Dest_Fecha_CierreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransf_FechaNull() {
                return this.IsNull(this.tableMaestra.Transf_FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransf_FechaNull() {
                this[this.tableMaestra.Transf_FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrans_ImporteNull() {
                return this.IsNull(this.tableMaestra.Trans_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrans_ImporteNull() {
                this[this.tableMaestra.Trans_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrans_Costo_TransNull() {
                return this.IsNull(this.tableMaestra.Trans_Costo_TransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrans_Costo_TransNull() {
                this[this.tableMaestra.Trans_Costo_TransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiro_FechaNull() {
                return this.IsNull(this.tableMaestra.Retiro_FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiro_FechaNull() {
                this[this.tableMaestra.Retiro_FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiro_CodigoNull() {
                return this.IsNull(this.tableMaestra.Retiro_CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiro_CodigoNull() {
                this[this.tableMaestra.Retiro_CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetiro_ImporteNull() {
                return this.IsNull(this.tableMaestra.Retiro_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetiro_ImporteNull() {
                this[this.tableMaestra.Retiro_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_NumeroNull() {
                return this.IsNull(this.tableMaestra.Cheque_NumeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_NumeroNull() {
                this[this.tableMaestra.Cheque_NumeroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_FechaNull() {
                return this.IsNull(this.tableMaestra.Cheque_FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_FechaNull() {
                this[this.tableMaestra.Cheque_FechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheque_ImporteNull() {
                return this.IsNull(this.tableMaestra.Cheque_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheque_ImporteNull() {
                this[this.tableMaestra.Cheque_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBanco_CogidoNull() {
                return this.IsNull(this.tableMaestra.Banco_CogidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBanco_CogidoNull() {
                this[this.tableMaestra.Banco_CogidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBanco_NombreNull() {
                return this.IsNull(this.tableMaestra.Banco_NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBanco_NombreNull() {
                this[this.tableMaestra.Banco_NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBanco_DireccionNull() {
                return this.IsNull(this.tableMaestra.Banco_DireccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBanco_DireccionNull() {
                this[this.tableMaestra.Banco_DireccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Factura_DescrNull() {
                return this.IsNull(this.tableMaestra.Item_Factura_DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Factura_DescrNull() {
                this[this.tableMaestra.Item_Factura_DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_Factura_ImporteNull() {
                return this.IsNull(this.tableMaestra.Item_Factura_ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_Factura_ImporteNull() {
                this[this.tableMaestra.Item_Factura_ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactura_NumeroNull() {
                return this.IsNull(this.tableMaestra.Factura_NumeroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactura_NumeroNull() {
                this[this.tableMaestra.Factura_NumeroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactura_FechaNull() {
                return this.IsNull(this.tableMaestra.Factura_FechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactura_FechaNull() {
                this[this.tableMaestra.Factura_FechaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Modificacion_cuentaRow : global::System.Data.DataRow {
            
            private Modificacion_cuentaDataTable tableModificacion_cuenta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Modificacion_cuentaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableModificacion_cuenta = ((Modificacion_cuentaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_modificacion {
                get {
                    return ((int)(this[this.tableModificacion_cuenta.Id_modificacionColumn]));
                }
                set {
                    this[this.tableModificacion_cuenta.Id_modificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_tipo {
                get {
                    return ((int)(this[this.tableModificacion_cuenta.Cod_tipoColumn]));
                }
                set {
                    this[this.tableModificacion_cuenta.Cod_tipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cuenta {
                get {
                    return ((int)(this[this.tableModificacion_cuenta.Cod_cuentaColumn]));
                }
                set {
                    this[this.tableModificacion_cuenta.Cod_cuentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_transaccion {
                get {
                    return ((int)(this[this.tableModificacion_cuenta.Cod_transaccionColumn]));
                }
                set {
                    this[this.tableModificacion_cuenta.Cod_transaccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow CuentaRow {
                get {
                    return ((CuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Modificac__Cod_c__76969D2E"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Modificac__Cod_c__76969D2E"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow Tipo_modificacionRow {
                get {
                    return ((Tipo_modificacionRow)(this.GetParentRow(this.Table.ParentRelations["FK__Modificac__Cod_t__75A278F5"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Modificac__Cod_t__75A278F5"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow TransaccionesRow {
                get {
                    return ((TransaccionesRow)(this.GetParentRow(this.Table.ParentRelations["FK__Modificac__Cod_t__778AC167"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Modificac__Cod_t__778AC167"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MonedaRow : global::System.Data.DataRow {
            
            private MonedaDataTable tableMoneda;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonedaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMoneda = ((MonedaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_moneda {
                get {
                    return ((int)(this[this.tableMoneda.Id_monedaColumn]));
                }
                set {
                    this[this.tableMoneda.Id_monedaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableMoneda.DescripcionColumn]));
                }
                set {
                    this[this.tableMoneda.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Conversion {
                get {
                    return ((double)(this[this.tableMoneda.ConversionColumn]));
                }
                set {
                    this[this.tableMoneda.ConversionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow[] GetCuentaRows() {
                if ((this.Table.ChildRelations["FK__Cuenta__Codigo_m__60A75C0F"] == null)) {
                    return new CuentaRow[0];
                }
                else {
                    return ((CuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cuenta__Codigo_m__60A75C0F"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow[] GetDepositosRows() {
                if ((this.Table.ChildRelations["FK__Depositos__Cod_m__0F624AF8"] == null)) {
                    return new DepositosRow[0];
                }
                else {
                    return ((DepositosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Depositos__Cod_m__0F624AF8"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaisRow : global::System.Data.DataRow {
            
            private PaisDataTable tablePais;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePais = ((PaisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_Pais {
                get {
                    return ((int)(this[this.tablePais.Id_PaisColumn]));
                }
                set {
                    this[this.tablePais.Id_PaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePais.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'Pais\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePais.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePais.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tablePais.DescripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow[] GetBancosRows() {
                if ((this.Table.ChildRelations["FK__Bancos__Cod_pais__02FC7413"] == null)) {
                    return new BancosRow[0];
                }
                else {
                    return ((BancosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Bancos__Cod_pais__02FC7413"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow[] GetClienteRows() {
                if ((this.Table.ChildRelations["FK__Cliente__Cod_pai__2F10007B"] == null)) {
                    return new ClienteRow[0];
                }
                else {
                    return ((ClienteRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cliente__Cod_pai__2F10007B"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow[] GetCuentaRows() {
                if ((this.Table.ChildRelations["FK__Cuenta__Codigo_p__5FB337D6"] == null)) {
                    return new CuentaRow[0];
                }
                else {
                    return ((CuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cuenta__Codigo_p__5FB337D6"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RetirosRow : global::System.Data.DataRow {
            
            private RetirosDataTable tableRetiros;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetirosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRetiros = ((RetirosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_retiro {
                get {
                    return ((int)(this[this.tableRetiros.Id_retiroColumn]));
                }
                set {
                    this[this.tableRetiros.Id_retiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cuenta {
                get {
                    return ((int)(this[this.tableRetiros.Cod_cuentaColumn]));
                }
                set {
                    this[this.tableRetiros.Cod_cuentaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cheque {
                get {
                    return ((int)(this[this.tableRetiros.Cod_chequeColumn]));
                }
                set {
                    this[this.tableRetiros.Cod_chequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow ChequeRow {
                get {
                    return ((ChequeRow)(this.GetParentRow(this.Table.ParentRelations["FK__Retiros__Cod_che__1CBC4616"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Retiros__Cod_che__1CBC4616"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow CuentaRow {
                get {
                    return ((CuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Retiros__Cod_cue__1BC821DD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Retiros__Cod_cue__1BC821DD"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RolRow : global::System.Data.DataRow {
            
            private RolDataTable tableRol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRol = ((RolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_rol {
                get {
                    return ((int)(this[this.tableRol.Id_rolColumn]));
                }
                set {
                    this[this.tableRol.Id_rolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre_rol {
                get {
                    return ((string)(this[this.tableRol.Nombre_rolColumn]));
                }
                set {
                    this[this.tableRol.Nombre_rolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_estado {
                get {
                    return ((int)(this[this.tableRol.Cod_estadoColumn]));
                }
                set {
                    this[this.tableRol.Cod_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow Estado_rolRow {
                get {
                    return ((Estado_rolRow)(this.GetParentRow(this.Table.ParentRelations["FK__Rol__Cod_estado__4316F928"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Rol__Cod_estado__4316F928"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow[] GetRol_funcionalidadRows() {
                if ((this.Table.ChildRelations["FK__Rol_funci__Cod_f__4BAC3F29"] == null)) {
                    return new Rol_funcionalidadRow[0];
                }
                else {
                    return ((Rol_funcionalidadRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Rol_funci__Cod_f__4BAC3F29"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow[] GetUsuario_rolRows() {
                if ((this.Table.ChildRelations["FK__Usuario_r__Cod_r__45F365D3"] == null)) {
                    return new Usuario_rolRow[0];
                }
                else {
                    return ((Usuario_rolRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Usuario_r__Cod_r__45F365D3"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Rol_funcionalidadRow : global::System.Data.DataRow {
            
            private Rol_funcionalidadDataTable tableRol_funcionalidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Rol_funcionalidadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRol_funcionalidad = ((Rol_funcionalidadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_rol {
                get {
                    return ((int)(this[this.tableRol_funcionalidad.Cod_rolColumn]));
                }
                set {
                    this[this.tableRol_funcionalidad.Cod_rolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_funcionalidad {
                get {
                    return ((int)(this[this.tableRol_funcionalidad.Cod_funcionalidadColumn]));
                }
                set {
                    this[this.tableRol_funcionalidad.Cod_funcionalidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow RolRow {
                get {
                    return ((RolRow)(this.GetParentRow(this.Table.ParentRelations["FK__Rol_funci__Cod_f__4BAC3F29"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Rol_funci__Cod_f__4BAC3F29"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow FuncionalidadRow {
                get {
                    return ((FuncionalidadRow)(this.GetParentRow(this.Table.ParentRelations["FK__Rol_funci__Cod_f__4CA06362"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Rol_funci__Cod_f__4CA06362"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tabla_ClienteRow : global::System.Data.DataRow {
            
            private Tabla_ClienteDataTable tableTabla_Cliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tabla_ClienteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTabla_Cliente = ((Tabla_ClienteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tableTabla_Cliente.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'Tabla_Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Cliente.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    try {
                        return ((string)(this[this.tableTabla_Cliente.ApellidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apellido\' in table \'Tabla_Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Cliente.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tipo_Doc {
                get {
                    try {
                        return ((decimal)(this[this.tableTabla_Cliente.Tipo_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo_Doc\' in table \'Tabla_Cliente\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Cliente.Tipo_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tableTabla_Cliente.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tableTabla_Cliente.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellidoNull() {
                return this.IsNull(this.tableTabla_Cliente.ApellidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellidoNull() {
                this[this.tableTabla_Cliente.ApellidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipo_DocNull() {
                return this.IsNull(this.tableTabla_Cliente.Tipo_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipo_DocNull() {
                this[this.tableTabla_Cliente.Tipo_DocColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tabla_ClientesRow : global::System.Data.DataRow {
            
            private Tabla_ClientesDataTable tableTabla_Clientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tabla_ClientesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTabla_Clientes = ((Tabla_ClientesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tableTabla_Clientes.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'Tabla_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Clientes.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    try {
                        return ((string)(this[this.tableTabla_Clientes.ApellidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apellido\' in table \'Tabla_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Clientes.ApellidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tipo_Doc {
                get {
                    try {
                        return ((decimal)(this[this.tableTabla_Clientes.Tipo_DocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo_Doc\' in table \'Tabla_Clientes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTabla_Clientes.Tipo_DocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tableTabla_Clientes.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tableTabla_Clientes.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellidoNull() {
                return this.IsNull(this.tableTabla_Clientes.ApellidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellidoNull() {
                this[this.tableTabla_Clientes.ApellidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipo_DocNull() {
                return this.IsNull(this.tableTabla_Clientes.Tipo_DocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipo_DocNull() {
                this[this.tableTabla_Clientes.Tipo_DocColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tabladementiritasRow : global::System.Data.DataRow {
            
            private tabladementiritasDataTable tabletabladementiritas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tabladementiritasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabladementiritas = ((tabladementiritasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numerito {
                get {
                    return ((int)(this[this.tabletabladementiritas.numeritoColumn]));
                }
                set {
                    this[this.tabletabladementiritas.numeritoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombresillo {
                get {
                    try {
                        return ((string)(this[this.tabletabladementiritas.nombresilloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombresillo\' in table \'tabladementiritas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletabladementiritas.nombresilloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombresilloNull() {
                return this.IsNull(this.tabletabladementiritas.nombresilloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombresilloNull() {
                this[this.tabletabladementiritas.nombresilloColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tabladementiritas2Row : global::System.Data.DataRow {
            
            private tabladementiritas2DataTable tabletabladementiritas2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tabladementiritas2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletabladementiritas2 = ((tabladementiritas2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal numerito {
                get {
                    return ((decimal)(this[this.tabletabladementiritas2.numeritoColumn]));
                }
                set {
                    this[this.tabletabladementiritas2.numeritoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombresillo {
                get {
                    try {
                        return ((string)(this[this.tabletabladementiritas2.nombresilloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombresillo\' in table \'tabladementiritas2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletabladementiritas2.nombresilloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombresilloNull() {
                return this.IsNull(this.tabletabladementiritas2.nombresilloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombresilloNull() {
                this[this.tabletabladementiritas2.nombresilloColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tarjetas_creditoRow : global::System.Data.DataRow {
            
            private Tarjetas_creditoDataTable tableTarjetas_credito;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tarjetas_creditoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTarjetas_credito = ((Tarjetas_creditoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Num_tarjeta {
                get {
                    return ((int)(this[this.tableTarjetas_credito.Num_tarjetaColumn]));
                }
                set {
                    this[this.tableTarjetas_credito.Num_tarjetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cliente {
                get {
                    return ((int)(this[this.tableTarjetas_credito.Cod_clienteColumn]));
                }
                set {
                    this[this.tableTarjetas_credito.Cod_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_emisor {
                get {
                    return ((int)(this[this.tableTarjetas_credito.Cod_emisorColumn]));
                }
                set {
                    this[this.tableTarjetas_credito.Cod_emisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_emision {
                get {
                    return ((global::System.DateTime)(this[this.tableTarjetas_credito.Fecha_emisionColumn]));
                }
                set {
                    this[this.tableTarjetas_credito.Fecha_emisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_vencimiento {
                get {
                    return ((global::System.DateTime)(this[this.tableTarjetas_credito.Fecha_vencimientoColumn]));
                }
                set {
                    this[this.tableTarjetas_credito.Fecha_vencimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_seguridad {
                get {
                    try {
                        return ((int)(this[this.tableTarjetas_credito.Cod_seguridadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cod_seguridad\' in table \'Tarjetas_credito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTarjetas_credito.Cod_seguridadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow ClienteRow {
                get {
                    return ((ClienteRow)(this.GetParentRow(this.Table.ParentRelations["FK__Tarjetas___Cod_c__07C12930"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Tarjetas___Cod_c__07C12930"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow BancosRow {
                get {
                    return ((BancosRow)(this.GetParentRow(this.Table.ParentRelations["FK__Tarjetas___Cod_e__08B54D69"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Tarjetas___Cod_e__08B54D69"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCod_seguridadNull() {
                return this.IsNull(this.tableTarjetas_credito.Cod_seguridadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCod_seguridadNull() {
                this[this.tableTarjetas_credito.Cod_seguridadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow[] GetDepositosRows() {
                if ((this.Table.ChildRelations["FK__Depositos__Cod_T__10566F31"] == null)) {
                    return new DepositosRow[0];
                }
                else {
                    return ((DepositosRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Depositos__Cod_T__10566F31"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tipo_DNIRow : global::System.Data.DataRow {
            
            private Tipo_DNIDataTable tableTipo_DNI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tipo_DNIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTipo_DNI = ((Tipo_DNIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_DNI {
                get {
                    return ((int)(this[this.tableTipo_DNI.Id_DNIColumn]));
                }
                set {
                    this[this.tableTipo_DNI.Id_DNIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableTipo_DNI.DescripcionColumn]));
                }
                set {
                    this[this.tableTipo_DNI.DescripcionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tipo_modificacionRow : global::System.Data.DataRow {
            
            private Tipo_modificacionDataTable tableTipo_modificacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tipo_modificacionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTipo_modificacion = ((Tipo_modificacionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_tipo {
                get {
                    return ((int)(this[this.tableTipo_modificacion.Id_tipoColumn]));
                }
                set {
                    this[this.tableTipo_modificacion.Id_tipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableTipo_modificacion.DescripcionColumn]));
                }
                set {
                    this[this.tableTipo_modificacion.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow[] GetModificacion_cuentaRows() {
                if ((this.Table.ChildRelations["FK__Modificac__Cod_t__75A278F5"] == null)) {
                    return new Modificacion_cuentaRow[0];
                }
                else {
                    return ((Modificacion_cuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Modificac__Cod_t__75A278F5"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransaccionesRow : global::System.Data.DataRow {
            
            private TransaccionesDataTable tableTransacciones;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransaccionesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransacciones = ((TransaccionesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_transaccion {
                get {
                    return ((int)(this[this.tableTransacciones.Id_transaccionColumn]));
                }
                set {
                    this[this.tableTransacciones.Id_transaccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_estado {
                get {
                    return ((int)(this[this.tableTransacciones.Cod_estadoColumn]));
                }
                set {
                    this[this.tableTransacciones.Cod_estadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Costo {
                get {
                    return ((double)(this[this.tableTransacciones.CostoColumn]));
                }
                set {
                    this[this.tableTransacciones.CostoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha {
                get {
                    return ((global::System.DateTime)(this[this.tableTransacciones.FechaColumn]));
                }
                set {
                    this[this.tableTransacciones.FechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow Estado_transaccionRow {
                get {
                    return ((Estado_transaccionRow)(this.GetParentRow(this.Table.ParentRelations["FK__Transacci__Cod_e__6D0D32F4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Transacci__Cod_e__6D0D32F4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow[] GetModificacion_cuentaRows() {
                if ((this.Table.ChildRelations["FK__Modificac__Cod_t__778AC167"] == null)) {
                    return new Modificacion_cuentaRow[0];
                }
                else {
                    return ((Modificacion_cuentaRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Modificac__Cod_t__778AC167"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow[] GetTransferenciasRows() {
                if ((this.Table.ChildRelations["FK__Transfere__Cod_t__7E37BEF6"] == null)) {
                    return new TransferenciasRow[0];
                }
                else {
                    return ((TransferenciasRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Transfere__Cod_t__7E37BEF6"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TransferenciasRow : global::System.Data.DataRow {
            
            private TransferenciasDataTable tableTransferencias;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TransferenciasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTransferencias = ((TransferenciasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_transferencia {
                get {
                    return ((int)(this[this.tableTransferencias.Id_transferenciaColumn]));
                }
                set {
                    this[this.tableTransferencias.Id_transferenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Importe {
                get {
                    return ((double)(this[this.tableTransferencias.ImporteColumn]));
                }
                set {
                    this[this.tableTransferencias.ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cuenta_origen {
                get {
                    return ((int)(this[this.tableTransferencias.Cod_cuenta_origenColumn]));
                }
                set {
                    this[this.tableTransferencias.Cod_cuenta_origenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_cuenta_destino {
                get {
                    return ((int)(this[this.tableTransferencias.Cod_cuenta_destinoColumn]));
                }
                set {
                    this[this.tableTransferencias.Cod_cuenta_destinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_transaccion {
                get {
                    return ((int)(this[this.tableTransferencias.Cod_transaccionColumn]));
                }
                set {
                    this[this.tableTransferencias.Cod_transaccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow CuentaRowByFK__Transfere__Cod_c__7C4F7684 {
                get {
                    return ((CuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Transfere__Cod_c__7C4F7684"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Transfere__Cod_c__7C4F7684"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow CuentaRowByFK__Transfere__Cod_c__7D439ABD {
                get {
                    return ((CuentaRow)(this.GetParentRow(this.Table.ParentRelations["FK__Transfere__Cod_c__7D439ABD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Transfere__Cod_c__7D439ABD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow TransaccionesRow {
                get {
                    return ((TransaccionesRow)(this.GetParentRow(this.Table.ParentRelations["FK__Transfere__Cod_t__7E37BEF6"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Transfere__Cod_t__7E37BEF6"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UsuarioRow : global::System.Data.DataRow {
            
            private UsuarioDataTable tableUsuario;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsuarioRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsuario = ((UsuarioDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id_usuario {
                get {
                    return ((int)(this[this.tableUsuario.Id_usuarioColumn]));
                }
                set {
                    this[this.tableUsuario.Id_usuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Useranme {
                get {
                    return ((string)(this[this.tableUsuario.UseranmeColumn]));
                }
                set {
                    this[this.tableUsuario.UseranmeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contraseña {
                get {
                    return ((string)(this[this.tableUsuario.ContraseñaColumn]));
                }
                set {
                    this[this.tableUsuario.ContraseñaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_creacion {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsuario.Fecha_creacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha_creacion\' in table \'Usuario\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsuario.Fecha_creacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Ultima_modificacion {
                get {
                    return ((global::System.DateTime)(this[this.tableUsuario.Ultima_modificacionColumn]));
                }
                set {
                    this[this.tableUsuario.Ultima_modificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pregunta_secreta {
                get {
                    return ((string)(this[this.tableUsuario.Pregunta_secretaColumn]));
                }
                set {
                    this[this.tableUsuario.Pregunta_secretaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Respuesta {
                get {
                    return ((string)(this[this.tableUsuario.RespuestaColumn]));
                }
                set {
                    this[this.tableUsuario.RespuestaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFecha_creacionNull() {
                return this.IsNull(this.tableUsuario.Fecha_creacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFecha_creacionNull() {
                this[this.tableUsuario.Fecha_creacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow[] GetClienteRows() {
                if ((this.Table.ChildRelations["FK__Cliente__Cod_usu__300424B4"] == null)) {
                    return new ClienteRow[0];
                }
                else {
                    return ((ClienteRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Cliente__Cod_usu__300424B4"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow[] GetIntentos_loginRows() {
                if ((this.Table.ChildRelations["FK__Intentos___Codig__35BCFE0A"] == null)) {
                    return new Intentos_loginRow[0];
                }
                else {
                    return ((Intentos_loginRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Intentos___Codig__35BCFE0A"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow[] GetUsuario_rolRows() {
                if ((this.Table.ChildRelations["FK__Usuario_r__Cod_u__44FF419A"] == null)) {
                    return new Usuario_rolRow[0];
                }
                else {
                    return ((Usuario_rolRow[])(base.GetChildRows(this.Table.ChildRelations["FK__Usuario_r__Cod_u__44FF419A"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Usuario_rolRow : global::System.Data.DataRow {
            
            private Usuario_rolDataTable tableUsuario_rol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Usuario_rolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsuario_rol = ((Usuario_rolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_usuario {
                get {
                    return ((int)(this[this.tableUsuario_rol.Cod_usuarioColumn]));
                }
                set {
                    this[this.tableUsuario_rol.Cod_usuarioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cod_rol {
                get {
                    return ((int)(this[this.tableUsuario_rol.Cod_rolColumn]));
                }
                set {
                    this[this.tableUsuario_rol.Cod_rolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow RolRow {
                get {
                    return ((RolRow)(this.GetParentRow(this.Table.ParentRelations["FK__Usuario_r__Cod_r__45F365D3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Usuario_r__Cod_r__45F365D3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow UsuarioRow {
                get {
                    return ((UsuarioRow)(this.GetParentRow(this.Table.ParentRelations["FK__Usuario_r__Cod_u__44FF419A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__Usuario_r__Cod_u__44FF419A"]);
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BancosRowChangeEvent : global::System.EventArgs {
            
            private BancosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRowChangeEvent(BancosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BancosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CategoriaRowChangeEvent : global::System.EventArgs {
            
            private CategoriaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRowChangeEvent(CategoriaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CategoriaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ChequeRowChangeEvent : global::System.EventArgs {
            
            private ChequeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRowChangeEvent(ChequeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChequeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClienteRowChangeEvent : global::System.EventArgs {
            
            private ClienteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRowChangeEvent(ClienteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CuentaRowChangeEvent : global::System.EventArgs {
            
            private CuentaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRowChangeEvent(CuentaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CuentaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepositosRowChangeEvent : global::System.EventArgs {
            
            private DepositosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRowChangeEvent(DepositosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepositosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Estado_cuentaRowChangeEvent : global::System.EventArgs {
            
            private Estado_cuentaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRowChangeEvent(Estado_cuentaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_cuentaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Estado_rolRowChangeEvent : global::System.EventArgs {
            
            private Estado_rolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRowChangeEvent(Estado_rolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_rolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Estado_transaccionRowChangeEvent : global::System.EventArgs {
            
            private Estado_transaccionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRowChangeEvent(Estado_transaccionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Estado_transaccionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FuncionalidadRowChangeEvent : global::System.EventArgs {
            
            private FuncionalidadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRowChangeEvent(FuncionalidadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FuncionalidadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Intentos_fallidosRowChangeEvent : global::System.EventArgs {
            
            private Intentos_fallidosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRowChangeEvent(Intentos_fallidosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_fallidosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Intentos_loginRowChangeEvent : global::System.EventArgs {
            
            private Intentos_loginRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRowChangeEvent(Intentos_loginRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Intentos_loginRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LocalidadRowChangeEvent : global::System.EventArgs {
            
            private LocalidadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRowChangeEvent(LocalidadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LocalidadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MaestraRowChangeEvent : global::System.EventArgs {
            
            private MaestraRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraRowChangeEvent(MaestraRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MaestraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Modificacion_cuentaRowChangeEvent : global::System.EventArgs {
            
            private Modificacion_cuentaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRowChangeEvent(Modificacion_cuentaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Modificacion_cuentaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MonedaRowChangeEvent : global::System.EventArgs {
            
            private MonedaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRowChangeEvent(MonedaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonedaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaisRowChangeEvent : global::System.EventArgs {
            
            private PaisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRowChangeEvent(PaisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RetirosRowChangeEvent : global::System.EventArgs {
            
            private RetirosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRowChangeEvent(RetirosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetirosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RolRowChangeEvent : global::System.EventArgs {
            
            private RolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRowChangeEvent(RolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Rol_funcionalidadRowChangeEvent : global::System.EventArgs {
            
            private Rol_funcionalidadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRowChangeEvent(Rol_funcionalidadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Rol_funcionalidadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tabla_ClienteRowChangeEvent : global::System.EventArgs {
            
            private Tabla_ClienteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteRowChangeEvent(Tabla_ClienteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tabla_ClientesRowChangeEvent : global::System.EventArgs {
            
            private Tabla_ClientesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesRowChangeEvent(Tabla_ClientesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tabla_ClientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tabladementiritasRowChangeEvent : global::System.EventArgs {
            
            private tabladementiritasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasRowChangeEvent(tabladementiritasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tabladementiritas2RowChangeEvent : global::System.EventArgs {
            
            private tabladementiritas2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2RowChangeEvent(tabladementiritas2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tabladementiritas2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tarjetas_creditoRowChangeEvent : global::System.EventArgs {
            
            private Tarjetas_creditoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRowChangeEvent(Tarjetas_creditoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tarjetas_creditoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tipo_DNIRowChangeEvent : global::System.EventArgs {
            
            private Tipo_DNIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRowChangeEvent(Tipo_DNIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_DNIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tipo_modificacionRowChangeEvent : global::System.EventArgs {
            
            private Tipo_modificacionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRowChangeEvent(Tipo_modificacionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tipo_modificacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransaccionesRowChangeEvent : global::System.EventArgs {
            
            private TransaccionesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRowChangeEvent(TransaccionesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransaccionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TransferenciasRowChangeEvent : global::System.EventArgs {
            
            private TransferenciasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRowChangeEvent(TransferenciasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TransferenciasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UsuarioRowChangeEvent : global::System.EventArgs {
            
            private UsuarioRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRowChangeEvent(UsuarioRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsuarioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Usuario_rolRowChangeEvent : global::System.EventArgs {
            
            private Usuario_rolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRowChangeEvent(Usuario_rolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Usuario_rolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PagoElectronico.GD1C2015DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BancosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BancosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Bancos";
            tableMapping.ColumnMappings.Add("Id_banco", "Id_banco");
            tableMapping.ColumnMappings.Add("Nombre_banco", "Nombre_banco");
            tableMapping.ColumnMappings.Add("Cod_pais", "Cod_pais");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Bancos] WHERE (([Id_banco] = @Original_Id_banco) AND ([Nombre_" +
                "banco] = @Original_Nombre_banco) AND ([Cod_pais] = @Original_Cod_pais))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_banco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Bancos] ([Id_banco], [Nombre_banco], [Cod_pais]) VALUES (@Id_b" +
                "anco, @Nombre_banco, @Cod_pais);\r\nSELECT Id_banco, Nombre_banco, Cod_pais FROM B" +
                "ancos WHERE (Id_banco = @Id_banco)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_banco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Bancos] SET [Id_banco] = @Id_banco, [Nombre_banco] = @Nombre_banco, [Cod_pais] = @Cod_pais WHERE (([Id_banco] = @Original_Id_banco) AND ([Nombre_banco] = @Original_Nombre_banco) AND ([Cod_pais] = @Original_Cod_pais));
SELECT Id_banco, Nombre_banco, Cod_pais FROM Bancos WHERE (Id_banco = @Id_banco)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_banco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_banco", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_banco, Nombre_banco, Cod_pais FROM dbo.Bancos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.BancosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.BancosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.BancosDataTable dataTable = new GD1C2015DataSet.BancosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.BancosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Bancos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_banco, string Original_Nombre_banco, int Original_Cod_pais) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_banco));
            if ((Original_Nombre_banco == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_banco");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre_banco));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_pais));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_banco, string Nombre_banco, int Cod_pais) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_banco));
            if ((Nombre_banco == null)) {
                throw new global::System.ArgumentNullException("Nombre_banco");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nombre_banco));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_pais));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_banco, string Nombre_banco, int Cod_pais, int Original_Id_banco, string Original_Nombre_banco, int Original_Cod_pais) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_banco));
            if ((Nombre_banco == null)) {
                throw new global::System.ArgumentNullException("Nombre_banco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nombre_banco));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_pais));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Id_banco));
            if ((Original_Nombre_banco == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_banco");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Nombre_banco));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Cod_pais));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre_banco, int Cod_pais, int Original_Id_banco, string Original_Nombre_banco, int Original_Cod_pais) {
            return this.Update(Original_Id_banco, Nombre_banco, Cod_pais, Original_Id_banco, Original_Nombre_banco, Original_Cod_pais);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CategoriaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CategoriaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Categoria";
            tableMapping.ColumnMappings.Add("Id_categoria", "Id_categoria");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Costo", "Costo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Categoria] WHERE (([Id_categoria] = @Original_Id_categoria) AN" +
                "D ([Descripcion] = @Original_Descripcion) AND ([Costo] = @Original_Costo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Categoria] ([Descripcion], [Costo]) VALUES (@Descripcion, @Cos" +
                "to);\r\nSELECT Id_categoria, Descripcion, Costo FROM Categoria WHERE (Id_categoria" +
                " = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Categoria] SET [Descripcion] = @Descripcion, [Costo] = @Costo WHERE (([Id_categoria] = @Original_Id_categoria) AND ([Descripcion] = @Original_Descripcion) AND ([Costo] = @Original_Costo));
SELECT Id_categoria, Descripcion, Costo FROM Categoria WHERE (Id_categoria = @Id_categoria)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_categoria", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_categoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_categoria, Descripcion, Costo FROM dbo.Categoria";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.CategoriaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.CategoriaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.CategoriaDataTable dataTable = new GD1C2015DataSet.CategoriaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.CategoriaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Categoria");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_categoria, string Original_Descripcion, double Original_Costo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_categoria));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Costo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion, double Costo) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Costo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, double Costo, int Original_Id_categoria, string Original_Descripcion, double Original_Costo, int Id_categoria) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Costo));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_categoria));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Original_Costo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Id_categoria));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, double Costo, int Original_Id_categoria, string Original_Descripcion, double Original_Costo) {
            return this.Update(Descripcion, Costo, Original_Id_categoria, Original_Descripcion, Original_Costo, Original_Id_categoria);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ChequeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ChequeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Cheque";
            tableMapping.ColumnMappings.Add("Id_cheque", "Id_cheque");
            tableMapping.ColumnMappings.Add("Num_cheque", "Num_cheque");
            tableMapping.ColumnMappings.Add("Cod_banco", "Cod_banco");
            tableMapping.ColumnMappings.Add("Cod_cliente", "Cod_cliente");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Cheque] WHERE (([Id_cheque] = @Original_Id_cheque) AND ([Num_c" +
                "heque] = @Original_Num_cheque) AND ([Cod_banco] = @Original_Cod_banco) AND ([Cod" +
                "_cliente] = @Original_Cod_cliente) AND ([Fecha] = @Original_Fecha))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Cheque] ([Num_cheque], [Cod_banco], [Cod_cliente], [Fecha]) VA" +
                "LUES (@Num_cheque, @Cod_banco, @Cod_cliente, @Fecha);\r\nSELECT Id_cheque, Num_che" +
                "que, Cod_banco, Cod_cliente, Fecha FROM Cheque WHERE (Id_cheque = SCOPE_IDENTITY" +
                "())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cheque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Cheque] SET [Num_cheque] = @Num_cheque, [Cod_banco] = @Cod_banco, [Cod_cliente] = @Cod_cliente, [Fecha] = @Fecha WHERE (([Id_cheque] = @Original_Id_cheque) AND ([Num_cheque] = @Original_Num_cheque) AND ([Cod_banco] = @Original_Cod_banco) AND ([Cod_cliente] = @Original_Cod_cliente) AND ([Fecha] = @Original_Fecha));
SELECT Id_cheque, Num_cheque, Cod_banco, Cod_cliente, Fecha FROM Cheque WHERE (Id_cheque = @Id_cheque)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cheque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_banco", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_banco", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_banco", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_cheque", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cheque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_cheque, Num_cheque, Cod_banco, Cod_cliente, Fecha FROM dbo.Cheque";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.ChequeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.ChequeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.ChequeDataTable dataTable = new GD1C2015DataSet.ChequeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.ChequeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Cheque");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_cheque, int Original_Num_cheque, int Original_Cod_banco, int Original_Cod_cliente, System.DateTime Original_Fecha) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_cheque));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Num_cheque));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_banco));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Cod_cliente));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Fecha));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Num_cheque, int Cod_banco, int Cod_cliente, System.DateTime Fecha) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Num_cheque));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_banco));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_cliente));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fecha));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Num_cheque, int Cod_banco, int Cod_cliente, System.DateTime Fecha, int Original_Id_cheque, int Original_Num_cheque, int Original_Cod_banco, int Original_Cod_cliente, System.DateTime Original_Fecha, int Id_cheque) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Num_cheque));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_banco));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_cliente));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Id_cheque));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Num_cheque));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Cod_banco));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Cod_cliente));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Id_cheque));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Num_cheque, int Cod_banco, int Cod_cliente, System.DateTime Fecha, int Original_Id_cheque, int Original_Num_cheque, int Original_Cod_banco, int Original_Cod_cliente, System.DateTime Original_Fecha) {
            return this.Update(Num_cheque, Cod_banco, Cod_cliente, Fecha, Original_Id_cheque, Original_Num_cheque, Original_Cod_banco, Original_Cod_cliente, Original_Fecha, Original_Id_cheque);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClienteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ClienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Cliente";
            tableMapping.ColumnMappings.Add("Id_cliente", "Id_cliente");
            tableMapping.ColumnMappings.Add("Cod_usuario", "Cod_usuario");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("Tipo_documento", "Tipo_documento");
            tableMapping.ColumnMappings.Add("Numero_documento", "Numero_documento");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("Cod_pais", "Cod_pais");
            tableMapping.ColumnMappings.Add("Localidad", "Localidad");
            tableMapping.ColumnMappings.Add("Calle", "Calle");
            tableMapping.ColumnMappings.Add("Numero", "Numero");
            tableMapping.ColumnMappings.Add("Piso", "Piso");
            tableMapping.ColumnMappings.Add("Depto", "Depto");
            tableMapping.ColumnMappings.Add("Fecha_nacimiento", "Fecha_nacimiento");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Cliente] WHERE (([Id_cliente] = @Original_Id_cliente) AND ([Cod_usuario] = @Original_Cod_usuario) AND ([Nombre] = @Original_Nombre) AND ([Apellido] = @Original_Apellido) AND ([Tipo_documento] = @Original_Tipo_documento) AND ([Numero_documento] = @Original_Numero_documento) AND ([Mail] = @Original_Mail) AND ([Cod_pais] = @Original_Cod_pais) AND ([Localidad] = @Original_Localidad) AND ([Calle] = @Original_Calle) AND ([Numero] = @Original_Numero) AND ((@IsNull_Piso = 1 AND [Piso] IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Depto = 1 AND [Depto] IS NULL) OR ([Depto] = @Original_Depto)) AND ([Fecha_nacimiento] = @Original_Fecha_nacimiento))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Apellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numero_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Localidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Calle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numero", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_nacimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_nacimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Cliente] ([Cod_usuario], [Nombre], [Apellido], [Tipo_documento], [Numero_documento], [Mail], [Cod_pais], [Localidad], [Calle], [Numero], [Piso], [Depto], [Fecha_nacimiento]) VALUES (@Cod_usuario, @Nombre, @Apellido, @Tipo_documento, @Numero_documento, @Mail, @Cod_pais, @Localidad, @Calle, @Numero, @Piso, @Depto, @Fecha_nacimiento);
SELECT Id_cliente, Cod_usuario, Nombre, Apellido, Tipo_documento, Numero_documento, Mail, Cod_pais, Localidad, Calle, Numero, Piso, Depto, Fecha_nacimiento FROM Cliente WHERE (Id_cliente = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Localidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Calle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_nacimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_nacimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Cliente] SET [Cod_usuario] = @Cod_usuario, [Nombre] = @Nombre, [Apellido] = @Apellido, [Tipo_documento] = @Tipo_documento, [Numero_documento] = @Numero_documento, [Mail] = @Mail, [Cod_pais] = @Cod_pais, [Localidad] = @Localidad, [Calle] = @Calle, [Numero] = @Numero, [Piso] = @Piso, [Depto] = @Depto, [Fecha_nacimiento] = @Fecha_nacimiento WHERE (([Id_cliente] = @Original_Id_cliente) AND ([Cod_usuario] = @Original_Cod_usuario) AND ([Nombre] = @Original_Nombre) AND ([Apellido] = @Original_Apellido) AND ([Tipo_documento] = @Original_Tipo_documento) AND ([Numero_documento] = @Original_Numero_documento) AND ([Mail] = @Original_Mail) AND ([Cod_pais] = @Original_Cod_pais) AND ([Localidad] = @Original_Localidad) AND ([Calle] = @Original_Calle) AND ([Numero] = @Original_Numero) AND ((@IsNull_Piso = 1 AND [Piso] IS NULL) OR ([Piso] = @Original_Piso)) AND ((@IsNull_Depto = 1 AND [Depto] IS NULL) OR ([Depto] = @Original_Depto)) AND ([Fecha_nacimiento] = @Original_Fecha_nacimiento));
SELECT Id_cliente, Cod_usuario, Nombre, Apellido, Tipo_documento, Numero_documento, Mail, Cod_pais, Localidad, Calle, Numero, Piso, Depto, Fecha_nacimiento FROM Cliente WHERE (Id_cliente = @Id_cliente)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_documento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Localidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Calle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Numero", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Piso", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Depto", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_nacimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_nacimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Apellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numero_documento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero_documento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Localidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Calle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Calle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Numero", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Numero", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Piso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Piso", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Piso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Depto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Depto", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Depto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_nacimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_nacimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_cliente", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_cliente, Cod_usuario, Nombre, Apellido, Tipo_documento, Numero_document" +
                "o, Mail, Cod_pais, Localidad, Calle, Numero, Piso, Depto, Fecha_nacimiento FROM " +
                "dbo.Cliente";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.ClienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.ClienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.ClienteDataTable dataTable = new GD1C2015DataSet.ClienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.ClienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Cliente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_cliente, int Original_Cod_usuario, string Original_Nombre, string Original_Apellido, int Original_Tipo_documento, int Original_Numero_documento, string Original_Mail, int Original_Cod_pais, int Original_Localidad, string Original_Calle, int Original_Numero, global::System.Nullable<short> Original_Piso, string Original_Depto, System.DateTime Original_Fecha_nacimiento) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_cliente));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_usuario));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Nombre));
            }
            if ((Original_Apellido == null)) {
                throw new global::System.ArgumentNullException("Original_Apellido");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Apellido));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Tipo_documento));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Numero_documento));
            if ((Original_Mail == null)) {
                throw new global::System.ArgumentNullException("Original_Mail");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Mail));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Cod_pais));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Localidad));
            if ((Original_Calle == null)) {
                throw new global::System.ArgumentNullException("Original_Calle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Calle));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_Numero));
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_Piso.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Depto));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_Fecha_nacimiento));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_usuario, string Nombre, string Apellido, int Tipo_documento, int Numero_documento, string Mail, int Cod_pais, int Localidad, string Calle, int Numero, global::System.Nullable<short> Piso, string Depto, System.DateTime Fecha_nacimiento) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_usuario));
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nombre));
            }
            if ((Apellido == null)) {
                throw new global::System.ArgumentNullException("Apellido");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Apellido));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Tipo_documento));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Numero_documento));
            if ((Mail == null)) {
                throw new global::System.ArgumentNullException("Mail");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Mail));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Cod_pais));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(Localidad));
            if ((Calle == null)) {
                throw new global::System.ArgumentNullException("Calle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Calle));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(Numero));
            if ((Piso.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((short)(Piso.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Depto));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(Fecha_nacimiento));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Cod_usuario, 
                    string Nombre, 
                    string Apellido, 
                    int Tipo_documento, 
                    int Numero_documento, 
                    string Mail, 
                    int Cod_pais, 
                    int Localidad, 
                    string Calle, 
                    int Numero, 
                    global::System.Nullable<short> Piso, 
                    string Depto, 
                    System.DateTime Fecha_nacimiento, 
                    int Original_Id_cliente, 
                    int Original_Cod_usuario, 
                    string Original_Nombre, 
                    string Original_Apellido, 
                    int Original_Tipo_documento, 
                    int Original_Numero_documento, 
                    string Original_Mail, 
                    int Original_Cod_pais, 
                    int Original_Localidad, 
                    string Original_Calle, 
                    int Original_Numero, 
                    global::System.Nullable<short> Original_Piso, 
                    string Original_Depto, 
                    System.DateTime Original_Fecha_nacimiento, 
                    int Id_cliente) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Cod_usuario));
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nombre));
            }
            if ((Apellido == null)) {
                throw new global::System.ArgumentNullException("Apellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Apellido));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Tipo_documento));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Numero_documento));
            if ((Mail == null)) {
                throw new global::System.ArgumentNullException("Mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Mail));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Cod_pais));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Localidad));
            if ((Calle == null)) {
                throw new global::System.ArgumentNullException("Calle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Calle));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Numero));
            if ((Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Depto));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Fecha_nacimiento));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Id_cliente));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Cod_usuario));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Nombre));
            }
            if ((Original_Apellido == null)) {
                throw new global::System.ArgumentNullException("Original_Apellido");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Apellido));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Tipo_documento));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_Numero_documento));
            if ((Original_Mail == null)) {
                throw new global::System.ArgumentNullException("Original_Mail");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Mail));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Cod_pais));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Localidad));
            if ((Original_Calle == null)) {
                throw new global::System.ArgumentNullException("Original_Calle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Calle));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_Numero));
            if ((Original_Piso.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_Piso.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Depto == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Depto));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_Fecha_nacimiento));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Id_cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Cod_usuario, 
                    string Nombre, 
                    string Apellido, 
                    int Tipo_documento, 
                    int Numero_documento, 
                    string Mail, 
                    int Cod_pais, 
                    int Localidad, 
                    string Calle, 
                    int Numero, 
                    global::System.Nullable<short> Piso, 
                    string Depto, 
                    System.DateTime Fecha_nacimiento, 
                    int Original_Id_cliente, 
                    int Original_Cod_usuario, 
                    string Original_Nombre, 
                    string Original_Apellido, 
                    int Original_Tipo_documento, 
                    int Original_Numero_documento, 
                    string Original_Mail, 
                    int Original_Cod_pais, 
                    int Original_Localidad, 
                    string Original_Calle, 
                    int Original_Numero, 
                    global::System.Nullable<short> Original_Piso, 
                    string Original_Depto, 
                    System.DateTime Original_Fecha_nacimiento) {
            return this.Update(Cod_usuario, Nombre, Apellido, Tipo_documento, Numero_documento, Mail, Cod_pais, Localidad, Calle, Numero, Piso, Depto, Fecha_nacimiento, Original_Id_cliente, Original_Cod_usuario, Original_Nombre, Original_Apellido, Original_Tipo_documento, Original_Numero_documento, Original_Mail, Original_Cod_pais, Original_Localidad, Original_Calle, Original_Numero, Original_Piso, Original_Depto, Original_Fecha_nacimiento, Original_Id_cliente);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CuentaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CuentaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Cuenta";
            tableMapping.ColumnMappings.Add("Num_cuenta", "Num_cuenta");
            tableMapping.ColumnMappings.Add("Fecha_apertura", "Fecha_apertura");
            tableMapping.ColumnMappings.Add("Codigo_pais", "Codigo_pais");
            tableMapping.ColumnMappings.Add("Codigo_moneda", "Codigo_moneda");
            tableMapping.ColumnMappings.Add("Codigo_categoria", "Codigo_categoria");
            tableMapping.ColumnMappings.Add("Codigo_cliente", "Codigo_cliente");
            tableMapping.ColumnMappings.Add("Codigo_estado", "Codigo_estado");
            tableMapping.ColumnMappings.Add("Saldo", "Saldo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Cuenta] WHERE (([Num_cuenta] = @Original_Num_cuenta) AND ([Fecha_apertura] = @Original_Fecha_apertura) AND ([Codigo_pais] = @Original_Codigo_pais) AND ([Codigo_moneda] = @Original_Codigo_moneda) AND ([Codigo_categoria] = @Original_Codigo_categoria) AND ([Codigo_cliente] = @Original_Codigo_cliente) AND ([Codigo_estado] = @Original_Codigo_estado) AND ([Saldo] = @Original_Saldo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_apertura", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_apertura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Saldo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Saldo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Cuenta] ([Num_cuenta], [Fecha_apertura], [Codigo_pais], [Codigo_moneda], [Codigo_categoria], [Codigo_cliente], [Codigo_estado], [Saldo]) VALUES (@Num_cuenta, @Fecha_apertura, @Codigo_pais, @Codigo_moneda, @Codigo_categoria, @Codigo_cliente, @Codigo_estado, @Saldo);
SELECT Num_cuenta, Fecha_apertura, Codigo_pais, Codigo_moneda, Codigo_categoria, Codigo_cliente, Codigo_estado, Saldo FROM Cuenta WHERE (Num_cuenta = @Num_cuenta)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_apertura", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_apertura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_categoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Saldo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Saldo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Cuenta] SET [Num_cuenta] = @Num_cuenta, [Fecha_apertura] = @Fecha_apertura, [Codigo_pais] = @Codigo_pais, [Codigo_moneda] = @Codigo_moneda, [Codigo_categoria] = @Codigo_categoria, [Codigo_cliente] = @Codigo_cliente, [Codigo_estado] = @Codigo_estado, [Saldo] = @Saldo WHERE (([Num_cuenta] = @Original_Num_cuenta) AND ([Fecha_apertura] = @Original_Fecha_apertura) AND ([Codigo_pais] = @Original_Codigo_pais) AND ([Codigo_moneda] = @Original_Codigo_moneda) AND ([Codigo_categoria] = @Original_Codigo_categoria) AND ([Codigo_cliente] = @Original_Codigo_cliente) AND ([Codigo_estado] = @Original_Codigo_estado) AND ([Saldo] = @Original_Saldo));
SELECT Num_cuenta, Fecha_apertura, Codigo_pais, Codigo_moneda, Codigo_categoria, Codigo_cliente, Codigo_estado, Saldo FROM Cuenta WHERE (Num_cuenta = @Num_cuenta)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_apertura", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_apertura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_categoria", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Saldo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Saldo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_apertura", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_apertura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_categoria", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_categoria", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Saldo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Saldo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Num_cuenta, Fecha_apertura, Codigo_pais, Codigo_moneda, Codigo_categoria, " +
                "Codigo_cliente, Codigo_estado, Saldo FROM dbo.Cuenta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.CuentaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.CuentaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.CuentaDataTable dataTable = new GD1C2015DataSet.CuentaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.CuentaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Cuenta");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Num_cuenta, System.DateTime Original_Fecha_apertura, int Original_Codigo_pais, int Original_Codigo_moneda, int Original_Codigo_categoria, int Original_Codigo_cliente, int Original_Codigo_estado, double Original_Saldo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Num_cuenta));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Fecha_apertura));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Codigo_pais));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Codigo_moneda));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Codigo_categoria));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Codigo_cliente));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Codigo_estado));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_Saldo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Num_cuenta, System.DateTime Fecha_apertura, int Codigo_pais, int Codigo_moneda, int Codigo_categoria, int Codigo_cliente, int Codigo_estado, double Saldo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Num_cuenta));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Fecha_apertura));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Codigo_pais));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Codigo_moneda));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Codigo_categoria));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Codigo_cliente));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Codigo_estado));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Saldo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Num_cuenta, 
                    System.DateTime Fecha_apertura, 
                    int Codigo_pais, 
                    int Codigo_moneda, 
                    int Codigo_categoria, 
                    int Codigo_cliente, 
                    int Codigo_estado, 
                    double Saldo, 
                    int Original_Num_cuenta, 
                    System.DateTime Original_Fecha_apertura, 
                    int Original_Codigo_pais, 
                    int Original_Codigo_moneda, 
                    int Original_Codigo_categoria, 
                    int Original_Codigo_cliente, 
                    int Original_Codigo_estado, 
                    double Original_Saldo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Num_cuenta));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Fecha_apertura));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Codigo_pais));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Codigo_moneda));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Codigo_categoria));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Codigo_cliente));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Codigo_estado));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Saldo));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Num_cuenta));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Fecha_apertura));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Codigo_pais));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Codigo_moneda));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Codigo_categoria));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Codigo_cliente));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Codigo_estado));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_Saldo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Fecha_apertura, int Codigo_pais, int Codigo_moneda, int Codigo_categoria, int Codigo_cliente, int Codigo_estado, double Saldo, int Original_Num_cuenta, System.DateTime Original_Fecha_apertura, int Original_Codigo_pais, int Original_Codigo_moneda, int Original_Codigo_categoria, int Original_Codigo_cliente, int Original_Codigo_estado, double Original_Saldo) {
            return this.Update(Original_Num_cuenta, Fecha_apertura, Codigo_pais, Codigo_moneda, Codigo_categoria, Codigo_cliente, Codigo_estado, Saldo, Original_Num_cuenta, Original_Fecha_apertura, Original_Codigo_pais, Original_Codigo_moneda, Original_Codigo_categoria, Original_Codigo_cliente, Original_Codigo_estado, Original_Saldo);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DepositosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DepositosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Depositos";
            tableMapping.ColumnMappings.Add("Id_deposito", "Id_deposito");
            tableMapping.ColumnMappings.Add("Cod_cuenta", "Cod_cuenta");
            tableMapping.ColumnMappings.Add("Cod_moneda", "Cod_moneda");
            tableMapping.ColumnMappings.Add("Importe", "Importe");
            tableMapping.ColumnMappings.Add("Cod_TC", "Cod_TC");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Depositos] WHERE (([Id_deposito] = @Original_Id_deposito) AND " +
                "([Cod_cuenta] = @Original_Cod_cuenta) AND ([Cod_moneda] = @Original_Cod_moneda) " +
                "AND ([Importe] = @Original_Importe) AND ([Cod_TC] = @Original_Cod_TC))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_deposito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_deposito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_TC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_TC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Depositos] ([Id_deposito], [Cod_cuenta], [Cod_moneda], [Importe], [Cod_TC]) VALUES (@Id_deposito, @Cod_cuenta, @Cod_moneda, @Importe, @Cod_TC);
SELECT Id_deposito, Cod_cuenta, Cod_moneda, Importe, Cod_TC FROM Depositos WHERE (Id_deposito = @Id_deposito)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_deposito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_deposito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_TC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_TC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Depositos] SET [Id_deposito] = @Id_deposito, [Cod_cuenta] = @Cod_cuenta, [Cod_moneda] = @Cod_moneda, [Importe] = @Importe, [Cod_TC] = @Cod_TC WHERE (([Id_deposito] = @Original_Id_deposito) AND ([Cod_cuenta] = @Original_Cod_cuenta) AND ([Cod_moneda] = @Original_Cod_moneda) AND ([Importe] = @Original_Importe) AND ([Cod_TC] = @Original_Cod_TC));
SELECT Id_deposito, Cod_cuenta, Cod_moneda, Importe, Cod_TC FROM Depositos WHERE (Id_deposito = @Id_deposito)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_deposito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_deposito", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_TC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_TC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_deposito", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_deposito", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_TC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_TC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_deposito, Cod_cuenta, Cod_moneda, Importe, Cod_TC FROM dbo.Depositos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.DepositosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.DepositosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.DepositosDataTable dataTable = new GD1C2015DataSet.DepositosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.DepositosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Depositos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_deposito, int Original_Cod_cuenta, int Original_Cod_moneda, double Original_Importe, int Original_Cod_TC) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_deposito));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_moneda));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Importe));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Cod_TC));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_deposito, int Cod_cuenta, int Cod_moneda, double Importe, int Cod_TC) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_deposito));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_moneda));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Importe));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Cod_TC));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_deposito, int Cod_cuenta, int Cod_moneda, double Importe, int Cod_TC, int Original_Id_deposito, int Original_Cod_cuenta, int Original_Cod_moneda, double Original_Importe, int Original_Cod_TC) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_deposito));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_moneda));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Importe));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Cod_TC));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id_deposito));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Cod_moneda));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_Importe));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_Cod_TC));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_cuenta, int Cod_moneda, double Importe, int Cod_TC, int Original_Id_deposito, int Original_Cod_cuenta, int Original_Cod_moneda, double Original_Importe, int Original_Cod_TC) {
            return this.Update(Original_Id_deposito, Cod_cuenta, Cod_moneda, Importe, Cod_TC, Original_Id_deposito, Original_Cod_cuenta, Original_Cod_moneda, Original_Importe, Original_Cod_TC);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Estado_cuentaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Estado_cuentaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Estado_cuenta";
            tableMapping.ColumnMappings.Add("Id_estado", "Id_estado");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Estado_cuenta] WHERE (([Id_estado] = @Original_Id_estado) AND " +
                "([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Estado_cuenta] ([Descripcion]) VALUES (@Descripcion);\r\nSELECT " +
                "Id_estado, Descripcion FROM Estado_cuenta WHERE (Id_estado = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Estado_cuenta] SET [Descripcion] = @Descripcion WHERE (([Id_estado]" +
                " = @Original_Id_estado) AND ([Descripcion] = @Original_Descripcion));\r\nSELECT Id" +
                "_estado, Descripcion FROM Estado_cuenta WHERE (Id_estado = @Id_estado)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_estado", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_estado, Descripcion FROM dbo.Estado_cuenta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Estado_cuentaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Estado_cuentaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Estado_cuentaDataTable dataTable = new GD1C2015DataSet.Estado_cuentaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Estado_cuentaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Estado_cuenta");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_estado, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion, int Id_estado) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_estado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion) {
            return this.Update(Descripcion, Original_Id_estado, Original_Descripcion, Original_Id_estado);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Estado_rolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Estado_rolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Estado_rol";
            tableMapping.ColumnMappings.Add("Id_estado", "Id_estado");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Estado_rol] WHERE (([Id_estado] = @Original_Id_estado) AND ([D" +
                "escripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Estado_rol] ([Descripcion]) VALUES (@Descripcion);\r\nSELECT Id_" +
                "estado, Descripcion FROM Estado_rol WHERE (Id_estado = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Estado_rol] SET [Descripcion] = @Descripcion WHERE (([Id_estado] = " +
                "@Original_Id_estado) AND ([Descripcion] = @Original_Descripcion));\r\nSELECT Id_es" +
                "tado, Descripcion FROM Estado_rol WHERE (Id_estado = @Id_estado)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_estado", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_estado, Descripcion FROM dbo.Estado_rol";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Estado_rolDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Estado_rolDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Estado_rolDataTable dataTable = new GD1C2015DataSet.Estado_rolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Estado_rolDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Estado_rol");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_estado, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion, int Id_estado) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_estado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion) {
            return this.Update(Descripcion, Original_Id_estado, Original_Descripcion, Original_Id_estado);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Estado_transaccionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Estado_transaccionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Estado_transaccion";
            tableMapping.ColumnMappings.Add("Id_estado", "Id_estado");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Estado_transaccion] WHERE (([Id_estado] = @Original_Id_estado)" +
                " AND ([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Estado_transaccion] ([Descripcion]) VALUES (@Descripcion);\r\nSE" +
                "LECT Id_estado, Descripcion FROM Estado_transaccion WHERE (Id_estado = SCOPE_IDE" +
                "NTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Estado_transaccion] SET [Descripcion] = @Descripcion WHERE (([Id_es" +
                "tado] = @Original_Id_estado) AND ([Descripcion] = @Original_Descripcion));\r\nSELE" +
                "CT Id_estado, Descripcion FROM Estado_transaccion WHERE (Id_estado = @Id_estado)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_estado", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_estado, Descripcion FROM dbo.Estado_transaccion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Estado_transaccionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Estado_transaccionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Estado_transaccionDataTable dataTable = new GD1C2015DataSet.Estado_transaccionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Estado_transaccionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Estado_transaccion");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_estado, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion, int Id_estado) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_estado));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_estado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_estado, string Original_Descripcion) {
            return this.Update(Descripcion, Original_Id_estado, Original_Descripcion, Original_Id_estado);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FuncionalidadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FuncionalidadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Funcionalidad";
            tableMapping.ColumnMappings.Add("Id_funcionalidad", "Id_funcionalidad");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Funcionalidad] WHERE (([Id_funcionalidad] = @Original_Id_funci" +
                "onalidad) AND ([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_funcionalidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_funcionalidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Funcionalidad] ([Id_funcionalidad], [Descripcion]) VALUES (@Id" +
                "_funcionalidad, @Descripcion);\r\nSELECT Id_funcionalidad, Descripcion FROM Funcio" +
                "nalidad WHERE (Id_funcionalidad = @Id_funcionalidad)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_funcionalidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_funcionalidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Funcionalidad] SET [Id_funcionalidad] = @Id_funcionalidad, [Descripcion] = @Descripcion WHERE (([Id_funcionalidad] = @Original_Id_funcionalidad) AND ([Descripcion] = @Original_Descripcion));
SELECT Id_funcionalidad, Descripcion FROM Funcionalidad WHERE (Id_funcionalidad = @Id_funcionalidad)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_funcionalidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_funcionalidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_funcionalidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_funcionalidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_funcionalidad, Descripcion FROM dbo.Funcionalidad";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.FuncionalidadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.FuncionalidadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.FuncionalidadDataTable dataTable = new GD1C2015DataSet.FuncionalidadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.FuncionalidadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Funcionalidad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_funcionalidad, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_funcionalidad));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_funcionalidad, string Descripcion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_funcionalidad));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_funcionalidad, string Descripcion, int Original_Id_funcionalidad, string Original_Descripcion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_funcionalidad));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_funcionalidad));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_funcionalidad, string Original_Descripcion) {
            return this.Update(Original_Id_funcionalidad, Descripcion, Original_Id_funcionalidad, Original_Descripcion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Intentos_fallidosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Intentos_fallidosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Intentos_fallidos";
            tableMapping.ColumnMappings.Add("Id_fallido", "Id_fallido");
            tableMapping.ColumnMappings.Add("Cod_login", "Cod_login");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Intentos_fallidos] WHERE (([Id_fallido] = @Original_Id_fallido" +
                ") AND ([Cod_login] = @Original_Cod_login))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_fallido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_fallido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Intentos_fallidos] ([Cod_login]) VALUES (@Cod_login);\r\nSELECT " +
                "Id_fallido, Cod_login FROM Intentos_fallidos WHERE (Id_fallido = SCOPE_IDENTITY(" +
                "))";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Intentos_fallidos] SET [Cod_login] = @Cod_login WHERE (([Id_fallido" +
                "] = @Original_Id_fallido) AND ([Cod_login] = @Original_Cod_login));\r\nSELECT Id_f" +
                "allido, Cod_login FROM Intentos_fallidos WHERE (Id_fallido = @Id_fallido)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_fallido", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_fallido", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_fallido", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_fallido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_fallido, Cod_login FROM dbo.Intentos_fallidos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Intentos_fallidosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Intentos_fallidosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Intentos_fallidosDataTable dataTable = new GD1C2015DataSet.Intentos_fallidosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Intentos_fallidosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Intentos_fallidos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_fallido, int Original_Cod_login) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_fallido));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_login));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_login) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_login));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_login, int Original_Id_fallido, int Original_Cod_login, int Id_fallido) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Cod_login));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_fallido));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Cod_login));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_fallido));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_login, int Original_Id_fallido, int Original_Cod_login) {
            return this.Update(Cod_login, Original_Id_fallido, Original_Cod_login, Original_Id_fallido);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Intentos_loginTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Intentos_loginTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Intentos_login";
            tableMapping.ColumnMappings.Add("Id_login", "Id_login");
            tableMapping.ColumnMappings.Add("Codigo_usuario", "Codigo_usuario");
            tableMapping.ColumnMappings.Add("Es_correcto", "Es_correcto");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Intentos_login] WHERE (([Id_login] = @Original_Id_login) AND (" +
                "[Codigo_usuario] = @Original_Codigo_usuario) AND ([Es_correcto] = @Original_Es_c" +
                "orrecto))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Es_correcto", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Es_correcto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Intentos_login] ([Codigo_usuario], [Es_correcto]) VALUES (@Cod" +
                "igo_usuario, @Es_correcto);\r\nSELECT Id_login, Codigo_usuario, Es_correcto FROM I" +
                "ntentos_login WHERE (Id_login = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Es_correcto", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Es_correcto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Intentos_login] SET [Codigo_usuario] = @Codigo_usuario, [Es_correcto] = @Es_correcto WHERE (([Id_login] = @Original_Id_login) AND ([Codigo_usuario] = @Original_Codigo_usuario) AND ([Es_correcto] = @Original_Es_correcto));
SELECT Id_login, Codigo_usuario, Es_correcto FROM Intentos_login WHERE (Id_login = @Id_login)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Es_correcto", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Es_correcto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_login", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_login", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Es_correcto", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Es_correcto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_login", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_login", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_login, Codigo_usuario, Es_correcto FROM dbo.Intentos_login";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Intentos_loginDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Intentos_loginDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Intentos_loginDataTable dataTable = new GD1C2015DataSet.Intentos_loginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Intentos_loginDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Intentos_login");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_login, int Original_Codigo_usuario, bool Original_Es_correcto) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_login));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Codigo_usuario));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_Es_correcto));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Codigo_usuario, bool Es_correcto) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Codigo_usuario));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(Es_correcto));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Codigo_usuario, bool Es_correcto, int Original_Id_login, int Original_Codigo_usuario, bool Original_Es_correcto, int Id_login) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Codigo_usuario));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(Es_correcto));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_login));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Codigo_usuario));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_Es_correcto));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Id_login));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Codigo_usuario, bool Es_correcto, int Original_Id_login, int Original_Codigo_usuario, bool Original_Es_correcto) {
            return this.Update(Codigo_usuario, Es_correcto, Original_Id_login, Original_Codigo_usuario, Original_Es_correcto, Original_Id_login);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LocalidadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LocalidadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Localidad";
            tableMapping.ColumnMappings.Add("Id_localidad", "Id_localidad");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Localidad] WHERE (([Id_localidad] = @Original_Id_localidad) AN" +
                "D ([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_localidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Localidad] ([Descripcion]) VALUES (@Descripcion);\r\nSELECT Id_l" +
                "ocalidad, Descripcion FROM Localidad WHERE (Id_localidad = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Localidad] SET [Descripcion] = @Descripcion WHERE (([Id_localidad] " +
                "= @Original_Id_localidad) AND ([Descripcion] = @Original_Descripcion));\r\nSELECT " +
                "Id_localidad, Descripcion FROM Localidad WHERE (Id_localidad = @Id_localidad)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_localidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_localidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_localidad", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_localidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_localidad, Descripcion FROM dbo.Localidad";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.LocalidadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.LocalidadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.LocalidadDataTable dataTable = new GD1C2015DataSet.LocalidadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.LocalidadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Localidad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_localidad, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_localidad));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_localidad, string Original_Descripcion, int Id_localidad) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_localidad));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_localidad));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_localidad, string Original_Descripcion) {
            return this.Update(Descripcion, Original_Id_localidad, Original_Descripcion, Original_Id_localidad);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MaestraTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MaestraTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Maestra";
            tableMapping.ColumnMappings.Add("Cli_Pais_Codigo", "Cli_Pais_Codigo");
            tableMapping.ColumnMappings.Add("Cli_Pais_Desc", "Cli_Pais_Desc");
            tableMapping.ColumnMappings.Add("Cli_Nombre", "Cli_Nombre");
            tableMapping.ColumnMappings.Add("Cli_Apellido", "Cli_Apellido");
            tableMapping.ColumnMappings.Add("Cli_Tipo_Doc_Cod", "Cli_Tipo_Doc_Cod");
            tableMapping.ColumnMappings.Add("Cli_Nro_Doc", "Cli_Nro_Doc");
            tableMapping.ColumnMappings.Add("Cli_Tipo_Doc_Desc", "Cli_Tipo_Doc_Desc");
            tableMapping.ColumnMappings.Add("Cli_Dom_Calle", "Cli_Dom_Calle");
            tableMapping.ColumnMappings.Add("Cli_Dom_Nro", "Cli_Dom_Nro");
            tableMapping.ColumnMappings.Add("Cli_Dom_Piso", "Cli_Dom_Piso");
            tableMapping.ColumnMappings.Add("Cli_Dom_Depto", "Cli_Dom_Depto");
            tableMapping.ColumnMappings.Add("Cli_Fecha_Nac", "Cli_Fecha_Nac");
            tableMapping.ColumnMappings.Add("Cli_Mail", "Cli_Mail");
            tableMapping.ColumnMappings.Add("Cuenta_Numero", "Cuenta_Numero");
            tableMapping.ColumnMappings.Add("Cuenta_Fecha_Creacion", "Cuenta_Fecha_Creacion");
            tableMapping.ColumnMappings.Add("Cuenta_Estado", "Cuenta_Estado");
            tableMapping.ColumnMappings.Add("Cuenta_Pais_Codigo", "Cuenta_Pais_Codigo");
            tableMapping.ColumnMappings.Add("Cuenta_Pais_Desc", "Cuenta_Pais_Desc");
            tableMapping.ColumnMappings.Add("Cuenta_Fecha_Cierre", "Cuenta_Fecha_Cierre");
            tableMapping.ColumnMappings.Add("Deposito_Codigo", "Deposito_Codigo");
            tableMapping.ColumnMappings.Add("Deposito_Fecha", "Deposito_Fecha");
            tableMapping.ColumnMappings.Add("Deposito_Importe", "Deposito_Importe");
            tableMapping.ColumnMappings.Add("Tarjeta_Numero", "Tarjeta_Numero");
            tableMapping.ColumnMappings.Add("Tarjeta_Fecha_Emision", "Tarjeta_Fecha_Emision");
            tableMapping.ColumnMappings.Add("Tarjeta_Fecha_Vencimiento", "Tarjeta_Fecha_Vencimiento");
            tableMapping.ColumnMappings.Add("Tarjeta_Codigo_Seg", "Tarjeta_Codigo_Seg");
            tableMapping.ColumnMappings.Add("Tarjeta_Emisor_Descripcion", "Tarjeta_Emisor_Descripcion");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Numero", "Cuenta_Dest_Numero");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Fecha_Creacion", "Cuenta_Dest_Fecha_Creacion");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Estado", "Cuenta_Dest_Estado");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Pais_Codigo", "Cuenta_Dest_Pais_Codigo");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Pais_Desc", "Cuenta_Dest_Pais_Desc");
            tableMapping.ColumnMappings.Add("Cuenta_Dest_Fecha_Cierre", "Cuenta_Dest_Fecha_Cierre");
            tableMapping.ColumnMappings.Add("Transf_Fecha", "Transf_Fecha");
            tableMapping.ColumnMappings.Add("Trans_Importe", "Trans_Importe");
            tableMapping.ColumnMappings.Add("Trans_Costo_Trans", "Trans_Costo_Trans");
            tableMapping.ColumnMappings.Add("Retiro_Fecha", "Retiro_Fecha");
            tableMapping.ColumnMappings.Add("Retiro_Codigo", "Retiro_Codigo");
            tableMapping.ColumnMappings.Add("Retiro_Importe", "Retiro_Importe");
            tableMapping.ColumnMappings.Add("Cheque_Numero", "Cheque_Numero");
            tableMapping.ColumnMappings.Add("Cheque_Fecha", "Cheque_Fecha");
            tableMapping.ColumnMappings.Add("Cheque_Importe", "Cheque_Importe");
            tableMapping.ColumnMappings.Add("Banco_Cogido", "Banco_Cogido");
            tableMapping.ColumnMappings.Add("Banco_Nombre", "Banco_Nombre");
            tableMapping.ColumnMappings.Add("Banco_Direccion", "Banco_Direccion");
            tableMapping.ColumnMappings.Add("Item_Factura_Descr", "Item_Factura_Descr");
            tableMapping.ColumnMappings.Add("Item_Factura_Importe", "Item_Factura_Importe");
            tableMapping.ColumnMappings.Add("Factura_Numero", "Factura_Numero");
            tableMapping.ColumnMappings.Add("Factura_Fecha", "Factura_Fecha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [gd_esquema].[Maestra] ([Cli_Pais_Codigo], [Cli_Pais_Desc], [Cli_Nomb" +
                "re], [Cli_Apellido], [Cli_Tipo_Doc_Cod], [Cli_Nro_Doc], [Cli_Tipo_Doc_Desc], [Cl" +
                "i_Dom_Calle], [Cli_Dom_Nro], [Cli_Dom_Piso], [Cli_Dom_Depto], [Cli_Fecha_Nac], [" +
                "Cli_Mail], [Cuenta_Numero], [Cuenta_Fecha_Creacion], [Cuenta_Estado], [Cuenta_Pa" +
                "is_Codigo], [Cuenta_Pais_Desc], [Cuenta_Fecha_Cierre], [Deposito_Codigo], [Depos" +
                "ito_Fecha], [Deposito_Importe], [Tarjeta_Numero], [Tarjeta_Fecha_Emision], [Tarj" +
                "eta_Fecha_Vencimiento], [Tarjeta_Codigo_Seg], [Tarjeta_Emisor_Descripcion], [Cue" +
                "nta_Dest_Numero], [Cuenta_Dest_Fecha_Creacion], [Cuenta_Dest_Estado], [Cuenta_De" +
                "st_Pais_Codigo], [Cuenta_Dest_Pais_Desc], [Cuenta_Dest_Fecha_Cierre], [Transf_Fe" +
                "cha], [Trans_Importe], [Trans_Costo_Trans], [Retiro_Fecha], [Retiro_Codigo], [Re" +
                "tiro_Importe], [Cheque_Numero], [Cheque_Fecha], [Cheque_Importe], [Banco_Cogido]" +
                ", [Banco_Nombre], [Banco_Direccion], [Item_Factura_Descr], [Item_Factura_Importe" +
                "], [Factura_Numero], [Factura_Fecha]) VALUES (@Cli_Pais_Codigo, @Cli_Pais_Desc, " +
                "@Cli_Nombre, @Cli_Apellido, @Cli_Tipo_Doc_Cod, @Cli_Nro_Doc, @Cli_Tipo_Doc_Desc," +
                " @Cli_Dom_Calle, @Cli_Dom_Nro, @Cli_Dom_Piso, @Cli_Dom_Depto, @Cli_Fecha_Nac, @C" +
                "li_Mail, @Cuenta_Numero, @Cuenta_Fecha_Creacion, @Cuenta_Estado, @Cuenta_Pais_Co" +
                "digo, @Cuenta_Pais_Desc, @Cuenta_Fecha_Cierre, @Deposito_Codigo, @Deposito_Fecha" +
                ", @Deposito_Importe, @Tarjeta_Numero, @Tarjeta_Fecha_Emision, @Tarjeta_Fecha_Ven" +
                "cimiento, @Tarjeta_Codigo_Seg, @Tarjeta_Emisor_Descripcion, @Cuenta_Dest_Numero," +
                " @Cuenta_Dest_Fecha_Creacion, @Cuenta_Dest_Estado, @Cuenta_Dest_Pais_Codigo, @Cu" +
                "enta_Dest_Pais_Desc, @Cuenta_Dest_Fecha_Cierre, @Transf_Fecha, @Trans_Importe, @" +
                "Trans_Costo_Trans, @Retiro_Fecha, @Retiro_Codigo, @Retiro_Importe, @Cheque_Numer" +
                "o, @Cheque_Fecha, @Cheque_Importe, @Banco_Cogido, @Banco_Nombre, @Banco_Direccio" +
                "n, @Item_Factura_Descr, @Item_Factura_Importe, @Factura_Numero, @Factura_Fecha)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Pais_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cli_Pais_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Pais_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Pais_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Apellido", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Tipo_Doc_Cod", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cli_Tipo_Doc_Cod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Nro_Doc", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cli_Nro_Doc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Tipo_Doc_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Tipo_Doc_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Dom_Calle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Dom_Calle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Dom_Nro", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cli_Dom_Nro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Dom_Piso", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cli_Dom_Piso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Dom_Depto", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Dom_Depto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Fecha_Nac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Fecha_Nac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cli_Mail", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cli_Mail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Numero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cuenta_Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Fecha_Creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Pais_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cuenta_Pais_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Pais_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Pais_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Fecha_Cierre", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Fecha_Cierre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deposito_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Deposito_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deposito_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Deposito_Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Deposito_Importe", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Deposito_Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tarjeta_Numero", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tarjeta_Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tarjeta_Fecha_Emision", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tarjeta_Fecha_Emision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tarjeta_Fecha_Vencimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tarjeta_Fecha_Vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tarjeta_Codigo_Seg", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tarjeta_Codigo_Seg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tarjeta_Emisor_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tarjeta_Emisor_Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Numero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cuenta_Dest_Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Fecha_Creacion", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Dest_Fecha_Creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Estado", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Dest_Estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Pais_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cuenta_Dest_Pais_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Pais_Desc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Dest_Pais_Desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cuenta_Dest_Fecha_Cierre", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cuenta_Dest_Fecha_Cierre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Transf_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Transf_Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trans_Importe", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Trans_Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trans_Costo_Trans", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Trans_Costo_Trans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retiro_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retiro_Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retiro_Codigo", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Retiro_Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retiro_Importe", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Retiro_Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cheque_Numero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Cheque_Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cheque_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cheque_Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cheque_Importe", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Cheque_Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Banco_Cogido", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Banco_Cogido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Banco_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Banco_Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Banco_Direccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Banco_Direccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Factura_Descr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_Factura_Descr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_Factura_Importe", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Item_Factura_Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factura_Numero", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "Factura_Numero", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Factura_Fecha", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Factura_Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Cli_Pais_Codigo, Cli_Pais_Desc, Cli_Nombre, Cli_Apellido, Cli_Tipo_Doc_Cod, Cli_Nro_Doc, Cli_Tipo_Doc_Desc, Cli_Dom_Calle, Cli_Dom_Nro, Cli_Dom_Piso, Cli_Dom_Depto, Cli_Fecha_Nac, Cli_Mail, Cuenta_Numero, Cuenta_Fecha_Creacion, Cuenta_Estado, Cuenta_Pais_Codigo, Cuenta_Pais_Desc, Cuenta_Fecha_Cierre, Deposito_Codigo, Deposito_Fecha, Deposito_Importe, Tarjeta_Numero, Tarjeta_Fecha_Emision, Tarjeta_Fecha_Vencimiento, Tarjeta_Codigo_Seg, Tarjeta_Emisor_Descripcion, Cuenta_Dest_Numero, Cuenta_Dest_Fecha_Creacion, Cuenta_Dest_Estado, Cuenta_Dest_Pais_Codigo, Cuenta_Dest_Pais_Desc, Cuenta_Dest_Fecha_Cierre, Transf_Fecha, Trans_Importe, Trans_Costo_Trans, Retiro_Fecha, Retiro_Codigo, Retiro_Importe, Cheque_Numero, Cheque_Fecha, Cheque_Importe, Banco_Cogido, Banco_Nombre, Banco_Direccion, Item_Factura_Descr, Item_Factura_Importe, Factura_Numero, Factura_Fecha FROM gd_esquema.Maestra";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.MaestraDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.MaestraDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.MaestraDataTable dataTable = new GD1C2015DataSet.MaestraDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.MaestraDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Maestra");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<decimal> Cli_Pais_Codigo, 
                    string Cli_Pais_Desc, 
                    string Cli_Nombre, 
                    string Cli_Apellido, 
                    global::System.Nullable<decimal> Cli_Tipo_Doc_Cod, 
                    global::System.Nullable<decimal> Cli_Nro_Doc, 
                    string Cli_Tipo_Doc_Desc, 
                    string Cli_Dom_Calle, 
                    global::System.Nullable<decimal> Cli_Dom_Nro, 
                    global::System.Nullable<decimal> Cli_Dom_Piso, 
                    string Cli_Dom_Depto, 
                    global::System.Nullable<global::System.DateTime> Cli_Fecha_Nac, 
                    string Cli_Mail, 
                    global::System.Nullable<decimal> Cuenta_Numero, 
                    global::System.Nullable<global::System.DateTime> Cuenta_Fecha_Creacion, 
                    string Cuenta_Estado, 
                    global::System.Nullable<decimal> Cuenta_Pais_Codigo, 
                    string Cuenta_Pais_Desc, 
                    global::System.Nullable<global::System.DateTime> Cuenta_Fecha_Cierre, 
                    global::System.Nullable<decimal> Deposito_Codigo, 
                    global::System.Nullable<global::System.DateTime> Deposito_Fecha, 
                    global::System.Nullable<decimal> Deposito_Importe, 
                    string Tarjeta_Numero, 
                    global::System.Nullable<global::System.DateTime> Tarjeta_Fecha_Emision, 
                    global::System.Nullable<global::System.DateTime> Tarjeta_Fecha_Vencimiento, 
                    string Tarjeta_Codigo_Seg, 
                    string Tarjeta_Emisor_Descripcion, 
                    global::System.Nullable<decimal> Cuenta_Dest_Numero, 
                    global::System.Nullable<global::System.DateTime> Cuenta_Dest_Fecha_Creacion, 
                    string Cuenta_Dest_Estado, 
                    global::System.Nullable<decimal> Cuenta_Dest_Pais_Codigo, 
                    string Cuenta_Dest_Pais_Desc, 
                    global::System.Nullable<global::System.DateTime> Cuenta_Dest_Fecha_Cierre, 
                    global::System.Nullable<global::System.DateTime> Transf_Fecha, 
                    global::System.Nullable<decimal> Trans_Importe, 
                    global::System.Nullable<decimal> Trans_Costo_Trans, 
                    global::System.Nullable<global::System.DateTime> Retiro_Fecha, 
                    global::System.Nullable<decimal> Retiro_Codigo, 
                    global::System.Nullable<decimal> Retiro_Importe, 
                    global::System.Nullable<decimal> Cheque_Numero, 
                    global::System.Nullable<global::System.DateTime> Cheque_Fecha, 
                    global::System.Nullable<decimal> Cheque_Importe, 
                    global::System.Nullable<decimal> Banco_Cogido, 
                    string Banco_Nombre, 
                    string Banco_Direccion, 
                    string Item_Factura_Descr, 
                    global::System.Nullable<decimal> Item_Factura_Importe, 
                    global::System.Nullable<decimal> Factura_Numero, 
                    global::System.Nullable<global::System.DateTime> Factura_Fecha) {
            if ((Cli_Pais_Codigo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(Cli_Pais_Codigo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Cli_Pais_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Cli_Pais_Desc));
            }
            if ((Cli_Nombre == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Cli_Nombre));
            }
            if ((Cli_Apellido == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Cli_Apellido));
            }
            if ((Cli_Tipo_Doc_Cod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Cli_Tipo_Doc_Cod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Cli_Nro_Doc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(Cli_Nro_Doc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Cli_Tipo_Doc_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Cli_Tipo_Doc_Desc));
            }
            if ((Cli_Dom_Calle == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Cli_Dom_Calle));
            }
            if ((Cli_Dom_Nro.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(Cli_Dom_Nro.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Cli_Dom_Piso.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(Cli_Dom_Piso.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Cli_Dom_Depto == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Cli_Dom_Depto));
            }
            if ((Cli_Fecha_Nac.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(Cli_Fecha_Nac.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Cli_Mail == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Cli_Mail));
            }
            if ((Cuenta_Numero.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(Cuenta_Numero.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Fecha_Creacion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(Cuenta_Fecha_Creacion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Estado == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Cuenta_Estado));
            }
            if ((Cuenta_Pais_Codigo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(Cuenta_Pais_Codigo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Pais_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Cuenta_Pais_Desc));
            }
            if ((Cuenta_Fecha_Cierre.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(Cuenta_Fecha_Cierre.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Deposito_Codigo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(Deposito_Codigo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Deposito_Fecha.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(Deposito_Fecha.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Deposito_Importe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(Deposito_Importe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Tarjeta_Numero == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(Tarjeta_Numero));
            }
            if ((Tarjeta_Fecha_Emision.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(Tarjeta_Fecha_Emision.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Tarjeta_Fecha_Vencimiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(Tarjeta_Fecha_Vencimiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Tarjeta_Codigo_Seg == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(Tarjeta_Codigo_Seg));
            }
            if ((Tarjeta_Emisor_Descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(Tarjeta_Emisor_Descripcion));
            }
            if ((Cuenta_Dest_Numero.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(Cuenta_Dest_Numero.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Dest_Fecha_Creacion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(Cuenta_Dest_Fecha_Creacion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Dest_Estado == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(Cuenta_Dest_Estado));
            }
            if ((Cuenta_Dest_Pais_Codigo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(Cuenta_Dest_Pais_Codigo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Cuenta_Dest_Pais_Desc == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(Cuenta_Dest_Pais_Desc));
            }
            if ((Cuenta_Dest_Fecha_Cierre.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(Cuenta_Dest_Fecha_Cierre.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Transf_Fecha.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(Transf_Fecha.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Trans_Importe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(Trans_Importe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Trans_Costo_Trans.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(Trans_Costo_Trans.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Retiro_Fecha.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(Retiro_Fecha.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Retiro_Codigo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(Retiro_Codigo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Retiro_Importe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(Retiro_Importe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Cheque_Numero.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(Cheque_Numero.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Cheque_Fecha.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(Cheque_Fecha.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Cheque_Importe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(Cheque_Importe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Banco_Cogido.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(Banco_Cogido.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Banco_Nombre == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(Banco_Nombre));
            }
            if ((Banco_Direccion == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(Banco_Direccion));
            }
            if ((Item_Factura_Descr == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(Item_Factura_Descr));
            }
            if ((Item_Factura_Importe.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(Item_Factura_Importe.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Factura_Numero.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(Factura_Numero.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Factura_Fecha.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((System.DateTime)(Factura_Fecha.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Modificacion_cuentaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Modificacion_cuentaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Modificacion_cuenta";
            tableMapping.ColumnMappings.Add("Id_modificacion", "Id_modificacion");
            tableMapping.ColumnMappings.Add("Cod_tipo", "Cod_tipo");
            tableMapping.ColumnMappings.Add("Cod_cuenta", "Cod_cuenta");
            tableMapping.ColumnMappings.Add("Cod_transaccion", "Cod_transaccion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Modificacion_cuenta] WHERE (([Id_modificacion] = @Original_Id_" +
                "modificacion) AND ([Cod_tipo] = @Original_Cod_tipo) AND ([Cod_cuenta] = @Origina" +
                "l_Cod_cuenta) AND ([Cod_transaccion] = @Original_Cod_transaccion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_modificacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_modificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Modificacion_cuenta] ([Cod_tipo], [Cod_cuenta], [Cod_transaccion]) VALUES (@Cod_tipo, @Cod_cuenta, @Cod_transaccion);
SELECT Id_modificacion, Cod_tipo, Cod_cuenta, Cod_transaccion FROM Modificacion_cuenta WHERE (Id_modificacion = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Modificacion_cuenta] SET [Cod_tipo] = @Cod_tipo, [Cod_cuenta] = @Cod_cuenta, [Cod_transaccion] = @Cod_transaccion WHERE (([Id_modificacion] = @Original_Id_modificacion) AND ([Cod_tipo] = @Original_Cod_tipo) AND ([Cod_cuenta] = @Original_Cod_cuenta) AND ([Cod_transaccion] = @Original_Cod_transaccion));
SELECT Id_modificacion, Cod_tipo, Cod_cuenta, Cod_transaccion FROM Modificacion_cuenta WHERE (Id_modificacion = @Id_modificacion)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_modificacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_modificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_modificacion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_modificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_modificacion, Cod_tipo, Cod_cuenta, Cod_transaccion FROM dbo.Modificaci" +
                "on_cuenta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Modificacion_cuentaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Modificacion_cuentaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Modificacion_cuentaDataTable dataTable = new GD1C2015DataSet.Modificacion_cuentaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Modificacion_cuentaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Modificacion_cuenta");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_modificacion, int Original_Cod_tipo, int Original_Cod_cuenta, int Original_Cod_transaccion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_modificacion));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_tipo));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Cod_transaccion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_tipo, int Cod_cuenta, int Cod_transaccion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_tipo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_transaccion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_tipo, int Cod_cuenta, int Cod_transaccion, int Original_Id_modificacion, int Original_Cod_tipo, int Original_Cod_cuenta, int Original_Cod_transaccion, int Id_modificacion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Cod_tipo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_transaccion));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Id_modificacion));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Cod_tipo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Cod_transaccion));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Id_modificacion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_tipo, int Cod_cuenta, int Cod_transaccion, int Original_Id_modificacion, int Original_Cod_tipo, int Original_Cod_cuenta, int Original_Cod_transaccion) {
            return this.Update(Cod_tipo, Cod_cuenta, Cod_transaccion, Original_Id_modificacion, Original_Cod_tipo, Original_Cod_cuenta, Original_Cod_transaccion, Original_Id_modificacion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MonedaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MonedaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Moneda";
            tableMapping.ColumnMappings.Add("Id_moneda", "Id_moneda");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Conversion", "Conversion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Moneda] WHERE (([Id_moneda] = @Original_Id_moneda) AND ([Descr" +
                "ipcion] = @Original_Descripcion) AND ([Conversion] = @Original_Conversion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conversion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conversion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Moneda] ([Descripcion], [Conversion]) VALUES (@Descripcion, @C" +
                "onversion);\r\nSELECT Id_moneda, Descripcion, Conversion FROM Moneda WHERE (Id_mon" +
                "eda = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conversion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conversion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Moneda] SET [Descripcion] = @Descripcion, [Conversion] = @Conversion WHERE (([Id_moneda] = @Original_Id_moneda) AND ([Descripcion] = @Original_Descripcion) AND ([Conversion] = @Original_Conversion));
SELECT Id_moneda, Descripcion, Conversion FROM Moneda WHERE (Id_moneda = @Id_moneda)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conversion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conversion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_moneda", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_moneda", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conversion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conversion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_moneda", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_moneda", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_moneda, Descripcion, Conversion FROM dbo.Moneda";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.MonedaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.MonedaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.MonedaDataTable dataTable = new GD1C2015DataSet.MonedaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.MonedaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Moneda");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_moneda, string Original_Descripcion, double Original_Conversion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_moneda));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Conversion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion, double Conversion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Conversion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, double Conversion, int Original_Id_moneda, string Original_Descripcion, double Original_Conversion, int Id_moneda) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Conversion));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_moneda));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Original_Conversion));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Id_moneda));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, double Conversion, int Original_Id_moneda, string Original_Descripcion, double Original_Conversion) {
            return this.Update(Descripcion, Conversion, Original_Id_moneda, Original_Descripcion, Original_Conversion, Original_Id_moneda);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PaisTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PaisTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Pais";
            tableMapping.ColumnMappings.Add("Id_Pais", "Id_Pais");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Pais] WHERE (([Id_Pais] = @Original_Id_Pais) AND ((@IsNull_Des" +
                "cripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcio" +
                "n)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Pais] ([Id_Pais], [Descripcion]) VALUES (@Id_Pais, @Descripcio" +
                "n);\r\nSELECT Id_Pais, Descripcion FROM Pais WHERE (Id_Pais = @Id_Pais)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Pais] SET [Id_Pais] = @Id_Pais, [Descripcion] = @Descripcion WHERE (([Id_Pais] = @Original_Id_Pais) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)));
SELECT Id_Pais, Descripcion FROM Pais WHERE (Id_Pais = @Id_Pais)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Pais", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Pais", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Pais", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_Pais, Descripcion FROM dbo.Pais";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.PaisDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.PaisDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.PaisDataTable dataTable = new GD1C2015DataSet.PaisDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.PaisDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Pais");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_Pais, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_Pais));
            if ((Original_Descripcion == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_Pais, string Descripcion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_Pais));
            if ((Descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_Pais, string Descripcion, int Original_Id_Pais, string Original_Descripcion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_Pais));
            if ((Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_Pais));
            if ((Original_Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_Pais, string Original_Descripcion) {
            return this.Update(Original_Id_Pais, Descripcion, Original_Id_Pais, Original_Descripcion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RetirosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RetirosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Retiros";
            tableMapping.ColumnMappings.Add("Id_retiro", "Id_retiro");
            tableMapping.ColumnMappings.Add("Cod_cuenta", "Cod_cuenta");
            tableMapping.ColumnMappings.Add("Cod_cheque", "Cod_cheque");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Retiros] WHERE (([Id_retiro] = @Original_Id_retiro) AND ([Cod_" +
                "cuenta] = @Original_Cod_cuenta) AND ([Cod_cheque] = @Original_Cod_cheque))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_retiro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_retiro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Retiros] ([Id_retiro], [Cod_cuenta], [Cod_cheque]) VALUES (@Id" +
                "_retiro, @Cod_cuenta, @Cod_cheque);\r\nSELECT Id_retiro, Cod_cuenta, Cod_cheque FR" +
                "OM Retiros WHERE (Id_retiro = @Id_retiro)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_retiro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_retiro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cheque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Retiros] SET [Id_retiro] = @Id_retiro, [Cod_cuenta] = @Cod_cuenta, [Cod_cheque] = @Cod_cheque WHERE (([Id_retiro] = @Original_Id_retiro) AND ([Cod_cuenta] = @Original_Cod_cuenta) AND ([Cod_cheque] = @Original_Cod_cheque));
SELECT Id_retiro, Cod_cuenta, Cod_cheque FROM Retiros WHERE (Id_retiro = @Id_retiro)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_retiro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_retiro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cheque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_retiro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_retiro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cheque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cheque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_retiro, Cod_cuenta, Cod_cheque FROM dbo.Retiros";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.RetirosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.RetirosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.RetirosDataTable dataTable = new GD1C2015DataSet.RetirosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.RetirosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Retiros");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_retiro, int Original_Cod_cuenta, int Original_Cod_cheque) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_retiro));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_cheque));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_retiro, int Cod_cuenta, int Cod_cheque) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_retiro));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_cheque));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_retiro, int Cod_cuenta, int Cod_cheque, int Original_Id_retiro, int Original_Cod_cuenta, int Original_Cod_cheque) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_retiro));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_cheque));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Id_retiro));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Cod_cuenta));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Cod_cheque));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_cuenta, int Cod_cheque, int Original_Id_retiro, int Original_Cod_cuenta, int Original_Cod_cheque) {
            return this.Update(Original_Id_retiro, Cod_cuenta, Cod_cheque, Original_Id_retiro, Original_Cod_cuenta, Original_Cod_cheque);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Rol";
            tableMapping.ColumnMappings.Add("Id_rol", "Id_rol");
            tableMapping.ColumnMappings.Add("Nombre_rol", "Nombre_rol");
            tableMapping.ColumnMappings.Add("Cod_estado", "Cod_estado");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Rol] WHERE (([Id_rol] = @Original_Id_rol) AND ([Nombre_rol] = " +
                "@Original_Nombre_rol) AND ([Cod_estado] = @Original_Cod_estado))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_rol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_rol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_rol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_rol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Rol] ([Nombre_rol], [Cod_estado]) VALUES (@Nombre_rol, @Cod_es" +
                "tado);\r\nSELECT Id_rol, Nombre_rol, Cod_estado FROM Rol WHERE (Id_rol = SCOPE_IDE" +
                "NTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_rol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_rol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Rol] SET [Nombre_rol] = @Nombre_rol, [Cod_estado] = @Cod_estado WHERE (([Id_rol] = @Original_Id_rol) AND ([Nombre_rol] = @Original_Nombre_rol) AND ([Cod_estado] = @Original_Cod_estado));
SELECT Id_rol, Nombre_rol, Cod_estado FROM Rol WHERE (Id_rol = @Id_rol)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_rol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_rol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_rol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_rol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_rol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_rol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_rol", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_rol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_rol, Nombre_rol, Cod_estado FROM dbo.Rol";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.RolDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.RolDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.RolDataTable dataTable = new GD1C2015DataSet.RolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.RolDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Rol");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_rol, string Original_Nombre_rol, int Original_Cod_estado) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_rol));
            if ((Original_Nombre_rol == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_rol");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre_rol));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_estado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre_rol, int Cod_estado) {
            if ((Nombre_rol == null)) {
                throw new global::System.ArgumentNullException("Nombre_rol");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre_rol));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_estado));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre_rol, int Cod_estado, int Original_Id_rol, string Original_Nombre_rol, int Original_Cod_estado, int Id_rol) {
            if ((Nombre_rol == null)) {
                throw new global::System.ArgumentNullException("Nombre_rol");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre_rol));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_estado));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_rol));
            if ((Original_Nombre_rol == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_rol");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Nombre_rol));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Cod_estado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Id_rol));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre_rol, int Cod_estado, int Original_Id_rol, string Original_Nombre_rol, int Original_Cod_estado) {
            return this.Update(Nombre_rol, Cod_estado, Original_Id_rol, Original_Nombre_rol, Original_Cod_estado, Original_Id_rol);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Rol_funcionalidadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Rol_funcionalidadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Rol_funcionalidad";
            tableMapping.ColumnMappings.Add("Cod_rol", "Cod_rol");
            tableMapping.ColumnMappings.Add("Cod_funcionalidad", "Cod_funcionalidad");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Rol_funcionalidad] ([Cod_rol], [Cod_funcionalidad]) VALUES (@C" +
                "od_rol, @Cod_funcionalidad)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_rol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_rol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_funcionalidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_funcionalidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Cod_rol, Cod_funcionalidad FROM dbo.Rol_funcionalidad";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Rol_funcionalidadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Rol_funcionalidadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Rol_funcionalidadDataTable dataTable = new GD1C2015DataSet.Rol_funcionalidadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Rol_funcionalidadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Rol_funcionalidad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_rol, int Cod_funcionalidad) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_rol));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_funcionalidad));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tabla_ClienteTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tabla_ClienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tabla_Cliente";
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("Tipo_Doc", "Tipo_Doc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tabla_Cliente] ([Nombre], [Apellido], [Tipo_Doc]) VALUES (@Nom" +
                "bre, @Apellido, @Tipo_Doc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Doc", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 0, "Tipo_Doc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Nombre, Apellido, Tipo_Doc FROM dbo.Tabla_Cliente";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Tabla_ClienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Tabla_ClienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Tabla_ClienteDataTable dataTable = new GD1C2015DataSet.Tabla_ClienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Tabla_ClienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Tabla_Cliente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre, string Apellido, global::System.Nullable<decimal> Tipo_Doc) {
            if ((Nombre == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((Apellido == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Apellido));
            }
            if ((Tipo_Doc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Tipo_Doc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tabla_ClientesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tabla_ClientesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tabla_Clientes";
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Apellido", "Apellido");
            tableMapping.ColumnMappings.Add("Tipo_Doc", "Tipo_Doc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tabla_Clientes] ([Nombre], [Apellido], [Tipo_Doc]) VALUES (@No" +
                "mbre, @Apellido, @Tipo_Doc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Apellido", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Apellido", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Doc", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 0, "Tipo_Doc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Nombre, Apellido, Tipo_Doc FROM dbo.Tabla_Clientes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Tabla_ClientesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Tabla_ClientesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Tabla_ClientesDataTable dataTable = new GD1C2015DataSet.Tabla_ClientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Tabla_ClientesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Tabla_Clientes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre, string Apellido, global::System.Nullable<decimal> Tipo_Doc) {
            if ((Nombre == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((Apellido == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Apellido));
            }
            if ((Tipo_Doc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Tipo_Doc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tabladementiritasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tabladementiritasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tabladementiritas";
            tableMapping.ColumnMappings.Add("numerito", "numerito");
            tableMapping.ColumnMappings.Add("nombresillo", "nombresillo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tabladementiritas] ([nombresillo]) VALUES (@nombresillo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nombresillo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nombresillo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT numerito, nombresillo FROM dbo.tabladementiritas";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.tabladementiritasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.tabladementiritasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.tabladementiritasDataTable dataTable = new GD1C2015DataSet.tabladementiritasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.tabladementiritasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tabladementiritas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nombresillo) {
            if ((nombresillo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nombresillo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tabladementiritas2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tabladementiritas2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tabladementiritas2";
            tableMapping.ColumnMappings.Add("numerito", "numerito");
            tableMapping.ColumnMappings.Add("nombresillo", "nombresillo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tabladementiritas2] ([nombresillo]) VALUES (@nombresillo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nombresillo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nombresillo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT numerito, nombresillo FROM dbo.tabladementiritas2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.tabladementiritas2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.tabladementiritas2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.tabladementiritas2DataTable dataTable = new GD1C2015DataSet.tabladementiritas2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.tabladementiritas2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "tabladementiritas2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string nombresillo) {
            if ((nombresillo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nombresillo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tarjetas_creditoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tarjetas_creditoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tarjetas_credito";
            tableMapping.ColumnMappings.Add("Num_tarjeta", "Num_tarjeta");
            tableMapping.ColumnMappings.Add("Cod_cliente", "Cod_cliente");
            tableMapping.ColumnMappings.Add("Cod_emisor", "Cod_emisor");
            tableMapping.ColumnMappings.Add("Fecha_emision", "Fecha_emision");
            tableMapping.ColumnMappings.Add("Fecha_vencimiento", "Fecha_vencimiento");
            tableMapping.ColumnMappings.Add("Cod_seguridad", "Cod_seguridad");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Tarjetas_credito] WHERE (([Num_tarjeta] = @Original_Num_tarjeta) AND ([Cod_cliente] = @Original_Cod_cliente) AND ([Cod_emisor] = @Original_Cod_emisor) AND ([Fecha_emision] = @Original_Fecha_emision) AND ([Fecha_vencimiento] = @Original_Fecha_vencimiento) AND ((@IsNull_Cod_seguridad = 1 AND [Cod_seguridad] IS NULL) OR ([Cod_seguridad] = @Original_Cod_seguridad)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_tarjeta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_tarjeta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_emisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_emisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_emision", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_emision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_vencimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_vencimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Tarjetas_credito] ([Num_tarjeta], [Cod_cliente], [Cod_emisor], [Fecha_emision], [Fecha_vencimiento], [Cod_seguridad]) VALUES (@Num_tarjeta, @Cod_cliente, @Cod_emisor, @Fecha_emision, @Fecha_vencimiento, @Cod_seguridad);
SELECT Num_tarjeta, Cod_cliente, Cod_emisor, Fecha_emision, Fecha_vencimiento, Cod_seguridad FROM Tarjetas_credito WHERE (Num_tarjeta = @Num_tarjeta)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_tarjeta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_tarjeta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_emisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_emisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_emision", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_emision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_vencimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Tarjetas_credito] SET [Num_tarjeta] = @Num_tarjeta, [Cod_cliente] = @Cod_cliente, [Cod_emisor] = @Cod_emisor, [Fecha_emision] = @Fecha_emision, [Fecha_vencimiento] = @Fecha_vencimiento, [Cod_seguridad] = @Cod_seguridad WHERE (([Num_tarjeta] = @Original_Num_tarjeta) AND ([Cod_cliente] = @Original_Cod_cliente) AND ([Cod_emisor] = @Original_Cod_emisor) AND ([Fecha_emision] = @Original_Fecha_emision) AND ([Fecha_vencimiento] = @Original_Fecha_vencimiento) AND ((@IsNull_Cod_seguridad = 1 AND [Cod_seguridad] IS NULL) OR ([Cod_seguridad] = @Original_Cod_seguridad)));
SELECT Num_tarjeta, Cod_cliente, Cod_emisor, Fecha_emision, Fecha_vencimiento, Cod_seguridad FROM Tarjetas_credito WHERE (Num_tarjeta = @Num_tarjeta)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_tarjeta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_tarjeta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_emisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_emisor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_emision", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_emision", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_vencimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_vencimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_tarjeta", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_tarjeta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_emisor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_emisor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_emision", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_emision", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_vencimiento", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_vencimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_seguridad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_seguridad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Num_tarjeta, Cod_cliente, Cod_emisor, Fecha_emision, Fecha_vencimiento, Co" +
                "d_seguridad FROM dbo.Tarjetas_credito";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Tarjetas_creditoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Tarjetas_creditoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Tarjetas_creditoDataTable dataTable = new GD1C2015DataSet.Tarjetas_creditoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Tarjetas_creditoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Tarjetas_credito");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Num_tarjeta, int Original_Cod_cliente, int Original_Cod_emisor, System.DateTime Original_Fecha_emision, System.DateTime Original_Fecha_vencimiento, global::System.Nullable<int> Original_Cod_seguridad) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Num_tarjeta));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_cliente));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_emisor));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha_emision));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Fecha_vencimiento));
            if ((Original_Cod_seguridad.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Cod_seguridad.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Num_tarjeta, int Cod_cliente, int Cod_emisor, System.DateTime Fecha_emision, System.DateTime Fecha_vencimiento, global::System.Nullable<int> Cod_seguridad) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Num_tarjeta));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_cliente));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_emisor));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fecha_emision));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fecha_vencimiento));
            if ((Cod_seguridad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Cod_seguridad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Num_tarjeta, int Cod_cliente, int Cod_emisor, System.DateTime Fecha_emision, System.DateTime Fecha_vencimiento, global::System.Nullable<int> Cod_seguridad, int Original_Num_tarjeta, int Original_Cod_cliente, int Original_Cod_emisor, System.DateTime Original_Fecha_emision, System.DateTime Original_Fecha_vencimiento, global::System.Nullable<int> Original_Cod_seguridad) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Num_tarjeta));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_cliente));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_emisor));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fecha_emision));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fecha_vencimiento));
            if ((Cod_seguridad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Cod_seguridad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Num_tarjeta));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Cod_cliente));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Cod_emisor));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Fecha_emision));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Fecha_vencimiento));
            if ((Original_Cod_seguridad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Cod_seguridad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_cliente, int Cod_emisor, System.DateTime Fecha_emision, System.DateTime Fecha_vencimiento, global::System.Nullable<int> Cod_seguridad, int Original_Num_tarjeta, int Original_Cod_cliente, int Original_Cod_emisor, System.DateTime Original_Fecha_emision, System.DateTime Original_Fecha_vencimiento, global::System.Nullable<int> Original_Cod_seguridad) {
            return this.Update(Original_Num_tarjeta, Cod_cliente, Cod_emisor, Fecha_emision, Fecha_vencimiento, Cod_seguridad, Original_Num_tarjeta, Original_Cod_cliente, Original_Cod_emisor, Original_Fecha_emision, Original_Fecha_vencimiento, Original_Cod_seguridad);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tipo_DNITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tipo_DNITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tipo_DNI";
            tableMapping.ColumnMappings.Add("Id_DNI", "Id_DNI");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Tipo_DNI] WHERE (([Id_DNI] = @Original_Id_DNI) AND ([Descripci" +
                "on] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_DNI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tipo_DNI] ([Id_DNI], [Descripcion]) VALUES (@Id_DNI, @Descripc" +
                "ion);\r\nSELECT Id_DNI, Descripcion FROM Tipo_DNI WHERE (Id_DNI = @Id_DNI)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_DNI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Tipo_DNI] SET [Id_DNI] = @Id_DNI, [Descripcion] = @Descripcion WHER" +
                "E (([Id_DNI] = @Original_Id_DNI) AND ([Descripcion] = @Original_Descripcion));\r\n" +
                "SELECT Id_DNI, Descripcion FROM Tipo_DNI WHERE (Id_DNI = @Id_DNI)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_DNI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_DNI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_DNI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_DNI, Descripcion FROM dbo.Tipo_DNI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Tipo_DNIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Tipo_DNIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Tipo_DNIDataTable dataTable = new GD1C2015DataSet.Tipo_DNIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Tipo_DNIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Tipo_DNI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_DNI, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_DNI));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id_DNI, string Descripcion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_DNI));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id_DNI, string Descripcion, int Original_Id_DNI, string Original_Descripcion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_DNI));
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Id_DNI));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_DNI, string Original_Descripcion) {
            return this.Update(Original_Id_DNI, Descripcion, Original_Id_DNI, Original_Descripcion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tipo_modificacionTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tipo_modificacionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tipo_modificacion";
            tableMapping.ColumnMappings.Add("Id_tipo", "Id_tipo");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Tipo_modificacion] WHERE (([Id_tipo] = @Original_Id_tipo) AND " +
                "([Descripcion] = @Original_Descripcion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tipo_modificacion] ([Descripcion]) VALUES (@Descripcion);\r\nSEL" +
                "ECT Id_tipo, Descripcion FROM Tipo_modificacion WHERE (Id_tipo = SCOPE_IDENTITY(" +
                "))";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Tipo_modificacion] SET [Descripcion] = @Descripcion WHERE (([Id_tip" +
                "o] = @Original_Id_tipo) AND ([Descripcion] = @Original_Descripcion));\r\nSELECT Id" +
                "_tipo, Descripcion FROM Tipo_modificacion WHERE (Id_tipo = @Id_tipo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_tipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_tipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_tipo", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_tipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_tipo, Descripcion FROM dbo.Tipo_modificacion";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Tipo_modificacionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Tipo_modificacionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Tipo_modificacionDataTable dataTable = new GD1C2015DataSet.Tipo_modificacionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Tipo_modificacionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Tipo_modificacion");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_tipo, string Original_Descripcion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_tipo));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_tipo, string Original_Descripcion, int Id_tipo) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_Id_tipo));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Id_tipo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Original_Id_tipo, string Original_Descripcion) {
            return this.Update(Descripcion, Original_Id_tipo, Original_Descripcion, Original_Id_tipo);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TransaccionesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TransaccionesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Transacciones";
            tableMapping.ColumnMappings.Add("Id_transaccion", "Id_transaccion");
            tableMapping.ColumnMappings.Add("Cod_estado", "Cod_estado");
            tableMapping.ColumnMappings.Add("Costo", "Costo");
            tableMapping.ColumnMappings.Add("Fecha", "Fecha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Transacciones] WHERE (([Id_transaccion] = @Original_Id_transac" +
                "cion) AND ([Cod_estado] = @Original_Cod_estado) AND ([Costo] = @Original_Costo) " +
                "AND ([Fecha] = @Original_Fecha))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Transacciones] ([Cod_estado], [Costo], [Fecha]) VALUES (@Cod_e" +
                "stado, @Costo, @Fecha);\r\nSELECT Id_transaccion, Cod_estado, Costo, Fecha FROM Tr" +
                "ansacciones WHERE (Id_transaccion = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Transacciones] SET [Cod_estado] = @Cod_estado, [Costo] = @Costo, [Fecha] = @Fecha WHERE (([Id_transaccion] = @Original_Id_transaccion) AND ([Cod_estado] = @Original_Cod_estado) AND ([Costo] = @Original_Costo) AND ([Fecha] = @Original_Fecha));
SELECT Id_transaccion, Cod_estado, Costo, Fecha FROM Transacciones WHERE (Id_transaccion = @Id_transaccion)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_estado", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_estado", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Costo", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Costo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_transaccion", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transaccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_transaccion, Cod_estado, Costo, Fecha FROM dbo.Transacciones";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.TransaccionesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.TransaccionesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.TransaccionesDataTable dataTable = new GD1C2015DataSet.TransaccionesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.TransaccionesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Transacciones");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_transaccion, int Original_Cod_estado, double Original_Costo, System.DateTime Original_Fecha) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_transaccion));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Cod_estado));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Costo));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fecha));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_estado, double Costo, System.DateTime Fecha) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_estado));
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Costo));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_estado, double Costo, System.DateTime Fecha, int Original_Id_transaccion, int Original_Cod_estado, double Original_Costo, System.DateTime Original_Fecha, int Id_transaccion) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Cod_estado));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Costo));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Fecha));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_Id_transaccion));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Cod_estado));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_Costo));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Fecha));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Id_transaccion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Cod_estado, double Costo, System.DateTime Fecha, int Original_Id_transaccion, int Original_Cod_estado, double Original_Costo, System.DateTime Original_Fecha) {
            return this.Update(Cod_estado, Costo, Fecha, Original_Id_transaccion, Original_Cod_estado, Original_Costo, Original_Fecha, Original_Id_transaccion);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TransferenciasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TransferenciasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Transferencias";
            tableMapping.ColumnMappings.Add("Id_transferencia", "Id_transferencia");
            tableMapping.ColumnMappings.Add("Importe", "Importe");
            tableMapping.ColumnMappings.Add("Cod_cuenta_origen", "Cod_cuenta_origen");
            tableMapping.ColumnMappings.Add("Cod_cuenta_destino", "Cod_cuenta_destino");
            tableMapping.ColumnMappings.Add("Cod_transaccion", "Cod_transaccion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Transferencias] WHERE (([Id_transferencia] = @Original_Id_transferencia) AND ([Importe] = @Original_Importe) AND ([Cod_cuenta_origen] = @Original_Cod_cuenta_origen) AND ([Cod_cuenta_destino] = @Original_Cod_cuenta_destino) AND ([Cod_transaccion] = @Original_Cod_transaccion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_transferencia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transferencia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta_origen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_origen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta_destino", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_destino", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Transferencias] ([Importe], [Cod_cuenta_origen], [Cod_cuenta_destino], [Cod_transaccion]) VALUES (@Importe, @Cod_cuenta_origen, @Cod_cuenta_destino, @Cod_transaccion);
SELECT Id_transferencia, Importe, Cod_cuenta_origen, Cod_cuenta_destino, Cod_transaccion FROM Transferencias WHERE (Id_transferencia = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta_origen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_origen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta_destino", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_destino", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Transferencias] SET [Importe] = @Importe, [Cod_cuenta_origen] = @Cod_cuenta_origen, [Cod_cuenta_destino] = @Cod_cuenta_destino, [Cod_transaccion] = @Cod_transaccion WHERE (([Id_transferencia] = @Original_Id_transferencia) AND ([Importe] = @Original_Importe) AND ([Cod_cuenta_origen] = @Original_Cod_cuenta_origen) AND ([Cod_cuenta_destino] = @Original_Cod_cuenta_destino) AND ([Cod_transaccion] = @Original_Cod_transaccion));
SELECT Id_transferencia, Importe, Cod_cuenta_origen, Cod_cuenta_destino, Cod_transaccion FROM Transferencias WHERE (Id_transferencia = @Id_transferencia)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta_origen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_origen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_cuenta_destino", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_destino", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_transferencia", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transferencia", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Importe", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Importe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta_origen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_origen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_cuenta_destino", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_cuenta_destino", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cod_transaccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_transaccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_transferencia", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_transferencia", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_transferencia, Importe, Cod_cuenta_origen, Cod_cuenta_destino, Cod_tran" +
                "saccion FROM dbo.Transferencias";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.TransferenciasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.TransferenciasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.TransferenciasDataTable dataTable = new GD1C2015DataSet.TransferenciasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.TransferenciasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Transferencias");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_transferencia, double Original_Importe, int Original_Cod_cuenta_origen, int Original_Cod_cuenta_destino, int Original_Cod_transaccion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_transferencia));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((double)(Original_Importe));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Cod_cuenta_origen));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Cod_cuenta_destino));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Cod_transaccion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(double Importe, int Cod_cuenta_origen, int Cod_cuenta_destino, int Cod_transaccion) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((double)(Importe));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_cuenta_origen));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Cod_cuenta_destino));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Cod_transaccion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(double Importe, int Cod_cuenta_origen, int Cod_cuenta_destino, int Cod_transaccion, int Original_Id_transferencia, double Original_Importe, int Original_Cod_cuenta_origen, int Original_Cod_cuenta_destino, int Original_Cod_transaccion, int Id_transferencia) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((double)(Importe));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Cod_cuenta_origen));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Cod_cuenta_destino));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Cod_transaccion));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Id_transferencia));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_Importe));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Cod_cuenta_origen));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Cod_cuenta_destino));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Cod_transaccion));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Id_transferencia));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(double Importe, int Cod_cuenta_origen, int Cod_cuenta_destino, int Cod_transaccion, int Original_Id_transferencia, double Original_Importe, int Original_Cod_cuenta_origen, int Original_Cod_cuenta_destino, int Original_Cod_transaccion) {
            return this.Update(Importe, Cod_cuenta_origen, Cod_cuenta_destino, Cod_transaccion, Original_Id_transferencia, Original_Importe, Original_Cod_cuenta_origen, Original_Cod_cuenta_destino, Original_Cod_transaccion, Original_Id_transferencia);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UsuarioTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UsuarioTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Usuario";
            tableMapping.ColumnMappings.Add("Id_usuario", "Id_usuario");
            tableMapping.ColumnMappings.Add("Useranme", "Useranme");
            tableMapping.ColumnMappings.Add("Contraseña", "Contraseña");
            tableMapping.ColumnMappings.Add("Fecha_creacion", "Fecha_creacion");
            tableMapping.ColumnMappings.Add("Ultima_modificacion", "Ultima_modificacion");
            tableMapping.ColumnMappings.Add("Pregunta_secreta", "Pregunta_secreta");
            tableMapping.ColumnMappings.Add("Respuesta", "Respuesta");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Usuario] WHERE (([Id_usuario] = @Original_Id_usuario) AND ([Useranme] = @Original_Useranme) AND ([Contraseña] = @Original_Contraseña) AND ((@IsNull_Fecha_creacion = 1 AND [Fecha_creacion] IS NULL) OR ([Fecha_creacion] = @Original_Fecha_creacion)) AND ([Ultima_modificacion] = @Original_Ultima_modificacion) AND ([Pregunta_secreta] = @Original_Pregunta_secreta) AND ([Respuesta] = @Original_Respuesta))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Useranme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Useranme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contraseña", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contraseña", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_creacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_creacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ultima_modificacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ultima_modificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregunta_secreta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta_secreta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Respuesta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Usuario] ([Useranme], [Contraseña], [Fecha_creacion], [Ultima_modificacion], [Pregunta_secreta], [Respuesta]) VALUES (@Useranme, @Contraseña, @Fecha_creacion, @Ultima_modificacion, @Pregunta_secreta, @Respuesta);
SELECT Id_usuario, Useranme, Contraseña, Fecha_creacion, Ultima_modificacion, Pregunta_secreta, Respuesta FROM Usuario WHERE (Id_usuario = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Useranme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Useranme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contraseña", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contraseña", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_creacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ultima_modificacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ultima_modificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregunta_secreta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta_secreta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Respuesta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Usuario] SET [Useranme] = @Useranme, [Contraseña] = @Contraseña, [Fecha_creacion] = @Fecha_creacion, [Ultima_modificacion] = @Ultima_modificacion, [Pregunta_secreta] = @Pregunta_secreta, [Respuesta] = @Respuesta WHERE (([Id_usuario] = @Original_Id_usuario) AND ([Useranme] = @Original_Useranme) AND ([Contraseña] = @Original_Contraseña) AND ((@IsNull_Fecha_creacion = 1 AND [Fecha_creacion] IS NULL) OR ([Fecha_creacion] = @Original_Fecha_creacion)) AND ([Ultima_modificacion] = @Original_Ultima_modificacion) AND ([Pregunta_secreta] = @Original_Pregunta_secreta) AND ([Respuesta] = @Original_Respuesta));
SELECT Id_usuario, Useranme, Contraseña, Fecha_creacion, Ultima_modificacion, Pregunta_secreta, Respuesta FROM Usuario WHERE (Id_usuario = @Id_usuario)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Useranme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Useranme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contraseña", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contraseña", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_creacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ultima_modificacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ultima_modificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pregunta_secreta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta_secreta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Respuesta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_usuario", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Useranme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Useranme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contraseña", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contraseña", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_creacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_creacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_creacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ultima_modificacion", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ultima_modificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pregunta_secreta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pregunta_secreta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Respuesta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Respuesta", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_usuario", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id_usuario, Useranme, Contraseña, Fecha_creacion, Ultima_modificacion, Pre" +
                "gunta_secreta, Respuesta FROM dbo.Usuario";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.UsuarioDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.UsuarioDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.UsuarioDataTable dataTable = new GD1C2015DataSet.UsuarioDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.UsuarioDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Usuario");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id_usuario, string Original_Useranme, string Original_Contraseña, global::System.Nullable<global::System.DateTime> Original_Fecha_creacion, System.DateTime Original_Ultima_modificacion, string Original_Pregunta_secreta, string Original_Respuesta) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_usuario));
            if ((Original_Useranme == null)) {
                throw new global::System.ArgumentNullException("Original_Useranme");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Useranme));
            }
            if ((Original_Contraseña == null)) {
                throw new global::System.ArgumentNullException("Original_Contraseña");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Contraseña));
            }
            if ((Original_Fecha_creacion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Fecha_creacion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Ultima_modificacion));
            if ((Original_Pregunta_secreta == null)) {
                throw new global::System.ArgumentNullException("Original_Pregunta_secreta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Pregunta_secreta));
            }
            if ((Original_Respuesta == null)) {
                throw new global::System.ArgumentNullException("Original_Respuesta");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Respuesta));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Useranme, string Contraseña, global::System.Nullable<global::System.DateTime> Fecha_creacion, System.DateTime Ultima_modificacion, string Pregunta_secreta, string Respuesta) {
            if ((Useranme == null)) {
                throw new global::System.ArgumentNullException("Useranme");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Useranme));
            }
            if ((Contraseña == null)) {
                throw new global::System.ArgumentNullException("Contraseña");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Contraseña));
            }
            if ((Fecha_creacion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Fecha_creacion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Ultima_modificacion));
            if ((Pregunta_secreta == null)) {
                throw new global::System.ArgumentNullException("Pregunta_secreta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Pregunta_secreta));
            }
            if ((Respuesta == null)) {
                throw new global::System.ArgumentNullException("Respuesta");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Respuesta));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Useranme, string Contraseña, global::System.Nullable<global::System.DateTime> Fecha_creacion, System.DateTime Ultima_modificacion, string Pregunta_secreta, string Respuesta, int Original_Id_usuario, string Original_Useranme, string Original_Contraseña, global::System.Nullable<global::System.DateTime> Original_Fecha_creacion, System.DateTime Original_Ultima_modificacion, string Original_Pregunta_secreta, string Original_Respuesta, int Id_usuario) {
            if ((Useranme == null)) {
                throw new global::System.ArgumentNullException("Useranme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Useranme));
            }
            if ((Contraseña == null)) {
                throw new global::System.ArgumentNullException("Contraseña");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Contraseña));
            }
            if ((Fecha_creacion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Fecha_creacion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Ultima_modificacion));
            if ((Pregunta_secreta == null)) {
                throw new global::System.ArgumentNullException("Pregunta_secreta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Pregunta_secreta));
            }
            if ((Respuesta == null)) {
                throw new global::System.ArgumentNullException("Respuesta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Respuesta));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id_usuario));
            if ((Original_Useranme == null)) {
                throw new global::System.ArgumentNullException("Original_Useranme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Useranme));
            }
            if ((Original_Contraseña == null)) {
                throw new global::System.ArgumentNullException("Original_Contraseña");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Contraseña));
            }
            if ((Original_Fecha_creacion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Fecha_creacion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Ultima_modificacion));
            if ((Original_Pregunta_secreta == null)) {
                throw new global::System.ArgumentNullException("Original_Pregunta_secreta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Pregunta_secreta));
            }
            if ((Original_Respuesta == null)) {
                throw new global::System.ArgumentNullException("Original_Respuesta");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Respuesta));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Id_usuario));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Useranme, string Contraseña, global::System.Nullable<global::System.DateTime> Fecha_creacion, System.DateTime Ultima_modificacion, string Pregunta_secreta, string Respuesta, int Original_Id_usuario, string Original_Useranme, string Original_Contraseña, global::System.Nullable<global::System.DateTime> Original_Fecha_creacion, System.DateTime Original_Ultima_modificacion, string Original_Pregunta_secreta, string Original_Respuesta) {
            return this.Update(Useranme, Contraseña, Fecha_creacion, Ultima_modificacion, Pregunta_secreta, Respuesta, Original_Id_usuario, Original_Useranme, Original_Contraseña, Original_Fecha_creacion, Original_Ultima_modificacion, Original_Pregunta_secreta, Original_Respuesta, Original_Id_usuario);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Usuario_rolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Usuario_rolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Usuario_rol";
            tableMapping.ColumnMappings.Add("Cod_usuario", "Cod_usuario");
            tableMapping.ColumnMappings.Add("Cod_rol", "Cod_rol");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Usuario_rol] ([Cod_usuario], [Cod_rol]) VALUES (@Cod_usuario, " +
                "@Cod_rol)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_usuario", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_usuario", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cod_rol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cod_rol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PagoElectronico.Properties.Settings.Default.GD1C2015ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Cod_usuario, Cod_rol FROM dbo.Usuario_rol";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GD1C2015DataSet.Usuario_rolDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GD1C2015DataSet.Usuario_rolDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GD1C2015DataSet.Usuario_rolDataTable dataTable = new GD1C2015DataSet.Usuario_rolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet.Usuario_rolDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(GD1C2015DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Usuario_rol");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Cod_usuario, int Cod_rol) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Cod_usuario));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Cod_rol));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BancosTableAdapter _bancosTableAdapter;
        
        private CategoriaTableAdapter _categoriaTableAdapter;
        
        private ChequeTableAdapter _chequeTableAdapter;
        
        private ClienteTableAdapter _clienteTableAdapter;
        
        private CuentaTableAdapter _cuentaTableAdapter;
        
        private DepositosTableAdapter _depositosTableAdapter;
        
        private Estado_cuentaTableAdapter _estado_cuentaTableAdapter;
        
        private Estado_rolTableAdapter _estado_rolTableAdapter;
        
        private Estado_transaccionTableAdapter _estado_transaccionTableAdapter;
        
        private FuncionalidadTableAdapter _funcionalidadTableAdapter;
        
        private Intentos_fallidosTableAdapter _intentos_fallidosTableAdapter;
        
        private Intentos_loginTableAdapter _intentos_loginTableAdapter;
        
        private LocalidadTableAdapter _localidadTableAdapter;
        
        private MaestraTableAdapter _maestraTableAdapter;
        
        private Modificacion_cuentaTableAdapter _modificacion_cuentaTableAdapter;
        
        private MonedaTableAdapter _monedaTableAdapter;
        
        private PaisTableAdapter _paisTableAdapter;
        
        private RetirosTableAdapter _retirosTableAdapter;
        
        private RolTableAdapter _rolTableAdapter;
        
        private Rol_funcionalidadTableAdapter _rol_funcionalidadTableAdapter;
        
        private Tabla_ClienteTableAdapter _tabla_ClienteTableAdapter;
        
        private Tabla_ClientesTableAdapter _tabla_ClientesTableAdapter;
        
        private tabladementiritasTableAdapter _tabladementiritasTableAdapter;
        
        private tabladementiritas2TableAdapter _tabladementiritas2TableAdapter;
        
        private Tarjetas_creditoTableAdapter _tarjetas_creditoTableAdapter;
        
        private Tipo_DNITableAdapter _tipo_DNITableAdapter;
        
        private Tipo_modificacionTableAdapter _tipo_modificacionTableAdapter;
        
        private TransaccionesTableAdapter _transaccionesTableAdapter;
        
        private TransferenciasTableAdapter _transferenciasTableAdapter;
        
        private UsuarioTableAdapter _usuarioTableAdapter;
        
        private Usuario_rolTableAdapter _usuario_rolTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BancosTableAdapter BancosTableAdapter {
            get {
                return this._bancosTableAdapter;
            }
            set {
                this._bancosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CategoriaTableAdapter CategoriaTableAdapter {
            get {
                return this._categoriaTableAdapter;
            }
            set {
                this._categoriaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ChequeTableAdapter ChequeTableAdapter {
            get {
                return this._chequeTableAdapter;
            }
            set {
                this._chequeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ClienteTableAdapter ClienteTableAdapter {
            get {
                return this._clienteTableAdapter;
            }
            set {
                this._clienteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CuentaTableAdapter CuentaTableAdapter {
            get {
                return this._cuentaTableAdapter;
            }
            set {
                this._cuentaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DepositosTableAdapter DepositosTableAdapter {
            get {
                return this._depositosTableAdapter;
            }
            set {
                this._depositosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Estado_cuentaTableAdapter Estado_cuentaTableAdapter {
            get {
                return this._estado_cuentaTableAdapter;
            }
            set {
                this._estado_cuentaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Estado_rolTableAdapter Estado_rolTableAdapter {
            get {
                return this._estado_rolTableAdapter;
            }
            set {
                this._estado_rolTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Estado_transaccionTableAdapter Estado_transaccionTableAdapter {
            get {
                return this._estado_transaccionTableAdapter;
            }
            set {
                this._estado_transaccionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public FuncionalidadTableAdapter FuncionalidadTableAdapter {
            get {
                return this._funcionalidadTableAdapter;
            }
            set {
                this._funcionalidadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Intentos_fallidosTableAdapter Intentos_fallidosTableAdapter {
            get {
                return this._intentos_fallidosTableAdapter;
            }
            set {
                this._intentos_fallidosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Intentos_loginTableAdapter Intentos_loginTableAdapter {
            get {
                return this._intentos_loginTableAdapter;
            }
            set {
                this._intentos_loginTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LocalidadTableAdapter LocalidadTableAdapter {
            get {
                return this._localidadTableAdapter;
            }
            set {
                this._localidadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MaestraTableAdapter MaestraTableAdapter {
            get {
                return this._maestraTableAdapter;
            }
            set {
                this._maestraTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Modificacion_cuentaTableAdapter Modificacion_cuentaTableAdapter {
            get {
                return this._modificacion_cuentaTableAdapter;
            }
            set {
                this._modificacion_cuentaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MonedaTableAdapter MonedaTableAdapter {
            get {
                return this._monedaTableAdapter;
            }
            set {
                this._monedaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PaisTableAdapter PaisTableAdapter {
            get {
                return this._paisTableAdapter;
            }
            set {
                this._paisTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public RetirosTableAdapter RetirosTableAdapter {
            get {
                return this._retirosTableAdapter;
            }
            set {
                this._retirosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public RolTableAdapter RolTableAdapter {
            get {
                return this._rolTableAdapter;
            }
            set {
                this._rolTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Rol_funcionalidadTableAdapter Rol_funcionalidadTableAdapter {
            get {
                return this._rol_funcionalidadTableAdapter;
            }
            set {
                this._rol_funcionalidadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tabla_ClienteTableAdapter Tabla_ClienteTableAdapter {
            get {
                return this._tabla_ClienteTableAdapter;
            }
            set {
                this._tabla_ClienteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tabla_ClientesTableAdapter Tabla_ClientesTableAdapter {
            get {
                return this._tabla_ClientesTableAdapter;
            }
            set {
                this._tabla_ClientesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tabladementiritasTableAdapter tabladementiritasTableAdapter {
            get {
                return this._tabladementiritasTableAdapter;
            }
            set {
                this._tabladementiritasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tabladementiritas2TableAdapter tabladementiritas2TableAdapter {
            get {
                return this._tabladementiritas2TableAdapter;
            }
            set {
                this._tabladementiritas2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tarjetas_creditoTableAdapter Tarjetas_creditoTableAdapter {
            get {
                return this._tarjetas_creditoTableAdapter;
            }
            set {
                this._tarjetas_creditoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tipo_DNITableAdapter Tipo_DNITableAdapter {
            get {
                return this._tipo_DNITableAdapter;
            }
            set {
                this._tipo_DNITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tipo_modificacionTableAdapter Tipo_modificacionTableAdapter {
            get {
                return this._tipo_modificacionTableAdapter;
            }
            set {
                this._tipo_modificacionTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TransaccionesTableAdapter TransaccionesTableAdapter {
            get {
                return this._transaccionesTableAdapter;
            }
            set {
                this._transaccionesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TransferenciasTableAdapter TransferenciasTableAdapter {
            get {
                return this._transferenciasTableAdapter;
            }
            set {
                this._transferenciasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UsuarioTableAdapter UsuarioTableAdapter {
            get {
                return this._usuarioTableAdapter;
            }
            set {
                this._usuarioTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Usuario_rolTableAdapter Usuario_rolTableAdapter {
            get {
                return this._usuario_rolTableAdapter;
            }
            set {
                this._usuario_rolTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bancosTableAdapter != null) 
                            && (this._bancosTableAdapter.Connection != null))) {
                    return this._bancosTableAdapter.Connection;
                }
                if (((this._categoriaTableAdapter != null) 
                            && (this._categoriaTableAdapter.Connection != null))) {
                    return this._categoriaTableAdapter.Connection;
                }
                if (((this._chequeTableAdapter != null) 
                            && (this._chequeTableAdapter.Connection != null))) {
                    return this._chequeTableAdapter.Connection;
                }
                if (((this._clienteTableAdapter != null) 
                            && (this._clienteTableAdapter.Connection != null))) {
                    return this._clienteTableAdapter.Connection;
                }
                if (((this._cuentaTableAdapter != null) 
                            && (this._cuentaTableAdapter.Connection != null))) {
                    return this._cuentaTableAdapter.Connection;
                }
                if (((this._depositosTableAdapter != null) 
                            && (this._depositosTableAdapter.Connection != null))) {
                    return this._depositosTableAdapter.Connection;
                }
                if (((this._estado_cuentaTableAdapter != null) 
                            && (this._estado_cuentaTableAdapter.Connection != null))) {
                    return this._estado_cuentaTableAdapter.Connection;
                }
                if (((this._estado_rolTableAdapter != null) 
                            && (this._estado_rolTableAdapter.Connection != null))) {
                    return this._estado_rolTableAdapter.Connection;
                }
                if (((this._estado_transaccionTableAdapter != null) 
                            && (this._estado_transaccionTableAdapter.Connection != null))) {
                    return this._estado_transaccionTableAdapter.Connection;
                }
                if (((this._funcionalidadTableAdapter != null) 
                            && (this._funcionalidadTableAdapter.Connection != null))) {
                    return this._funcionalidadTableAdapter.Connection;
                }
                if (((this._intentos_fallidosTableAdapter != null) 
                            && (this._intentos_fallidosTableAdapter.Connection != null))) {
                    return this._intentos_fallidosTableAdapter.Connection;
                }
                if (((this._intentos_loginTableAdapter != null) 
                            && (this._intentos_loginTableAdapter.Connection != null))) {
                    return this._intentos_loginTableAdapter.Connection;
                }
                if (((this._localidadTableAdapter != null) 
                            && (this._localidadTableAdapter.Connection != null))) {
                    return this._localidadTableAdapter.Connection;
                }
                if (((this._maestraTableAdapter != null) 
                            && (this._maestraTableAdapter.Connection != null))) {
                    return this._maestraTableAdapter.Connection;
                }
                if (((this._modificacion_cuentaTableAdapter != null) 
                            && (this._modificacion_cuentaTableAdapter.Connection != null))) {
                    return this._modificacion_cuentaTableAdapter.Connection;
                }
                if (((this._monedaTableAdapter != null) 
                            && (this._monedaTableAdapter.Connection != null))) {
                    return this._monedaTableAdapter.Connection;
                }
                if (((this._paisTableAdapter != null) 
                            && (this._paisTableAdapter.Connection != null))) {
                    return this._paisTableAdapter.Connection;
                }
                if (((this._retirosTableAdapter != null) 
                            && (this._retirosTableAdapter.Connection != null))) {
                    return this._retirosTableAdapter.Connection;
                }
                if (((this._rolTableAdapter != null) 
                            && (this._rolTableAdapter.Connection != null))) {
                    return this._rolTableAdapter.Connection;
                }
                if (((this._rol_funcionalidadTableAdapter != null) 
                            && (this._rol_funcionalidadTableAdapter.Connection != null))) {
                    return this._rol_funcionalidadTableAdapter.Connection;
                }
                if (((this._tabla_ClienteTableAdapter != null) 
                            && (this._tabla_ClienteTableAdapter.Connection != null))) {
                    return this._tabla_ClienteTableAdapter.Connection;
                }
                if (((this._tabla_ClientesTableAdapter != null) 
                            && (this._tabla_ClientesTableAdapter.Connection != null))) {
                    return this._tabla_ClientesTableAdapter.Connection;
                }
                if (((this._tabladementiritasTableAdapter != null) 
                            && (this._tabladementiritasTableAdapter.Connection != null))) {
                    return this._tabladementiritasTableAdapter.Connection;
                }
                if (((this._tabladementiritas2TableAdapter != null) 
                            && (this._tabladementiritas2TableAdapter.Connection != null))) {
                    return this._tabladementiritas2TableAdapter.Connection;
                }
                if (((this._tarjetas_creditoTableAdapter != null) 
                            && (this._tarjetas_creditoTableAdapter.Connection != null))) {
                    return this._tarjetas_creditoTableAdapter.Connection;
                }
                if (((this._tipo_DNITableAdapter != null) 
                            && (this._tipo_DNITableAdapter.Connection != null))) {
                    return this._tipo_DNITableAdapter.Connection;
                }
                if (((this._tipo_modificacionTableAdapter != null) 
                            && (this._tipo_modificacionTableAdapter.Connection != null))) {
                    return this._tipo_modificacionTableAdapter.Connection;
                }
                if (((this._transaccionesTableAdapter != null) 
                            && (this._transaccionesTableAdapter.Connection != null))) {
                    return this._transaccionesTableAdapter.Connection;
                }
                if (((this._transferenciasTableAdapter != null) 
                            && (this._transferenciasTableAdapter.Connection != null))) {
                    return this._transferenciasTableAdapter.Connection;
                }
                if (((this._usuarioTableAdapter != null) 
                            && (this._usuarioTableAdapter.Connection != null))) {
                    return this._usuarioTableAdapter.Connection;
                }
                if (((this._usuario_rolTableAdapter != null) 
                            && (this._usuario_rolTableAdapter.Connection != null))) {
                    return this._usuario_rolTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bancosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._categoriaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._chequeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clienteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cuentaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._depositosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._estado_cuentaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._estado_rolTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._estado_transaccionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._funcionalidadTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._intentos_fallidosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._intentos_loginTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._localidadTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._maestraTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._modificacion_cuentaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._monedaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._paisTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._retirosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rolTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rol_funcionalidadTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tabla_ClienteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tabla_ClientesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tabladementiritasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tabladementiritas2TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tarjetas_creditoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tipo_DNITableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tipo_modificacionTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._transaccionesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._transferenciasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._usuarioTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._usuario_rolTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(GD1C2015DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._localidadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Localidad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._localidadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._paisTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Pais.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._paisTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._usuarioTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Usuario.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._usuarioTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._estado_rolTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Estado_rol.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._estado_rolTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._estado_transaccionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Estado_transaccion.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._estado_transaccionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._monedaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Moneda.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._monedaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._estado_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Estado_cuenta.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._estado_cuentaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._categoriaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Categoria.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._categoriaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bancosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Bancos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bancosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Cliente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tarjetas_creditoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tarjetas_credito.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tarjetas_creditoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._transaccionesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Transacciones.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._transaccionesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tipo_modificacionTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tipo_modificacion.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tipo_modificacionTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._chequeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Cheque.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._chequeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Cuenta.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cuentaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Funcionalidad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._funcionalidadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rolTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Rol.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rolTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._intentos_loginTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Intentos_login.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._intentos_loginTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tabladementiritas2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tabladementiritas2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tabladementiritas2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tipo_DNITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tipo_DNI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tipo_DNITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._usuario_rolTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Usuario_rol.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._usuario_rolTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._transferenciasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Transferencias.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._transferenciasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tabladementiritasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tabladementiritas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tabladementiritasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._modificacion_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Modificacion_cuenta.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._modificacion_cuentaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._retirosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Retiros.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._retirosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._intentos_fallidosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Intentos_fallidos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._intentos_fallidosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._maestraTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Maestra.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._maestraTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tabla_ClienteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tabla_Cliente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tabla_ClienteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tabla_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tabla_Clientes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tabla_ClientesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._depositosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Depositos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._depositosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rol_funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Rol_funcionalidad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rol_funcionalidadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(GD1C2015DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._localidadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Localidad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._localidadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._paisTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Pais.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._paisTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._usuarioTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Usuario.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._usuarioTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._estado_rolTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Estado_rol.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._estado_rolTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._estado_transaccionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Estado_transaccion.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._estado_transaccionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._monedaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Moneda.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._monedaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._estado_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Estado_cuenta.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._estado_cuentaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._categoriaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Categoria.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._categoriaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bancosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Bancos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bancosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Cliente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tarjetas_creditoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tarjetas_credito.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tarjetas_creditoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._transaccionesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Transacciones.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._transaccionesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tipo_modificacionTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tipo_modificacion.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tipo_modificacionTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._chequeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Cheque.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._chequeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Cuenta.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cuentaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Funcionalidad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._funcionalidadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rolTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Rol.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rolTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._intentos_loginTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Intentos_login.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._intentos_loginTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tabladementiritas2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tabladementiritas2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tabladementiritas2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tipo_DNITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tipo_DNI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tipo_DNITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._usuario_rolTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Usuario_rol.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._usuario_rolTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._transferenciasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Transferencias.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._transferenciasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tabladementiritasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tabladementiritas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tabladementiritasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._modificacion_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Modificacion_cuenta.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._modificacion_cuentaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._retirosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Retiros.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._retirosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._intentos_fallidosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Intentos_fallidos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._intentos_fallidosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._maestraTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Maestra.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._maestraTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tabla_ClienteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tabla_Cliente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tabla_ClienteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tabla_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tabla_Clientes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tabla_ClientesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._depositosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Depositos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._depositosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rol_funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Rol_funcionalidad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rol_funcionalidadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(GD1C2015DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rol_funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Rol_funcionalidad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rol_funcionalidadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._depositosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Depositos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._depositosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tabla_ClientesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tabla_Clientes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tabla_ClientesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tabla_ClienteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tabla_Cliente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tabla_ClienteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._maestraTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Maestra.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._maestraTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._intentos_fallidosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Intentos_fallidos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._intentos_fallidosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._retirosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Retiros.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._retirosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._modificacion_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Modificacion_cuenta.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._modificacion_cuentaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tabladementiritasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tabladementiritas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tabladementiritasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._transferenciasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Transferencias.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._transferenciasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._usuario_rolTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Usuario_rol.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._usuario_rolTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tipo_DNITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tipo_DNI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tipo_DNITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tabladementiritas2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tabladementiritas2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tabladementiritas2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._intentos_loginTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Intentos_login.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._intentos_loginTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rolTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Rol.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rolTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._funcionalidadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Funcionalidad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._funcionalidadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Cuenta.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cuentaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._chequeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Cheque.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._chequeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tipo_modificacionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tipo_modificacion.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tipo_modificacionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._transaccionesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Transacciones.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._transaccionesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tarjetas_creditoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tarjetas_credito.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tarjetas_creditoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Cliente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bancosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Bancos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bancosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._categoriaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Categoria.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._categoriaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._estado_cuentaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Estado_cuenta.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._estado_cuentaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._monedaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Moneda.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._monedaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._estado_transaccionTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Estado_transaccion.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._estado_transaccionTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._estado_rolTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Estado_rol.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._estado_rolTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._usuarioTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Usuario.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._usuarioTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._paisTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Pais.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._paisTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._localidadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Localidad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._localidadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(GD1C2015DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bancosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bancosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._categoriaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._categoriaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._chequeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._chequeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clienteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clienteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._cuentaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cuentaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._depositosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._depositosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._estado_cuentaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._estado_cuentaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._estado_rolTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._estado_rolTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._estado_transaccionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._estado_transaccionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._funcionalidadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._funcionalidadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._intentos_fallidosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._intentos_fallidosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._intentos_loginTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._intentos_loginTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._localidadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._localidadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._maestraTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._maestraTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._modificacion_cuentaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._modificacion_cuentaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._monedaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._monedaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._paisTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._paisTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._retirosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._retirosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rolTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rolTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rol_funcionalidadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rol_funcionalidadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tabla_ClienteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tabla_ClienteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tabla_ClientesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tabla_ClientesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tabladementiritasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tabladementiritasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tabladementiritas2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tabladementiritas2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tarjetas_creditoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tarjetas_creditoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tipo_DNITableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tipo_DNITableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tipo_modificacionTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tipo_modificacionTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._transaccionesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._transaccionesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._transferenciasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._transferenciasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._usuarioTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._usuarioTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._usuario_rolTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._usuario_rolTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bancosTableAdapter != null)) {
                    revertConnections.Add(this._bancosTableAdapter, this._bancosTableAdapter.Connection);
                    this._bancosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bancosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bancosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bancosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bancosTableAdapter.Adapter);
                    }
                }
                if ((this._categoriaTableAdapter != null)) {
                    revertConnections.Add(this._categoriaTableAdapter, this._categoriaTableAdapter.Connection);
                    this._categoriaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._categoriaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._categoriaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._categoriaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._categoriaTableAdapter.Adapter);
                    }
                }
                if ((this._chequeTableAdapter != null)) {
                    revertConnections.Add(this._chequeTableAdapter, this._chequeTableAdapter.Connection);
                    this._chequeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._chequeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._chequeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._chequeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._chequeTableAdapter.Adapter);
                    }
                }
                if ((this._clienteTableAdapter != null)) {
                    revertConnections.Add(this._clienteTableAdapter, this._clienteTableAdapter.Connection);
                    this._clienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._clienteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clienteTableAdapter.Adapter);
                    }
                }
                if ((this._cuentaTableAdapter != null)) {
                    revertConnections.Add(this._cuentaTableAdapter, this._cuentaTableAdapter.Connection);
                    this._cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cuentaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cuentaTableAdapter.Adapter);
                    }
                }
                if ((this._depositosTableAdapter != null)) {
                    revertConnections.Add(this._depositosTableAdapter, this._depositosTableAdapter.Connection);
                    this._depositosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._depositosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._depositosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._depositosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._depositosTableAdapter.Adapter);
                    }
                }
                if ((this._estado_cuentaTableAdapter != null)) {
                    revertConnections.Add(this._estado_cuentaTableAdapter, this._estado_cuentaTableAdapter.Connection);
                    this._estado_cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._estado_cuentaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._estado_cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._estado_cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._estado_cuentaTableAdapter.Adapter);
                    }
                }
                if ((this._estado_rolTableAdapter != null)) {
                    revertConnections.Add(this._estado_rolTableAdapter, this._estado_rolTableAdapter.Connection);
                    this._estado_rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._estado_rolTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._estado_rolTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._estado_rolTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._estado_rolTableAdapter.Adapter);
                    }
                }
                if ((this._estado_transaccionTableAdapter != null)) {
                    revertConnections.Add(this._estado_transaccionTableAdapter, this._estado_transaccionTableAdapter.Connection);
                    this._estado_transaccionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._estado_transaccionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._estado_transaccionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._estado_transaccionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._estado_transaccionTableAdapter.Adapter);
                    }
                }
                if ((this._funcionalidadTableAdapter != null)) {
                    revertConnections.Add(this._funcionalidadTableAdapter, this._funcionalidadTableAdapter.Connection);
                    this._funcionalidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._funcionalidadTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._funcionalidadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._funcionalidadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._funcionalidadTableAdapter.Adapter);
                    }
                }
                if ((this._intentos_fallidosTableAdapter != null)) {
                    revertConnections.Add(this._intentos_fallidosTableAdapter, this._intentos_fallidosTableAdapter.Connection);
                    this._intentos_fallidosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._intentos_fallidosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._intentos_fallidosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._intentos_fallidosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._intentos_fallidosTableAdapter.Adapter);
                    }
                }
                if ((this._intentos_loginTableAdapter != null)) {
                    revertConnections.Add(this._intentos_loginTableAdapter, this._intentos_loginTableAdapter.Connection);
                    this._intentos_loginTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._intentos_loginTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._intentos_loginTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._intentos_loginTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._intentos_loginTableAdapter.Adapter);
                    }
                }
                if ((this._localidadTableAdapter != null)) {
                    revertConnections.Add(this._localidadTableAdapter, this._localidadTableAdapter.Connection);
                    this._localidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._localidadTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._localidadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._localidadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._localidadTableAdapter.Adapter);
                    }
                }
                if ((this._maestraTableAdapter != null)) {
                    revertConnections.Add(this._maestraTableAdapter, this._maestraTableAdapter.Connection);
                    this._maestraTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._maestraTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._maestraTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._maestraTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._maestraTableAdapter.Adapter);
                    }
                }
                if ((this._modificacion_cuentaTableAdapter != null)) {
                    revertConnections.Add(this._modificacion_cuentaTableAdapter, this._modificacion_cuentaTableAdapter.Connection);
                    this._modificacion_cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._modificacion_cuentaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._modificacion_cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._modificacion_cuentaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._modificacion_cuentaTableAdapter.Adapter);
                    }
                }
                if ((this._monedaTableAdapter != null)) {
                    revertConnections.Add(this._monedaTableAdapter, this._monedaTableAdapter.Connection);
                    this._monedaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._monedaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._monedaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._monedaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._monedaTableAdapter.Adapter);
                    }
                }
                if ((this._paisTableAdapter != null)) {
                    revertConnections.Add(this._paisTableAdapter, this._paisTableAdapter.Connection);
                    this._paisTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._paisTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._paisTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._paisTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._paisTableAdapter.Adapter);
                    }
                }
                if ((this._retirosTableAdapter != null)) {
                    revertConnections.Add(this._retirosTableAdapter, this._retirosTableAdapter.Connection);
                    this._retirosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._retirosTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._retirosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._retirosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._retirosTableAdapter.Adapter);
                    }
                }
                if ((this._rolTableAdapter != null)) {
                    revertConnections.Add(this._rolTableAdapter, this._rolTableAdapter.Connection);
                    this._rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rolTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rolTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rolTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rolTableAdapter.Adapter);
                    }
                }
                if ((this._rol_funcionalidadTableAdapter != null)) {
                    revertConnections.Add(this._rol_funcionalidadTableAdapter, this._rol_funcionalidadTableAdapter.Connection);
                    this._rol_funcionalidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rol_funcionalidadTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rol_funcionalidadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rol_funcionalidadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rol_funcionalidadTableAdapter.Adapter);
                    }
                }
                if ((this._tabla_ClienteTableAdapter != null)) {
                    revertConnections.Add(this._tabla_ClienteTableAdapter, this._tabla_ClienteTableAdapter.Connection);
                    this._tabla_ClienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tabla_ClienteTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tabla_ClienteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tabla_ClienteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tabla_ClienteTableAdapter.Adapter);
                    }
                }
                if ((this._tabla_ClientesTableAdapter != null)) {
                    revertConnections.Add(this._tabla_ClientesTableAdapter, this._tabla_ClientesTableAdapter.Connection);
                    this._tabla_ClientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tabla_ClientesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tabla_ClientesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tabla_ClientesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tabla_ClientesTableAdapter.Adapter);
                    }
                }
                if ((this._tabladementiritasTableAdapter != null)) {
                    revertConnections.Add(this._tabladementiritasTableAdapter, this._tabladementiritasTableAdapter.Connection);
                    this._tabladementiritasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tabladementiritasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tabladementiritasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tabladementiritasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tabladementiritasTableAdapter.Adapter);
                    }
                }
                if ((this._tabladementiritas2TableAdapter != null)) {
                    revertConnections.Add(this._tabladementiritas2TableAdapter, this._tabladementiritas2TableAdapter.Connection);
                    this._tabladementiritas2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tabladementiritas2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tabladementiritas2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tabladementiritas2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tabladementiritas2TableAdapter.Adapter);
                    }
                }
                if ((this._tarjetas_creditoTableAdapter != null)) {
                    revertConnections.Add(this._tarjetas_creditoTableAdapter, this._tarjetas_creditoTableAdapter.Connection);
                    this._tarjetas_creditoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tarjetas_creditoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tarjetas_creditoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tarjetas_creditoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tarjetas_creditoTableAdapter.Adapter);
                    }
                }
                if ((this._tipo_DNITableAdapter != null)) {
                    revertConnections.Add(this._tipo_DNITableAdapter, this._tipo_DNITableAdapter.Connection);
                    this._tipo_DNITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tipo_DNITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tipo_DNITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tipo_DNITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tipo_DNITableAdapter.Adapter);
                    }
                }
                if ((this._tipo_modificacionTableAdapter != null)) {
                    revertConnections.Add(this._tipo_modificacionTableAdapter, this._tipo_modificacionTableAdapter.Connection);
                    this._tipo_modificacionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tipo_modificacionTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tipo_modificacionTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tipo_modificacionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tipo_modificacionTableAdapter.Adapter);
                    }
                }
                if ((this._transaccionesTableAdapter != null)) {
                    revertConnections.Add(this._transaccionesTableAdapter, this._transaccionesTableAdapter.Connection);
                    this._transaccionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._transaccionesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._transaccionesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._transaccionesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._transaccionesTableAdapter.Adapter);
                    }
                }
                if ((this._transferenciasTableAdapter != null)) {
                    revertConnections.Add(this._transferenciasTableAdapter, this._transferenciasTableAdapter.Connection);
                    this._transferenciasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._transferenciasTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._transferenciasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._transferenciasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._transferenciasTableAdapter.Adapter);
                    }
                }
                if ((this._usuarioTableAdapter != null)) {
                    revertConnections.Add(this._usuarioTableAdapter, this._usuarioTableAdapter.Connection);
                    this._usuarioTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._usuarioTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._usuarioTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._usuarioTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._usuarioTableAdapter.Adapter);
                    }
                }
                if ((this._usuario_rolTableAdapter != null)) {
                    revertConnections.Add(this._usuario_rolTableAdapter, this._usuario_rolTableAdapter.Connection);
                    this._usuario_rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._usuario_rolTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._usuario_rolTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._usuario_rolTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._usuario_rolTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bancosTableAdapter != null)) {
                    this._bancosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bancosTableAdapter]));
                    this._bancosTableAdapter.Transaction = null;
                }
                if ((this._categoriaTableAdapter != null)) {
                    this._categoriaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._categoriaTableAdapter]));
                    this._categoriaTableAdapter.Transaction = null;
                }
                if ((this._chequeTableAdapter != null)) {
                    this._chequeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._chequeTableAdapter]));
                    this._chequeTableAdapter.Transaction = null;
                }
                if ((this._clienteTableAdapter != null)) {
                    this._clienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._clienteTableAdapter]));
                    this._clienteTableAdapter.Transaction = null;
                }
                if ((this._cuentaTableAdapter != null)) {
                    this._cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cuentaTableAdapter]));
                    this._cuentaTableAdapter.Transaction = null;
                }
                if ((this._depositosTableAdapter != null)) {
                    this._depositosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._depositosTableAdapter]));
                    this._depositosTableAdapter.Transaction = null;
                }
                if ((this._estado_cuentaTableAdapter != null)) {
                    this._estado_cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._estado_cuentaTableAdapter]));
                    this._estado_cuentaTableAdapter.Transaction = null;
                }
                if ((this._estado_rolTableAdapter != null)) {
                    this._estado_rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._estado_rolTableAdapter]));
                    this._estado_rolTableAdapter.Transaction = null;
                }
                if ((this._estado_transaccionTableAdapter != null)) {
                    this._estado_transaccionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._estado_transaccionTableAdapter]));
                    this._estado_transaccionTableAdapter.Transaction = null;
                }
                if ((this._funcionalidadTableAdapter != null)) {
                    this._funcionalidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._funcionalidadTableAdapter]));
                    this._funcionalidadTableAdapter.Transaction = null;
                }
                if ((this._intentos_fallidosTableAdapter != null)) {
                    this._intentos_fallidosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._intentos_fallidosTableAdapter]));
                    this._intentos_fallidosTableAdapter.Transaction = null;
                }
                if ((this._intentos_loginTableAdapter != null)) {
                    this._intentos_loginTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._intentos_loginTableAdapter]));
                    this._intentos_loginTableAdapter.Transaction = null;
                }
                if ((this._localidadTableAdapter != null)) {
                    this._localidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._localidadTableAdapter]));
                    this._localidadTableAdapter.Transaction = null;
                }
                if ((this._maestraTableAdapter != null)) {
                    this._maestraTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._maestraTableAdapter]));
                    this._maestraTableAdapter.Transaction = null;
                }
                if ((this._modificacion_cuentaTableAdapter != null)) {
                    this._modificacion_cuentaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._modificacion_cuentaTableAdapter]));
                    this._modificacion_cuentaTableAdapter.Transaction = null;
                }
                if ((this._monedaTableAdapter != null)) {
                    this._monedaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._monedaTableAdapter]));
                    this._monedaTableAdapter.Transaction = null;
                }
                if ((this._paisTableAdapter != null)) {
                    this._paisTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._paisTableAdapter]));
                    this._paisTableAdapter.Transaction = null;
                }
                if ((this._retirosTableAdapter != null)) {
                    this._retirosTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._retirosTableAdapter]));
                    this._retirosTableAdapter.Transaction = null;
                }
                if ((this._rolTableAdapter != null)) {
                    this._rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rolTableAdapter]));
                    this._rolTableAdapter.Transaction = null;
                }
                if ((this._rol_funcionalidadTableAdapter != null)) {
                    this._rol_funcionalidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rol_funcionalidadTableAdapter]));
                    this._rol_funcionalidadTableAdapter.Transaction = null;
                }
                if ((this._tabla_ClienteTableAdapter != null)) {
                    this._tabla_ClienteTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tabla_ClienteTableAdapter]));
                    this._tabla_ClienteTableAdapter.Transaction = null;
                }
                if ((this._tabla_ClientesTableAdapter != null)) {
                    this._tabla_ClientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tabla_ClientesTableAdapter]));
                    this._tabla_ClientesTableAdapter.Transaction = null;
                }
                if ((this._tabladementiritasTableAdapter != null)) {
                    this._tabladementiritasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tabladementiritasTableAdapter]));
                    this._tabladementiritasTableAdapter.Transaction = null;
                }
                if ((this._tabladementiritas2TableAdapter != null)) {
                    this._tabladementiritas2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tabladementiritas2TableAdapter]));
                    this._tabladementiritas2TableAdapter.Transaction = null;
                }
                if ((this._tarjetas_creditoTableAdapter != null)) {
                    this._tarjetas_creditoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tarjetas_creditoTableAdapter]));
                    this._tarjetas_creditoTableAdapter.Transaction = null;
                }
                if ((this._tipo_DNITableAdapter != null)) {
                    this._tipo_DNITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tipo_DNITableAdapter]));
                    this._tipo_DNITableAdapter.Transaction = null;
                }
                if ((this._tipo_modificacionTableAdapter != null)) {
                    this._tipo_modificacionTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tipo_modificacionTableAdapter]));
                    this._tipo_modificacionTableAdapter.Transaction = null;
                }
                if ((this._transaccionesTableAdapter != null)) {
                    this._transaccionesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._transaccionesTableAdapter]));
                    this._transaccionesTableAdapter.Transaction = null;
                }
                if ((this._transferenciasTableAdapter != null)) {
                    this._transferenciasTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._transferenciasTableAdapter]));
                    this._transferenciasTableAdapter.Transaction = null;
                }
                if ((this._usuarioTableAdapter != null)) {
                    this._usuarioTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._usuarioTableAdapter]));
                    this._usuarioTableAdapter.Transaction = null;
                }
                if ((this._usuario_rolTableAdapter != null)) {
                    this._usuario_rolTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._usuario_rolTableAdapter]));
                    this._usuario_rolTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591